<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type='text/xsl' href='http://xml2rfc.tools.ietf.org/authoring/rfc2629.xslt' ?>
<!DOCTYPE rfc PUBLIC "-//IETF//DTD RFC 2629//EN"
"http://xml2rfc.tools.ietf.org/authoring/rfc2629.dtd">
<!--
  NOTE:  This XML file is input used to produce the authoritative copy of an
  OpenID Foundation specification.  The authoritative copy is the HTML output.
  This XML source file is not authoritative.  The statement ipr="none" is
  present only to satisfy the document compilation tool and is not indicative
  of the IPR status of this specification.  The IPR for this specification is
  described in the "Notices" section.  This is a public OpenID Foundation
  document and not a private document, as the private="..." declaration could
  be taken to indicate.
-->
<rfc category="std" docName="openid-connect-core-1_0" ipr="none">

  <?rfc toc="yes" ?>
  <?rfc tocdepth="5" ?>
  <?rfc symrefs="yes" ?>
  <?rfc sortrefs="yes"?>
  <?rfc strict="yes" ?>
  <?rfc iprnotified="no" ?>
  <?rfc private="Final" ?>

  <front>
    <title abbrev="OpenID Connect Core 1.0">OpenID Connect Core 1.0 incorporating errata set 1</title>

    <author fullname="Nat Sakimura" initials="N." surname="Sakimura">
      <organization abbrev="NRI">Nomura Research Institute, Ltd.</organization>
      <address>
        <email>n-sakimura@nri.co.jp</email>
        <uri>http://nat.sakimura.org/</uri>
      </address>
    </author>

    <author fullname="John Bradley" initials="J." surname="Bradley">
      <organization abbrev="Ping Identity">Ping Identity</organization>
      <address>
        <email>ve7jtb@ve7jtb.com</email>
        <uri>http://www.thread-safe.com/</uri>
      </address>
    </author>

    <author fullname="Michael B. Jones" initials="M.B." surname="Jones">
      <organization abbrev="Microsoft">Microsoft</organization>
      <address>
        <email>mbj@microsoft.com</email>
        <uri>http://self-issued.info/</uri>
      </address>
    </author>

    <author fullname="Breno de Medeiros" initials="B." surname="de Medeiros">
      <organization abbrev="Google">Google</organization>
      <address>
        <email>breno@google.com</email>
        <uri>http://stackoverflow.com/users/311376/breno</uri>
      </address>
    </author>

    <author fullname="Chuck Mortimore" initials="C." surname="Mortimore">
      <organization abbrev="Salesforce">Salesforce</organization>
      <address>
        <email>cmortimore@salesforce.com</email>
        <uri>https://twitter.com/cmort</uri>
      </address>
    </author>

    <date day="8" month="November" year="2014" />

    <workgroup>OpenID Connect Working Group</workgroup>

    <abstract>
      <t>
        OpenID Connect 1.0 は, OAuth 2.0 プロトコルの上にシンプルなアイデンティティレイヤーを付与したものである.
        このプロトコルは Client が Authorization Server の認証結果に基づいて End-User のアイデンティティを検証可能にする.
        また同時に End-User の必要最低限のプロフィール情報を, 相互運用可能かつ RESTful な形で取得することも可能にする.
      </t>
      <!--
      <t>OpenID Connect 1.0 is a simple identity layer on top of the OAuth 2.0
      protocol. It enables Clients to verify the identity of the End-User based
      on the authentication performed by an Authorization Server, as well as to
      obtain basic profile information about the End-User in an interoperable and
      REST-like manner.</t>
      -->

      <t>
        この仕様は, OpenID Connect の主要な機能である OAuth 2.0 上で End-User の情報伝達のために Claim を用いる認証機能 を定義する.
        この仕様はまた, OpenID Connect を利用するための Security, Privacy Considerations を説明する.
      </t>
      <!--
      <t>
        This specification defines
        the core OpenID Connect functionality:
        authentication built on top of OAuth 2.0 and
        the use of Claims to communicate information about the End-User.
        It also describes the security and privacy considerations for using OpenID Connect.
      </t>
      -->
    </abstract>
  </front>

  <middle>
    <section anchor='Introduction' title='Introduction'>

      <t>
        OpenID Connect 1.0 は, OAuth 2.0 <xref target="RFC6749"/> プロトコルの上にシンプルなアイデンティティレイヤーを付与したものである.
        このプロトコルは Client が Authorization Server の認証結果に基づいて End-User のアイデンティティを検証可能にする.
        また同時に End-User の必要最低限のプロフィール情報を, 相互運用可能かつ RESTful な形で取得することも可能にする.
      </t>
      <!--
      <t>
        OpenID Connect 1.0 is a simple identity layer on top of the OAuth 2.0
        <xref target="RFC6749"/>
        protocol. It enables Clients to verify the identity of the End-User based
        on the authentication performed by an Authorization Server, as well as to
        obtain basic profile information about the End-User in an interoperable and
        REST-like manner.
      </t>
      -->
      <t>
        OpenID Connect Core 1.0 仕様は, OpenID Connect の主要な機能である OAuth 2.0 上で End-User の情報伝達のために Claim を用いる認証機能 を定義する.
        この仕様はまた, OpenID Connect を利用するための Security, Privacy Considerations を説明する.
      </t>
      <!--
      <t>
        The OpenID Connect Core 1.0 specification defines
        the core OpenID Connect functionality:
        authentication built on top of OAuth 2.0 and
        the use of Claims to communicate information about the End-User.
        It also describes the security and privacy considerations for using OpenID Connect.
      </t>
      -->

      <t>
        OpenID Connect のベースとなる <xref target="RFC6749">OAuth 2.0 Authorization Framework</xref> と <xref target="RFC6750">OAuth 2.0 Bearer Token Usage</xref> は, 3rd-party アプリケーションが HTTP リソースへの制限付きアクセス権を取得および行使するための全般的フレームワークを提供している.
        これらはリソースアクセスのための Access Token を取得および行使する方法は定義するが, アイデンティティ情報を提供するための標準的手段は定義しない.
        とりわけ, OAuth 2.0 のプロファイリングを行わずに End-User の認証に必要な情報を提供することは不可能である.
        本ドキュメント読者は上記2つの仕様を理解していることが期待される.
      </t>
      <!--
      <t>
        As background,
        the <xref target="RFC6749">OAuth 2.0 Authorization Framework</xref>
        and <xref target="RFC6750">OAuth 2.0 Bearer Token Usage</xref>
        specifications provide a general framework for third-party applications
        to obtain and use limited access to HTTP resources.  They define
        mechanisms to obtain and use Access Tokens to access resources but
        do not define standard methods to provide identity information.
        Notably, without profiling OAuth 2.0, it is incapable of
        providing information about the authentication of an End-User.
        Readers are expected to be familiar with these specifications.
      </t>
      -->
      <t>
        OpenID Connect は OAuth 2.0 認可プロセスを拡張し, 認証目的で利用できるようにする.
        本拡張を利用する場合, Client は <spanx style="verb">openid</spanx> scope を指定して Authorization Request を送信する.
        認証結果は ID Token (<xref target="IDToken"/> 参照) と呼ばれる <xref target="JWT">JSON Web Token (JWT)</xref> として返される.
        OpenID Connect をサポートする OAuth 2.0 Authentication Server は, OpenID Provider (OP) とも呼ばれる.
        OpenID Connect を利用する OAuth 2.0 Client は Relying Party (RP) とも呼ばれる.
      </t>
      <!--
      <t>
        OpenID Connect implements authentication as an extension to the
        OAuth 2.0 authorization process.
        Use of this extension is requested by Clients by including
        the <spanx style="verb">openid</spanx> scope value
        in the Authorization Request.
        Information about the authentication performed is returned
        in a <xref target="JWT">JSON Web Token (JWT)</xref>
        called an ID Token (see <xref target="IDToken"/>).
        OAuth 2.0 Authentication Servers implementing OpenID Connect
        are also referred to as OpenID Providers (OPs).
        OAuth 2.0 Clients using OpenID Connect
        are also referred to as Relying Parties (RPs).
      </t>
      -->
      <t>
        本ドキュメントでは, Relying Party は既に Authorization Endpoint, Token Endpoint 等を含む OpenID Provider の設定情報を既に得ているものとする.
        これらの情報は通常 <xref target="OpenID.Discovery">OpenID Connect Discovery 1.0</xref> にある Discovery を通じて得られるが, その他の手段で得られることもある.
      </t>
      <!--
      <t>
        This specification assumes that the Relying Party has already obtained
        configuration information about the OpenID Provider, including its
        Authorization Endpoint and Token Endpoint locations.
        This information is normally obtained via Discovery,
        as described in <xref target="OpenID.Discovery">OpenID Connect Discovery 1.0</xref>,
        or may be obtained via other mechanisms.
      </t>
      -->
      <t>
        また同様に, Relying Party は OpenID Provider 利用に必要なクレデンシャルを取得し, OP 利用に必要な情報を登録しているものとする.
        これの処理は通常 <xref target="OpenID.Registration">OpenID Connect Dynamic Client Registration 1.0</xref> にある Dynamic Registration を通じて行われるが, その他の手段で行われることもある.
      </t>
      <!--
      <t>
        Likewise, this specification assumes that the Relying Party has already obtained
        sufficient credentials and provided information needed to use the OpenID Provider.
        This is normally done via Dynamic Registration,
        as described in
        <xref target="OpenID.Registration">OpenID Connect Dynamic Client Registration 1.0</xref>,
        or may be obtained via other mechanisms.
      </t>
      -->

      <section anchor="rnc" title="Requirements Notation and Conventions">
        <t>
          本ドキュメント中の "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", および "OPTIONAL" の意味するところは, <xref target="RFC2119"/> の定める通りである.
        </t>
        <!--
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this
        document are to be interpreted as described in <xref
        target="RFC2119">RFC 2119</xref>.</t>
        -->

        <t>
          本ドキュメントの .txt バージョンでは, 表記そのままで利用される値についてはクオートで囲んでいる.
          このような値をプロトコルメッセージ中で用いる場合, クオートを含めてはならない (MUST NOT).
          HTML バージョンではクオートで囲う代わりに <spanx style="verb">this fixed-width font</spanx> を用いる.
        </t>
        <!--
        <t>
          In the .txt version of this document,
          values are quoted to indicate that they are to be taken literally.
          When using these values in protocol messages,
          the quotes MUST NOT be used as part of the value.
          In the HTML version of this document,
          values to be taken literally are indicated by
          the use of <spanx style="verb">this fixed-width font</spanx>.
        </t>
        -->
        <t>
          <xref target="JWS">JSON Web Signature (JWS)</xref> と <xref target="JWE">JSON Web Encryption (JWE)</xref> を用いる場合, シリアライゼーションには JWS Compact Serialization と JWE Compact Serialization を用いる.
          JWS JSON Serialization と JWE JSON Serialization は利用しない.
        </t>
        <!--
        <t>
          All uses of <xref target="JWS">JSON Web Signature (JWS)</xref>
          and <xref target="JWE">JSON Web Encryption (JWE)</xref>
          data structures in this specification utilize
          the JWS Compact Serialization or the JWE Compact Serialization;
          the JWS JSON Serialization and the JWE JSON Serialization are not used.
        </t>
        -->
      </section>

      <section anchor="Terminology" title="Terminology">
        <t>
          本ドキュメントでは,
          <xref target="RFC6749">OAuth 2.0</xref> で定義された "Access Token", "Authorization Code",
          "Authorization Endpoint", "Authorization Grant", "Authorization Server",
          "Client", "Client Authentication", "Client Identifier", "Client Secret",
          "Grant Type", "Protected Resource", "Redirection URI", "Refresh Token",
          "Resource Owner", "Resource Server", "Response Type", および "Token Endpoint"
          <xref target="JWT">JSON Web Token (JWT)</xref> で定義された "Claim Name", "Claim Value", "JSON Web Token (JWT)", "JWT Claims Set", および "Nested JWT",
          <xref target="JWS">JSON Web Signature (JWS)</xref> で定義された "Header Parameter" および "JOSE Header",
          <xref target="RFC2616">RFC 2616</xref> で定義された "User Agent",
          <xref target="OAuth.Responses">OAuth 2.0 Multiple Response Type Encoding Practices</xref> で定義された "Response Mode" という用語を用いる.
        </t>
        <!--
        <t>
          This specification uses the terms "Access Token", "Authorization Code",
          "Authorization Endpoint", "Authorization Grant", "Authorization Server",
          "Client", "Client Authentication", "Client Identifier", "Client Secret",
          "Grant Type", "Protected Resource", "Redirection URI", "Refresh Token",
          "Resource Owner", "Resource Server", "Response Type", and "Token Endpoint"
          defined by <xref target="RFC6749">OAuth 2.0</xref>,
          the terms "Claim Name", "Claim Value", "JSON Web Token (JWT)",
          "JWT Claims Set", and "Nested JWT"
          defined by <xref target="JWT">JSON Web Token (JWT)</xref>,
          the terms "Header Parameter" and "JOSE Header"
          defined by <xref target="JWS">JSON Web Signature (JWS)</xref>,
          the term "User Agent" defined by <xref target="RFC2616">RFC 2616</xref>,
          and the term "Response Mode" defined by
          <xref target="OAuth.Responses">OAuth 2.0 Multiple Response Type Encoding Practices</xref>.
        </t>
        -->
        <t>
          本ドキュメントはその他に以下の用語を用いる.
          <!--
          This specification also defines the following terms:
          -->
          <list style="hanging">
            <t hangText="Authentication">
              <vspace/>
              提示された Identity と実際の Entity が紐づいていることを確認するプロセス.
              <!--
              Process used to achieve sufficient confidence in the binding
              between the Entity and the presented Identity.
              -->
            </t>
            <t hangText="Authentication Request">
              <vspace/>
              OpenID Connect が定める拡張パラメータおよびスコープを利用して, Authorization Server に End-User の認証を要求する OAuth 2.0 Authorization Request.
              このとき Authorization Server は OpenID Connect Provider, Client は OpenID Connect Relying Party となる.
              <!--
              OAuth 2.0 Authorization Request using extension parameters and scopes
              defined by OpenID Connect to request that the End-User be authenticated
              by the Authorization Server, which is an OpenID Connect Provider,
              to the Client, which is an OpenID Connect Relying Party.
              -->
            </t>

            <t hangText="Authentication Context">
              <vspace/>
              認証応答に関する意思決定を行う前に Relying Party が要求できる情報.
              そのようなコンテキストは実際に用いられた認証方式や <xref target="ISO29115">ISO/IEC 29115</xref> entity authentication assurance level のような保障レベルを含むが, これに限定されるものではない.
              <!--
              Information that the Relying Party can require before it makes an
              entitlement decision with respect to an authentication response.
              Such context can include, but is not limited to, the actual
              authentication method used or level of assurance such as
              <xref target="ISO29115">ISO/IEC 29115</xref>
              entity authentication assurance level.
              -->
            </t>

            <t hangText="Authentication Context Class">
              <vspace/>
              特定のコンテキストで互いに等しいと考えられる認証方式もしくは手続きの集合.
              <!--
              Set of authentication methods or procedures that are considered
              to be equivalent to each other in a particular context.
              -->
            </t>

            <t hangText="Authentication Context Class Reference">
              <vspace/>
              Authentication Context Class の識別子.
              <!--
              Identifier for an Authentication Context Class.
              -->
            </t>

            <t hangText="Authorization Code Flow">
              <vspace/>
              Authorization Code が Authorization Endpoint から返され, 全てのトークンが Token Endpoint から返されるOAuth 2.0 のフロー.
              <!--
              OAuth 2.0 flow in which
              an Authorization Code is returned from the Authorization Endpoint and
              all tokens are returned from the Token Endpoint.
              -->
            </t>

            <t hangText="Authorization Request">
              <vspace/>
              <xref target="RFC6749"/> にて定義された OAuth 2.0 Authorization Request.
              <!--
              OAuth 2.0 Authorization Request as defined by <xref target="RFC6749"/>.
              -->
            </t>

            <t hangText="Claim">
              <vspace/>
              Entity に関する情報の部分集合.
              <!--
              Piece of information asserted about an Entity.
              -->
            </t>

            <t hangText="Claim Type">
              <vspace/>
              Claim の値を表現する構文.
              本仕様では Normal, Aggregated, および Distributed という Claim Type を定義する.
              <!--
              Syntax used for representing a Claim Value.
              This specification defines Normal, Aggregated, and Distributed Claim Types.
              -->
            </t>

            <t hangText="Claims Provider">
              <vspace/>
              Entity の Claim を返すサーバー.
              <!--
              Server that can return Claims about an Entity.
              -->
            </t>

            <t hangText="Credential">
              <vspace/>
              Identity や他のリソースを使用する権利があることの証拠として提示されるデータ.
              <!--
              Data presented as evidence of the right to use an identity
              or other resources.
              -->
            </t>

            <t hangText="End-User">
              <vspace/>
              一連のフローに参加する人間.
              <!--
              Human participant.
              -->
            </t>
            <t hangText="Entity">
              <vspace/>
              あるコンテキストの中で識別される, 他と独立した個.
              End-User は Entity の一例.
              <!--
              Something that has a separate and distinct existence and that can be
              identified in a context. An End-User is one example of an Entity.
              -->
            </t>

            <t hangText="Essential Claim">
              <vspace/>
              Client により指定される Claim.
              End-User により要求された特定のタスクに対して円滑な認可処理を確保するために必要とされている.
              <!--
              Claim specified by the Client as being necessary to ensure a smooth
              authorization experience for the specific task requested by the End-User.
              -->
            </t>

            <t hangText="Hybrid Flow">
              <vspace/>
              Authorization Code といくつかのトークンが Authorization Endpoint から返され, その他のトークンが Token Endpoint から返される OAuth 2.0 のフロー.
              <!--
              OAuth 2.0 flow in which
              an Authorization Code is returned from the Authorization Endpoint,
              some tokens are returned from the Authorization Endpoint,
              and others are returned from the Token Endpoint.
              -->
            </t>

            <t hangText="ID Token">
              <vspace/>
              Authentication イベントに関する Claim を含む <xref target="JWT">JSON Web Token (JWT)</xref>.
              その他の Claim を含むこともある (MAY).
              <!--
              <xref target="JWT">JSON Web Token (JWT)</xref> that contains Claims about the Authentication event.
              It MAY contain other Claims.
              -->
            </t>

            <t hangText="Identifier">
              <vspace/>
              あるコンテキスト中で Entity をユニークに特徴づける値.
              <!--
              Value that uniquely characterizes an Entity in a specific context.
              -->
            </t>

            <t hangText="Identity">
              <vspace/>
              Entity に関する属性の集合.
              <!--
              Set of attributes related to an Entity.
              -->
            </t>

            <t hangText="Implicit Flow">
              <vspace/>
              全てのトークンが Authorization Endpoint から返され, Token Endpoint も Authorization Code も利用されない OAuth 2.0 のフロー.
              <!--
              OAuth 2.0 flow in which all tokens are returned from the Authorization Endpoint
              and neither the Token Endpoint nor an Authorization Code are used.
              -->
            </t>

            <t hangText="Issuer">
              <vspace/>
              Claim の集合を発行する Entity.
              <!--
              Entity that issues a set of Claims.
              -->
            </t>

            <t hangText="Issuer Identifier">
              <vspace/>
              検証可能な Issuer の識別子.
              Issuer Identifier は, 大文字小文字を区別する URL である.
              この URL は <spanx style="verb">https</spanx> スキーム, ホスト, そして任意でポート番号およびパス要素からなり, クエリーとフラグメント要素は含まない.
              <!--
              Verifiable Identifier for an Issuer.
              An Issuer Identifier is a case sensitive URL
              using the <spanx style="verb">https</spanx> scheme that
              contains scheme, host, and optionally, port number and path
              components and no query or fragment components.
              -->
            </t>

            <t hangText="Message">
              <vspace/>
              OpenID Relying Party と OpenID Provider の間でやりとりされるリクエストもしくはレスポンス.
              <!--
              Request or a response between an OpenID
              Relying Party and an OpenID Provider.
              -->
            </t>

            <t hangText="OpenID Provider (OP)">
              <vspace/>
              End-User を Authenticate できる OAuth 2.0 Authorization Server.
              End-User の Authentication イベントに関する Claim を Relying Party に提供する.
              <!--
              OAuth 2.0 Authorization Server that is capable of
              Authenticating the End-User and
              providing Claims to a Relying Party
              about the Authentication event and the End-User.
              -->
            </t>

            <t hangText="Request Object">
              <vspace/>
              Claim としてリクエストパラメータを含む JWT.
              <!--
              JWT that contains a set of request parameters as its Claims.
              -->
            </t>

            <t hangText="Request URI">
              <vspace/>
              Request Object を含むリソースを参照する URL.
              Request URI のコンテンツは Authorization Server から取得可能でなければならない (MUST).
              <!--
              URL that references a resource containing a Request Object.
              The Request URI contents MUST be retrievable by the
              Authorization Server.
              -->
            </t>

            <t hangText="Pairwise Pseudonymous Identifier (PPID)">
              <vspace/>
              ある Relying Party に対してのみ, ある Entity の識別子として提供される値.
              他の Relying Party には, 当該 PPID を当該 Entity と関連づけることはできない.
              <!--
              Identifier that identifies the Entity to a Relying Party that cannot be correlated
              with the Entity's PPID at another Relying Party.
              -->
            </t>

            <t hangText="Personally Identifiable Information (PII)">
              <vspace/>
              特定の人物に紐づき, 実際の人物の識別に用いることができる情報.
              もしくは特定の人物に直接および間接的にリンクされる可能性のある情報.
              <!--
              Information that (a) can be used to identify the natural person
              to whom such information relates, or
              (b) is or might be directly or indirectly linked to a
              natural person to whom such information relates.
              -->
            </t>

            <t hangText="Relying Party (RP)">
              <vspace/>
              OpenID Provider に End-User Authentication と Claim を要求する OAuth 2.0 Client.
              <!--
              OAuth 2.0 Client application requiring End-User Authentication
              and Claims from an OpenID Provider.
              -->
            </t>

            <t hangText="Sector Identifier">
              <vspace/>
              Relying Party により利用される URL のホスト要素.
              Relying Party に対する Subject Identifier 計算の入力となる.
              <!--
              Host component of a URL used by the Relying Party's organization
              that is an input to the computation of pairwise Subject Identifiers
              for that Relying Party.
              -->
            </t>

            <t hangText="Self-Issued OpenID Provider">
              <vspace/>
              自己署名の ID Token を発行する, 個人的で self-hosted な OpenID Provider.
              <!--
              Personal, self-hosted OpenID Provider that issues self-signed ID Tokens.
              -->
            </t>

            <t hangText="Subject Identifier">
              <vspace/>
              Issuer にとって局地的にユニークで再利用されることのない End-User 識別子.
              この値は Client に利用されることを想定する.
              <!--
              Locally unique and never
              reassigned identifier within the Issuer for the End-User,
              which is intended to be consumed by the Client.
              -->
            </t>

            <t hangText="UserInfo Endpoint">
              <vspace/>
              Protected Resource のひとつ.
              Access Token を提示する Client に対して, Authorization Grant に従って End-User に関する情報を提供する.
              URLは <spanx style="verb">https</spanx> scheme を利用しなければならず (MUST), ポート番号, パス, クエリパラメータの要素を含むことがある (MAY).
              <!--
              Protected Resource that, when presented with an Access Token by the Client,
              returns authorized information about the End-User represented by the corresponding
              Authorization Grant.
              The UserInfo Endpoint
              URL MUST use the <spanx style="verb">https</spanx> scheme and MAY contain
              port, path, and query parameter components.
              -->
            </t>

            <t hangText="Validation">
              <vspace/>
              あるものごとの健全性および正当性を確立するためのプロセス.
              <!--
              Process intended to establish the soundness or correctness of a construct.
              -->
            </t>

            <t hangText="Verification">
              <vspace/>
              ある事実や値の正確さを検査もしくは証明するためのプロセス.
              <!--
              Process intended to test or prove the truth or accuracy of a fact or value.
              -->
            </t>

            <t hangText="Voluntary Claim">
              <vspace/>
              Client が End-User が要求するあるタスクを実行する際に, 有用ではあるが Essential ではないとを Client が指定した Claim.
              <!--
              Claim specified by the Client as being useful but not Essential
              for the specific task requested by the End-User.
              -->
            </t>

          </list>
        </t>
        <t>
          IMPORTANT NOTE TO READERS:
          上記の用語定義は本仕様が定めるところであり, 本仕様の実装においてはこれらの定義に従うこと.
          "Issuer Identifier" をはじめとして, 本仕様で大文字表記されている用語はすべて上記の定義に従う.
          仕様書読者は必ずこれらの用語定義に従うこと.
        </t>
        <!--
        <t>
          IMPORTANT NOTE TO READERS: The terminology definitions in
          this section are a normative portion of this specification,
          imposing requirements upon implementations.  All the
          capitalized words in the text of this specification, such as
          "Issuer Identifier", reference these defined terms.
          Whenever the reader encounters them, their definitions
          found in this section must be followed.
        </t>
        -->
        <t>
          利用される用語の一部分の詳細を知るために, <xref target="RFC4949">Internet Security Glossary, Version 2</xref>, <xref target="ISO29115">ISO/IEC 29115 Entity Authentication Assurance</xref>, および <xref target="X.1252">ITU-T X.1252</xref> を参照すること.
        </t>
        <!--
        <t>
          For more background on some of the terminology used,
          see <xref target="RFC4949">Internet Security Glossary, Version 2</xref>,
          <xref target="ISO29115">ISO/IEC 29115 Entity Authentication Assurance</xref>,
          and <xref target="X.1252">ITU-T X.1252</xref>.
        </t>
        -->
      </section>

      <section anchor="Overview" title="Overview">

        <t>
          OpenID Connect プロトコルは, おおまかに言って以下のステップに従う.
        </t>
        <!--
        <t>The OpenID Connect protocol, in abstract, follows the following
        steps.</t>
        -->

        <t>
          <list style="numbers">
            <t>
              RP (Client) が OpenID Provider (OP) にリクエストを送る.
            </t>
            <!--
            <t>The RP (Client) sends a request to the OpenID Provider (OP).</t>
            -->

            <t>
              OP は End-User を認証し, 認可を受ける.
            </t>
            <!--
            <t>The OP authenticates the End-User and obtains authorization.</t>
            -->

            <t>
              OP は ID Token および (通常は) Access Token を返す.
            </t>
            <!--
            <t>The OP responds with an ID Token and usually an Access Token.</t>
            -->

            <t>
              RP は Access Token を添えて UserInfo Endpoint にリクエストを送る.
            </t>
            <!--
            <t>The RP can send a request with the Access Token to the UserInfo Endpoint.</t>
            -->

            <t>
              UserInfo Endpoint は End-User の Claim を返す.
            </t>
            <!--
            <t>The UserInfo Endpoint returns Claims about the End-User.</t>
            -->

          </list>
        </t>

        <figure>
          <preamble>
            これら一連のステップを以下に図示する.
            <!--
            These steps are illustrated in the following diagram:
            -->
          </preamble>

          <artwork><![CDATA[
+--------+                                   +--------+
|        |                                   |        |
|        |---------(1) AuthN Request-------->|        |
|        |                                   |        |
|        |  +--------+                       |        |
|        |  |        |                       |        |
|        |  |  End-  |<--(2) AuthN & AuthZ-->|        |
|        |  |  User  |                       |        |
|   RP   |  |        |                       |   OP   |
|        |  +--------+                       |        |
|        |                                   |        |
|        |<--------(3) AuthN Response--------|        |
|        |                                   |        |
|        |---------(4) UserInfo Request----->|        |
|        |                                   |        |
|        |<--------(5) UserInfo Response-----|        |
|        |                                   |        |
+--------+                                   +--------+
]]></artwork>
        </figure>

      </section>
    </section>

    <section anchor="IDToken" title="ID Token">

      <t>
        End-User の認証を可能にするために OpenID Connect が OAuth 2.0 に追加する最大の拡張機能は ID トークンデータ構造である.
        ID Token は, ある Client を利用するというコンテキスト中での, Authorization Server による End-User 認証に関する Claim を含んだセキュリティトークンである.
        潜在的にはその他の Claim を含む可能性もある.
        ID Token は <xref target="JWT">JSON Web Token (JWT)</xref> である.
      </t>
      <!--
      <t>
        The primary extension that OpenID Connect makes to OAuth 2.0
        to enable End-Users to be Authenticated
        is the ID Token data structure.
        The ID Token is a security token that contains Claims about the
        Authentication of an End-User by an Authorization Server when using a Client,
        and potentially other requested Claims.
        The ID Token is represented as a
        <xref target="JWT">JSON Web Token (JWT)</xref>.
      </t>
      -->
      <t>
        OpenID Connect で使用されている全ての OAuth 2.0 のフローで ID Token が利用され, その ID Token には以下の Claim が含まれる.
      </t>
      <!--
      <t>
        The following Claims are used within the ID Token
        for all OAuth 2.0 flows used by OpenID Connect:
      </t>
      -->

      <t>
        <list style="hanging">
          <t hangText="iss">
            <vspace/>
            REQUIRED.
            レスポンスを返した Issuer の Issuer Identifier.
            <spanx style="verb">iss</spanx> 値は, <spanx style="verb">https</spanx> スキーマで始まる大文字小文字を区別する URL であり, スキーマ, ホスト, そして任意でポート番号とパスを含む. クエリーとフラグメントは含まない.
            <!--
            REQUIRED.
            Issuer Identifier for the Issuer of the response.
            The <spanx style="verb">iss</spanx> value is a case sensitive URL
            using the <spanx style="verb">https</spanx> scheme that
            contains scheme, host, and optionally, port number and path
            components and no query or fragment components.
            -->
          </t>

          <t hangText="sub">
            <vspace/>
            REQUIRED.
            Subject Identifier.
            Client に利用される前提で, Issuer のローカルでユニークであり再利用されない End-User の識別子.
            (例: <spanx style="verb">24400320</spanx> や <spanx style="verb">AItOawmwtWwcT0k51BayewNvutrJUqsvl6qs7A4</spanx> 等)
            この値は ASCII で255文字を超えてはならない (MUST NOT).
            <spanx style="verb">sub</spanx> 値は大文字小文字を区別する.
            <!--
            REQUIRED.
            Subject Identifier.  A locally unique and never
            reassigned identifier within the Issuer for the End-User,
            which is intended to be consumed by the Client,
            e.g., <spanx style="verb">24400320</spanx>
            or <spanx style="verb">AItOawmwtWwcT0k51BayewNvutrJUqsvl6qs7A4</spanx>.
            It MUST NOT exceed 255 ASCII characters in length.
            The <spanx style="verb">sub</spanx> value is a case sensitive string.
            -->
          </t>

          <t hangText="aud">
            <vspace/>
            REQUIRED.
            ID Token の想定されるオーディエンス (Audience).
            この値は Relying Party の OAuth 2.0 <spanx style="verb">client_id</spanx> を含まなければならない (MUST).
            他のオーディエンスの識別子を含んでもよい (MAY).
            一般的には <spanx style="verb">aud</spanx> は大文字小文字を区別した文字列の配列であるが, オーディエンスが単体の場合は <spanx style="verb">aud</spanx> 値を大文字小文字を区別した単一文字列としてもよい (MAY).
            <!--
            REQUIRED.
            Audience(s) that this ID Token is intended for.
            It MUST contain the OAuth 2.0 <spanx style="verb">client_id</spanx>
            of the Relying Party as an audience value.
            It MAY also contain identifiers for other audiences.
            In the general case,
            the <spanx style="verb">aud</spanx> value is an array of
            case sensitive strings.
            In the common special case when there is one audience,
            the <spanx style="verb">aud</spanx> value MAY be a single
            case sensitive string.
            -->
          </t>

          <t hangText="exp">
            <vspace/>
            REQUIRED.
            ID Token の有効期限.
            この有効期限以降に該当 ID Token を受け入れたり処理してはならない (MUST NOT).
            ある ID Token が有効期限内であるためには, この値が示す時刻より現在時刻が前でなければならない (MUST).
            実装者は, 通常数分以内で, 時計のズレを考慮して多少の猶予期間を設けてもよい (MAY).
            この値は UTC 1970-01-01T0:0:0Z から該当時刻までの秒数を示す JSON 数値である.
            詳細は <xref target="RFC3339">RFC 3339</xref> を参照のこと.
            <!--
            REQUIRED.
            Expiration time on or after which the ID Token MUST NOT be
            accepted for processing. The processing of this parameter
            requires that the current date/time MUST be before the
            expiration date/time listed in the value. Implementers MAY
            provide for some small leeway, usually no more than a few
            minutes, to account for clock skew.
            Its value is a JSON number representing the number of seconds from
            1970-01-01T0:0:0Z as measured in UTC until the date/time.
            See <xref target="RFC3339">RFC 3339</xref>
            for details regarding date/times in general and UTC in
            particular.
            -->
          </t>

          <t hangText="iat">
            <vspace/>
            REQUIRED.
            JWT 発行時刻.
            この値は UTC 1970-01-01T0:0:0Z から該当時刻までの秒数を示す JSON 数値である.
            <!--
            REQUIRED.
            Time at which the JWT was issued.
            Its value is a JSON number representing the number of seconds from
            1970-01-01T0:0:0Z as measured in UTC until the date/time.
            -->
          </t>

          <t hangText="auth_time">
            <vspace/>
            End-User の認証が発生した時刻.
            この値は UTC 1970-01-01T0:0:0Z から該当時刻までの秒数を示す JSON 数値である.
            リクエストに <spanx style="verb">max_age</spanx> が含まれていた場合, この Claim は必須である (REQUIRED).
            その他の場合は任意 (OPTIONAL).
            (<spanx style="verb">auth_time</spanx> Claim は, OpenID 2.0 <xref target="OpenID.PAPE">PAPE</xref> <spanx style="verb">auth_time</spanx> レスポンスパラメーターに相当する)
            <!--
            Time when the End-User authentication occurred.
            Its value is a JSON number representing the number of seconds from
            1970-01-01T0:0:0Z as measured in UTC until the date/time.
            When a <spanx style="verb">max_age</spanx> request is made
            or when <spanx style="verb">auth_time</spanx> is requested
            as an Essential Claim,
            then this Claim is REQUIRED; otherwise, its inclusion is OPTIONAL.
            (The <spanx style="verb">auth_time</spanx> Claim semantically
            corresponds to the OpenID 2.0 <xref target="OpenID.PAPE">PAPE</xref>
            <spanx style="verb">auth_time</spanx> response parameter.)
            -->
          </t>

          <t hangText="nonce">
            <vspace/>
            Client セッションと ID Token を紐づける文字列値.
            リプレイアタック防止のために用いられる.
            Authentication Request で指定されたままの値を ID Token に含める.
            ID Token に <spanx style="verb">nonce</spanx> が含まれる場合, Client は Authentication Request に含めた <spanx style="verb">nonce</spanx> 値が ID Token に含まれる <spanx style="verb">nonce</spanx> Claim Value と一致することを検証しなければならない (MUST).
            Authentication Request に <spanx style="verb">nonce</spanx> が含まれていた場合, Authorization Server は ID Token に Authentication Request で受け取ったそのままの Claim Value で <spanx style="verb">nonce</spanx> Claim を含めねばならない (MUST).
            Authorization Server は, 受け取った <spanx style="verb">nonce</spanx> に対して上記以外のなんらの処理も行うべきではない (SHOULD).
            <spanx style="verb">nonce</spanx> は大文字小文字を区別する文字列である.
            <!--
            String value used to associate a Client session
            with an ID Token, and to mitigate replay attacks.
            The value is passed through unmodified from the Authentication Request to the ID Token.
            If present in the ID Token,
            Clients MUST verify that
            the <spanx style="verb">nonce</spanx> Claim Value is equal to
            the value of the <spanx style="verb">nonce</spanx>
            parameter sent in the Authentication Request.
            If present in the Authentication Request, Authorization Servers
            MUST include a <spanx style="verb">nonce</spanx> Claim in the
            ID Token with the Claim Value
            being the nonce value sent in the Authentication Request.
            Authorization Servers SHOULD perform no other processing
            on <spanx style="verb">nonce</spanx> values used.
            The <spanx style="verb">nonce</spanx> value is a case sensitive string.
            -->
          </t>

          <t hangText="acr">
            <vspace/>
            OPTIONAL.
            Authentication Context Class Reference.
            実施された認証処理が満たす Authentication Context Class を表す Authentication Context Class Reference 値を示す文字列.
            "0" という値は End-User 認証が <xref target="ISO29115">ISO/IEC 29115</xref> の定める level 1 を満たさないことを意味する.
            長期間有効なブラウザクッキーを用いた認証などが, "level 0" の例として挙げられる.
            金銭にかかわるリソースへのアクセス認可要求時には, level 0 の認証を受け入れるべきではない (SHOULD NOT).
            (OpenID 2.0 <xref target="OpenID.PAPE">PAPE</xref> <spanx style="verb">nist_auth_level</spanx> 0 に相当する)
            <spanx style="verb">acr</spanx> 値には, 絶対 URL か <xref target="RFC6711">RFC 6711</xref> に登録された値を用いるべきである (SHOULD).
            <xref target="RFC6711">RFC 6711</xref> 登録済の値を用いる場合, <xref target="RFC6711">RFC 6711</xref> と異なる意味でそれを用いてはならない (MUST NOT).
            この値の意味するところはコンテキストによって異なる可能性があるため, この Claim を利用する場合は, 関係者間で値の意味するところについて合意しておくこと.
            <spanx style="verb">acr</spanx> は大文字小文字を区別する文字列である.
            <!--
            OPTIONAL.
            Authentication Context Class Reference.
            String specifying an Authentication Context Class Reference value
            that identifies the Authentication Context Class that the
            authentication performed satisfied.
            The value "0" indicates the End-User authentication
            did not meet the requirements of
            <xref target="ISO29115">ISO/IEC 29115</xref> level 1.
            Authentication using a long-lived browser cookie, for instance, is one
            example where the use of "level 0" is appropriate. Authentications with
            level 0 SHOULD NOT be used to authorize access to any resource of any
            monetary value.
            (This corresponds to the OpenID 2.0
            <xref target="OpenID.PAPE">PAPE</xref>
            <spanx style="verb">nist_auth_level</spanx> 0.)
            An absolute URI or an <xref target="RFC6711">RFC 6711</xref>
            registered name
            SHOULD be used as the <spanx style="verb">acr</spanx> value;
            registered names MUST NOT be used with a different meaning than
            that which is registered.
            Parties using this claim will need to agree upon the meanings of
            the values used, which may be context-specific.
            The <spanx style="verb">acr</spanx> value is a case sensitive string.
            -->
          </t>

          <t hangText="amr">
            <vspace/>
            OPTIONAL.
            Authentication Methods References.
            認証時に用いられた認証方式を示す識別子文字列の JSON 配列.
            例として, パスワードと OTP 認証が両方行われたことを示すといったケースが考えられる.
            <spanx style="verb">amr</spanx> Claim にどのような値を用いるかは本仕様の定めるところではない.
            この値の意味するところはコンテキストによって異なる可能性があるため, この Claim を利用する場合は, 関係者間で値の意味するところについて合意しておくこと.
            <spanx style="verb">amr</spanx> は大文字小文字を区別する文字列である.
            <!--
            OPTIONAL.
            Authentication Methods References.
            JSON array of strings that are identifiers for authentication methods
            used in the authentication.
            For instance, values might indicate that both password and OTP
            authentication methods were used.
            The definition of particular values to be used in the
            <spanx style="verb">amr</spanx> Claim
            is beyond the scope of this specification.
            Parties using this claim will need to agree upon the meanings of
            the values used, which may be context-specific.
            The <spanx style="verb">amr</spanx> value is an array of
            case sensitive strings.
            -->
          </t>

          <t hangText="azp">
            <vspace/>
            OPTIONAL.
            ID Token 発行対象である認可された関係者 (authorized party).
            この Claim が存在する場合, その値は受け取り手の OAuth 2.0 Client ID でなければならない.
            この Claim は, ID Token のオーディエンス値が単一文字列であり, かつその値が <spanx style="verb">azp</spanx> の値と異なる場合にのみ必要となる.
            オーディエンスと <spanx style="verb">azp</spanx> 値が同値である場合にも, この Claim を含んでもよい (MAY).
            <spanx style="verb">azp</spanx> は大文字小文字を区別する文字列である.
            <!--
            OPTIONAL.
            Authorized party - the party to which the ID Token was issued.
            If present, it MUST contain the OAuth 2.0
            Client ID of this party.
            This Claim is only needed when
            the ID Token has a single audience value
            and that audience is different than the authorized party.
            It MAY be included even when the authorized party is the same
            as the sole audience.
            The <spanx style="verb">azp</spanx> value is a case sensitive string
            containing a StringOrURI value.
            -->
          </t>

        </list>
      </t>

      <t>
        ID Token はその他の Claim を含んでもよい (MAY).
        解釈不可能な Claim は全て無視すること (MUST).
        この仕様によって定義される追加の Claim のための
        <xref target="CodeIDToken" format="counter"/>,
        <xref target="HybridIDToken" format="counter"/>,
        <xref target="StandardClaims" format="counter"/> と
        <xref target="SelfIssuedResponse" format="counter"/>
        セクションを参照すること.
      </t>
      <!--
      <t>
        ID Tokens MAY contain other Claims.
        Any Claims used that are not understood MUST be ignored.
        See Sections
        <xref target="CodeIDToken" format="counter"/>,
        <xref target="HybridIDToken" format="counter"/>,
        <xref target="StandardClaims" format="counter"/>, and
        <xref target="SelfIssuedResponse" format="counter"/>
        for additional Claims defined by this specification.
      </t>
      -->
      <t>
        ID Token は <xref target="JWS">JWS</xref> を使って署名されなければならない (MUST).
        また任意で <xref target="JWS">JWS</xref> によって署名し, <xref target="JWE">JWE</xref> によって暗号化することもできる.
        これにより, 認証, 完全性, 否認防止, および任意で機密性を提供する (<xref target="SigningOrder"/> 参照).
        ID Token を暗号化する場合は, 署名を行った後に暗号化しなければならない (MUST).
        署名後に暗号化することにより, <xref target="JWT"/> にある Nested JWT が生成される.
        ID Token には, <spanx style="verb">alg</spanx> として <spanx style="verb">none</spanx> を用いてはならない (MUST NOT).
        ただし Response Type が Authorization Endpoint から ID Token を返すものでない場合 (Authorization Code Flow 等) で, かつ Client が明示的に Registration 時に <spanx style="verb">none</spanx> の利用を要求した場合には, この限りではない.
      </t>
      <!--
      <t>
        ID Tokens MUST be signed using <xref
        target="JWS">JWS</xref> and optionally both signed and then
        encrypted using <xref target="JWS">JWS</xref> and <xref
        target="JWE">JWE</xref> respectively, thereby providing
        authentication, integrity,
        non-repudiation, and optionally, confidentiality,
        per <xref target="SigningOrder"/>.
        If the ID Token is encrypted, it MUST be signed then encrypted,
        with the result being a Nested JWT, as defined in <xref target="JWT"/>.
        ID Tokens MUST NOT use <spanx style="verb">none</spanx>
        as the <spanx style="verb">alg</spanx> value
        unless the Response Type used returns no ID Token from the
        Authorization Endpoint
        (such as when using the Authorization Code Flow)
        and the Client explicitly requested the use of
        <spanx style="verb">none</spanx> at Registration time.
      </t>
      -->
      <t>
        ID トークンは JWS あるいは JWE の
        <spanx style="verb">x5u</spanx>,
        <spanx style="verb">x5c</spanx>,
        <spanx style="verb">jku</spanx> と
        <spanx style="verb">jwk</spanx>
        ヘッダーパラメーターフィールド を使用すべきではない (SHOULD NOT).
        代わりに, 使用される鍵への参照を Discovery と Registration parameters を用いて事前に伝えること.
        (<xref target="SigEnc"/> 参照)
      </t>
      <!--
      <t>
        ID Tokens SHOULD NOT use the JWS or JWE
        <spanx style="verb">x5u</spanx>,
        <spanx style="verb">x5c</spanx>,
        <spanx style="verb">jku</spanx>, or
        <spanx style="verb">jwk</spanx>
        Header Parameter fields.
        Instead, references to keys used are
        communicated in advance using Discovery and Registration parameters,
        per <xref target="SigEnc"/>.
      </t>
      -->

      <figure>
        <preamble>
          以下は ID トークン中の Claim Set (JWT Claim Set) の一例である.
        </preamble>
        <!--
        <preamble>
          The following is a non-normative example of
          the set of Claims (the JWT Claims Set) in an ID Token:
        </preamble>
        -->

        <artwork><![CDATA[
  {
   "iss": "https://server.example.com",
   "sub": "24400320",
   "aud": "s6BhdRkqt3",
   "nonce": "n-0S6_WzA2Mj",
   "exp": 1311281970,
   "iat": 1311280970,
   "auth_time": 1311280969,
   "acr": "urn:mace:incommon:iap:silver"
  }
]]></artwork>
      </figure>

    </section>

    <section anchor="Authentication" title="Authentication">
      <t>
        OpenID Connect では, End-User をログインさせる, もしくは既にログイン済みであることを確認するため, 認証が行われる.
        OpenID Connect は Server が実施した Authentication の結果が Client にセキュアな方法で返されるため, Client はその結果を信頼する (rely) ことができる.
        このような背景から, OpenID Connect では Client のことを Relying Party (RP) と呼ぶ.
      </t>
      <!--
      <t>
        OpenID Connect performs authentication to log in the End-User
        or to determine that the End-User is already logged in.
        OpenID Connect returns the result of the Authentication
        performed by the Server to the Client in a secure manner
        so that the Client can rely on it.
        For this reason, the Client is called Relying Party (RP) in this case.
      </t>
      -->
      <t>
        Authentication 結果は ID Token に含まれて返却される.
        (<xref target="IDToken"/> 参照)
        ID Token には Issuer, Subject Identifier, 認証の有効期限などを表す Claim が含まれる.
      </t>
      <!--
      <t>
        The Authentication result is returned in an
        ID Token, as defined in <xref target="IDToken"/>.
        It has Claims expressing such information as the Issuer,
        the Subject Identifier, when the authentication expires, etc.
      </t>
      -->
      <t>
        認証フローには, Authorization Code Flow (<spanx style="verb">response_type=code</spanx>), Implicit Flow (<spanx style="verb">response_type=id_token&nbsp;token</spanx> もしくは <spanx style="verb">response_type=id_token</spanx>) および Hybrid Flow (<xref target="OAuth.Responses">Oauth 2.0 Multiple Response Type Encoding Practices</xref> で定義される他のレスポンスタイプ値) の3種類が存在する.
        各フローによって, ID Token と Access Token がどのように Client へ返却されるかが異なる.
      </t>
      <!--
      <t>
        Authentication can follow one of three paths:
        the Authorization Code Flow (<spanx style="verb">response_type=code</spanx>),
        the Implicit Flow (<spanx style="verb">response_type=id_token&nbsp;token</spanx>
        or <spanx style="verb">response_type=id_token</spanx>), or
        the Hybrid Flow (using other Response Type values defined in
        <xref target="OAuth.Responses">OAuth 2.0 Multiple Response Type Encoding Practices</xref>).
        The flows determine how the ID Token and Access Token
        are returned to the Client.
      </t>
      -->
      <t>
        3つのフローの特徴を以下の参考表に記載する.
        この表は, 特定のコンテキストにおいてどのフローを選択すればよいかの指針を示すものである.
      </t>
      <!--
      <t>
        The characteristics of the three flows are summarized
        in the following non-normative table.
        The table is intended to provide some guidance on which flow to choose
        in particular contexts.
      </t>
      -->

      <texttable title="OpenID Connect Authentication Flows">

        <ttcol>Property</ttcol>
        <ttcol>Authorization Code Flow</ttcol>
        <ttcol>Implicit Flow</ttcol>
        <ttcol>Hybrid Flow</ttcol>

        <c>全てのトークンは Authorization Endpoint から返却される</c>
        <!--
        <c>All tokens returned from Authorization Endpoint</c>
        -->
        <c>no</c>
        <c>yes</c>
        <c>no</c>

        <c>全てのトークンは Token Endpoint から返却される</c>
        <!--
        <c>All tokens returned from Token Endpoint</c>
        -->
        <c>yes</c>
        <c>no</c>
        <c>no</c>

        <c>トークンが User Agent にわたらない</c>
        <!--
        <c>Tokens not revealed to User Agent</c>
        -->
        <c>yes</c>
        <c>no</c>
        <c>no</c>

        <c>Client 認証が可能である</c>
        <!--
        <c>Client can be authenticated</c>
        -->
        <c>yes</c>
        <c>no</c>
        <c>yes</c>

        <c>Refresh Token を利用できる</c>
        <!--
        <c>Refresh Token possible</c>
        -->
        <c>yes</c>
        <c>no</c>
        <c>yes</c>

        <c>通信が1往復だけである</c>
        <!--
        <c>Communication in one round trip</c>
        -->
        <c>no</c>
        <c>yes</c>
        <c>no</c>

        <c>ほとんどの通信がサーバ間通信である</c>
        <!--
        <c>Most communication server-to-server</c>
        -->
        <c>yes</c>
        <c>no</c>
        <c>varies</c>

      </texttable>

      <t>
        どのフローを利用するかは, Authorization リクエスト中の <spanx style="verb">response_type</spanx> 値によって決定される.
        それぞれの <spanx style="verb">response_type</spanx> 値とフローの対応を以下に示す.
      </t>
      <!--
      <t>
        The flow used is determined by the <spanx style="verb">response_type</spanx>
        value contained in the Authorization Request.
        These <spanx style="verb">response_type</spanx> values select
        these flows:
      </t>
      -->

      <texttable title='OpenID Connect "response_type" Values'>
        <ttcol>"response_type" value</ttcol>
        <ttcol>Flow</ttcol>

        <c><spanx style="verb">code</spanx></c>
        <c>Authorization Code Flow</c>

        <c><spanx style="verb">id_token</spanx></c>
        <c>Implicit Flow</c>

        <c><spanx style="verb">id_token&nbsp;token</spanx></c>
        <c>Implicit Flow</c>

        <c><spanx style="verb">code&nbsp;id_token</spanx></c>
        <c>Hybrid Flow</c>

        <c><spanx style="verb">code&nbsp;token</spanx></c>
        <c>Hybrid Flow</c>

        <c><spanx style="verb">code&nbsp;id_token&nbsp;token</spanx></c>
        <c>Hybrid Flow</c>

      </texttable>
      <t>
        <xref target="RFC6749">OAuth 2.0</xref> で定義されている <spanx style="verb">code</spanx> 以外の Response Type 値は, <xref target="OAuth.Responses">OAuth 2.0 Multiple Response Type Encoding Practices</xref> に定義される.
        注) OAuth 2.0 は Implicit Flow に Response Type <spanx style="verb">token</spanx> という値を定義してはいるが, その場合 ID Token が返却できないため, OpenID Connect ではこの Response Type は利用しない.
      </t>
      <!--
      <t>
        All but the <spanx style="verb">code</spanx> Response Type value,
        which is defined by <xref target="RFC6749">OAuth 2.0</xref>,
        are defined in the
        <xref target="OAuth.Responses">OAuth 2.0 Multiple Response Type Encoding Practices</xref>
        specification.
        NOTE:  While OAuth 2.0 also defines the
        <spanx style="verb">token</spanx> Response Type value
        for the Implicit Flow, OpenID Connect does not use this Response Type,
        since no ID Token would be returned.
      </t>
      -->

      <section anchor="CodeFlowAuth" title="Authentication using the Authorization Code Flow">
        <t>
          この章では Authorization Code Flow での認証フローについて述べる.
          Authorization Code Flow を利用する場合, 全てのトークンは Token Endpoint から返される.
        </t>
        <!--
        <t>
          This section describes how to perform authentication using the Authorization Code Flow.
          When using the Authorization Code Flow,
          all tokens are returned from the Token Endpoint.
        </t>
        -->

        <t>
          Authorization Code Flow では Client に Authorization Code を返却し, Client はそれを直接 ID Token および Access TOken と交換する.
          これにより, User Agent や User Agent 上の他の不正アプリケーションなどにトークンも露呈することがない.
          Authorization Server は, Authorization Code を Access Token と交換する前に Client を認証することもできる.
          Authorization Code Flow は, Client Secret を Client と Authorization Server の間でセキュアに保てる Client に適している.
        </t>
        <!--
        <t>The Authorization Code Flow returns an Authorization Code to the
        Client, which can then exchange it for an ID Token and an Access Token directly.
        This provides the benefit of not exposing any tokens to the
        User Agent and possibly other malicious applications with access
        to the User Agent.
        The Authorization Server can also
        authenticate the Client before exchanging the Authorization Code for an
        Access Token. The Authorization Code flow is suitable for Clients that
        can securely maintain a Client Secret between themselves and the
        Authorization Server.</t>
        -->

        <section anchor="CodeFlowSteps" title="Authorization Code Flow Steps">
          <t>
            Authorization Code Flow の流れは以下通りである.
          </t>
          <!--
          <t>The Authorization Code Flow goes through the following
          steps.</t>
          -->
          <t>
            <list style="numbers">
              <t>
                Client は必要なパラメータを含む Authentication Request を用意する.
              </t>
              <!--
              <t>Client prepares an Authentication Request containing the desired
              request parameters.</t>
              -->

              <t>
                Client は Authorization Server にリクエストを送信する.
              </t>
              <!--
              <t>Client sends the request to the Authorization Server.</t>
              -->

              <t>
                Authorization Server は End-User を Authenticate する.
              </t>
              <!--
              <t>Authorization Server Authenticates the End-User.</t>
              -->

              <t>
                Authorization Server は End-User の Consent/Authorization を得る.
              </t>
              <!--
              <t>Authorization Server obtains End-User Consent/Authorization.</t>
              -->

              <t>
                Authorization Server は Authorization Code を添えて End-User を Client に戻す.
              </t>
              <!--
              <t>Authorization Server sends the End-User back to the Client with
              an Authorization Code.</t>
              -->

              <t>
                Client は Token Endpoint へ Authorization Code を送信する.
              </t>
              <!--
              <t>Client requests a response using the Authorization Code at the
              Token Endpoint.</t>
              -->

              <t>
                Client は ID Token と Access Token をレスポンスボディに含むレスポンスを受け取る.
              </t>
              <!--
              <t>Client receives a response that contains an ID Token
              and Access Token in the response body.</t>
              -->

              <t>
                Client は ID Token を検証し, End-User の Subject Identifier を取得する.
              </t>
              <!--
              <t>Client validates the ID token and retrieves the End-User's
              Subject Identifier.</t>
              -->

            </list>
          </t>
        </section>

        <section anchor="AuthorizationEndpoint" title="Authorization Endpoint">
          <t>
            Authorization Endpoint は End-User の認証を実行する.
            この処理は, OAuth 2.0 で定義された要求パラメータ及び OpenID Connect で定義された追加されたパラメータとパラメータ値を使用して, 認証及び認可のためにユーザーエージェントを Authorization Server の Authorization Endpoint に送ることで行われる.
          </t>
          <!--
          <t>
            The Authorization Endpoint performs Authentication of the
            End-User.
            This is done by sending the User Agent to
            the Authorization Server's Authorization Endpoint for Authentication and
            Authorization, using request parameters defined by OAuth 2.0 and
            additional parameters and parameter values defined by OpenID Connect.
          </t>
          -->
          <t>
            Authorization Endpoint との通信は TLS を用いなければならない (MUST).
            TLSの利用についての詳細な情報は <xref target="TLSRequirements"/> を参照すること.
          </t>
          <!--
          <t>
            Communication with the Authorization Endpoint MUST utilize TLS.
            See <xref target="TLSRequirements"/> for more information on using TLS.
          </t>
          -->

          <section anchor="AuthRequest" title="Authentication Request">
            <t>
              Authentication Request は Authorization Server による End-User の認証を要求する OAuth 2.0 の Authorization Request である.
            </t>
            <!--
            <t>
              An Authentication Request is
              an OAuth 2.0 Authorization Request that requests that the End-User
              be authenticated by the Authorization Server.
            </t>
            -->

            <t>
              Authorization Server は Authorization Endpoint において <xref target="RFC2616">RFC 2616</xref> で定義された HTTP <spanx style="verb">GET</spanx> メソッドと HTTP <spanx style="verb">POST</spanx> メソッドをサポートしなければならない (MUST).
              クライアントは Authorization Server への Authorization Request の送信に HTTP <spanx style="verb">GET</spanx> メソッドか HTTP <spanx style="verb">POST</spanx> メソッドを使用できる (MAY).
              HTTP <spanx style="verb">GET</spanx> メソッドを使用する場合, リクエストパラメータは URI Query String Serialization ( <xref target="QuerySerialization"/> ) に従ってシリアライズされる.
              HTTP <spanx style="verb">POST</spanx> メソッドを使用する場合, リクエストパラメータは Form Serialization ( <xref target="FormSerialization"/> ) に従ってシリアライズされる.
            </t>
            <!--
            <t>Authorization Servers MUST support the use of the HTTP <spanx style="verb">GET</spanx> and
            <spanx style="verb">POST</spanx> methods defined in <xref target="RFC2616">RFC 2616</xref> at the
            Authorization Endpoint.
            Clients MAY use the HTTP <spanx style="verb">GET</spanx> or
            <spanx style="verb">POST</spanx> methods to send the
            Authorization Request to the Authorization Server. If using the HTTP
            <spanx style="verb">GET</spanx> method, the request parameters are serialized using
            URI Query String Serialization, per <xref target="QuerySerialization"/>.
            If using the HTTP <spanx style="verb">POST</spanx>
            method, the request parameters are serialized using
            Form Serialization, per <xref target="FormSerialization"/>.</t>
            -->

            <t>
              OpenID Connect は Authorization Code Flow で以下の OAuth 2.0 リクエストパラメータを利用する.
            </t>
            <!--
            <t>
              OpenID Connect uses the following OAuth 2.0 request parameters with
              the Authorization Code Flow:
            </t>
            -->
            <t>
              <list style="hanging">
                <t hangText="scope">
                  <vspace/>
                  REQUIRED.
                  OpenID Connect リクエストは scope に <spanx style="verb">openid</spanx> を含まねばならない (MUST).
                  <spanx style="verb">openid</spanx> scope 値が存在しない場合の挙動は定義しない.
                  他の scope 値が存在していても良い (MAY).
                  使用された scope 値で, 実装によって理解されないものは無視されるべきである (SHOULD).
                  本仕様によって定義される追加の scope 値については <xref target="ScopeClaims" format="counter"/> と <xref target="OfflineAccess" format="counter"/> セクションを参照すること.
                  <!--
                  REQUIRED.
                  OpenID Connect requests MUST contain the <spanx style="verb">openid</spanx> scope value.
                  If the <spanx style="verb">openid</spanx> scope value is not present,
                  the behavior is entirely unspecified.
                  Other scope values MAY be present.
                  Scope values used that are not understood by an implementation SHOULD be ignored.
                  See Sections <xref target="ScopeClaims" format="counter"/>
                  and <xref target="OfflineAccess" format="counter"/>
                  for additional scope values defined by this specification.
                  -->
                </t>

                <t hangText="response_type">
                  <vspace/>
                  REQUIRED.
                  使用する認証処理フローを決定する OAuth 2.0 Response Type 値.
                  この値により, どのエンドポイントからどのようなパラメータが返されるのかなどが決定される.
                  Authorization Code Flow を使用する場合, この値は <spanx style="verb">code</spanx> となる.
                  <!--
                  REQUIRED.
                  OAuth 2.0 Response Type value that determines
                  the authorization processing flow to be used,
                  including what parameters are returned from the endpoints used.
                  When using the Authorization Code Flow, this value is
                  <spanx style="verb">code</spanx>.
                  -->
                </t>

                <t hangText="client_id">
                  <vspace/>
                  REQUIRED.
                  Authorization Server における OAuth 2.0 Client Identifier の値.
                  <!--
                  REQUIRED.
                  OAuth 2.0 Client Identifier
                  valid at the Authorization Server.
                  -->
                </t>

                <t hangText="redirect_uri">
                  <vspace/>
                  REQUIRED.
                  レスポンスが返される Redirection URI.
                  この URI は, Client が OpenID Provider に対して事前に登録済みの Redirection URI のいずれかと完全一致しなければならない (MUST).
                  マッチングルールは <xref target="RFC3986"/> (Simple String Comparison) の Section 6.2.1 に従うこと.
                  このフローを使用する場合, Redirection URI には <spanx style="verb">https</spanx> スキーマを利用することが望まれる (SHOULD) が, Client Type が <spanx style="verb">confidential</spanx> であり, かつ OP が <spanx style="verb">http</spanx> の利用を容認する場合に限り, <spanx style="verb">http</spanx> スキーマを利用してもよい (MAY).
                  Client Type 等の定義については OAuth 2.0 の Section 2.1 を参照のこと.
                  Redirection URI には, ネイティブアプリケーションにコールバックを送る目的などで, 上記以外のスキーマを利用することもできる.
                  <!--
                  REQUIRED.
                  Redirection URI to which the response will be sent.
                  This URI MUST exactly match one of the Redirection URI values
                  for the Client pre-registered at the OpenID Provider,
                  with the matching performed as described in
                  Section 6.2.1 of <xref target="RFC3986"/> (Simple String Comparison).
                  When using this flow, the Redirection URI
                  SHOULD use the <spanx style="verb">https</spanx> scheme;
                  however, it MAY use the <spanx style="verb">http</spanx> scheme,
                  provided that the Client Type is
                  <spanx style="verb">confidential</spanx>,
                  as defined in Section 2.1 of OAuth 2.0, and
                  provided the OP allows the use of
                  <spanx style="verb">http</spanx> Redirection URIs in this case.
                  The Redirection URI MAY use an alternate scheme,
                  such as one that is intended to identify a callback into a native application.
                  -->
                </t>

                <t hangText="state">
                  <vspace/>
                  RECOMMENDED.
                  リクエストとコールバックの間で維持されるランダムな値.
                  一般的に Cross-Site Request Forgery (CSRF, XSRF) 対策の目的で利用される, ブラウザ Cookie と紐づく暗号論的にセキュアな値を取る.
                  <!--
                  RECOMMENDED.
                  Opaque value used
                  to maintain state between the request and the callback.
                  Typically, Cross-Site Request Forgery (CSRF, XSRF)
                  mitigation is done by cryptographically binding the value of
                  this parameter with a browser cookie.
                  -->
                </t>

              </list>
            </t>

            <t>
              OpenID Connect は上記に加えて <xref target="OAuth.Responses">OAuth 2.0 Multiple Response Type Encoding Practices</xref> で定義された以下の OAuth 2.0 リクエストパラメータを利用する.
            </t>
            <!--
            <t>
              OpenID Connect also uses the following OAuth 2.0 request parameter,
              which is defined in
              <xref target="OAuth.Responses">OAuth 2.0 Multiple Response Type Encoding Practices</xref>:
            </t>
            -->
            <t>

              <list style="hanging">
                <t hangText="response_mode">
                  <vspace/>
                  OPTIONAL.
                  Authorization Endpoint からパラメータを返す手段を Authorization Server に通知する.
                  要求される Response Mode が Response Type で指定されるデフォルトの場合, このパラメータの使用は推奨されない (NOT RECOMMENDED).
                  <!--
                  OPTIONAL.
                  Informs the Authorization Server of the mechanism to be used
                  for returning parameters from the Authorization Endpoint.
                  This use of this parameter is NOT RECOMMENDED when the Response Mode
                  that would be requested is the default mode specified for the Response Type.
                  -->
                </t>
              </list>
            </t>

            <t>
              本仕様は上記に加えて以下のリクエストパラメータを定義する.
            </t>
            <!--
            <t>
              This specification also defines the following request parameters:
            </t>
            -->

            <t>
              <list style="hanging">
                <t hangText="nonce">
                  <vspace/>
                  OPTIONAL.
                  Client セッションと ID Token を紐づける文字列であり, リプレイアタック対策に用いられる.
                  この値は Authentication Request で指定され, そのままの値で ID Token に含まれる.
                  <spanx style="verb">nonce</spanx> 値には, 推測不可能なように十分なエントロピーを持たせること (MUST).
                  実装の注意事項については <xref target="NonceNotes"/> を参照すること.
                  <!--
                  OPTIONAL.
                  String value used to associate a Client session
                  with an ID Token, and to mitigate replay attacks.
                  The value is passed through unmodified from the Authentication Request to the ID Token.
                  Sufficient entropy MUST be present in the
                  <spanx style="verb">nonce</spanx> values used to prevent
                  attackers from guessing values.
                  For implementation notes, see <xref target="NonceNotes"/>.
                  -->
                </t>

                <t hangText="display">
                  <vspace/>
                  OPTIONAL.
                  Authorization Server が認証および同意のためのユーザーインタフェースを End-User にどのように表示するかを指定するための ASCII 値.
                  以下の値が定義されている.
                  <!--
                  OPTIONAL.
                  ASCII string value that specifies
                  how the Authorization Server displays the authentication and
                  consent user interface pages to the End-User.
                  The defined values are:
                  -->

                  <list style="hanging">
                    <t hangText="page">
                      <vspace/>
                      Authorization Server は認証および同意 UI を User Agent の全画面に表示すべきである (SHOULD).
                      display パラメータが指定されていない場合, この値がデフォルトとなる.
                      <!--
                      The Authorization Server SHOULD display the
                      authentication and consent UI consistent with a full User Agent page
                      view. If the display parameter is not specified, this is the
                      default display mode.
                      -->
                    </t>

                    <t hangText="popup">
                      <vspace/>
                      Authorization Server は認証および同意 UI を User Agent のポップアップウィンドウに表示すべきである (SHOULD).
                      User Agent のポップアップウィンドウはログインダイアログに適切なサイズで, 親ウィンドウ全体を覆うことのないようにすべきである.
                      <!--
                      The Authorization Server SHOULD display the
                      authentication and consent UI consistent with a popup User Agent
                      window.
                      The popup User Agent window should be of an appropriate size
                      for a login-focused dialog and should not obscure
                      the entire window that it is popping up over.
                      -->
                    </t>

                    <t hangText="touch">
                      <vspace/>
                      Authorization Server は認証および同意 UI をタッチインタフェースを持つデバイスに適した形で表示すべきである (SHOULD).
                      <!--
                      The Authorization Server SHOULD display the
                      authentication and consent UI consistent with a device that
                      leverages a touch interface.
                      -->
                    </t>

                    <t hangText="wap">
                      <vspace/>
                      Authorization Server は認証および同意 UI を "feature phone" に適した形で表示すべきである (SHOULD).
                      <!--
                      The Authorization Server SHOULD display the
                      authentication and consent UI consistent with a "feature phone"
                      type display.
                      -->
                    </t>
                  </list>

                  Authorization Server は User Agent の機能を検知して適切な表示を行うようにしても良い (MAY).
                  <!--
                  The Authorization Server MAY also attempt to detect the capabilities
                  of the User Agent and present an appropriate display.
                  -->
                </t>

                <t hangText="prompt">
                  <vspace/>
                  OPTIONAL.
                  Authorization Server が End-User に再認証および同意を再度要求するかどうか指定するための, スペース区切りの ASCII 文字列のリスト.
                  以下の値が定義されている.
                  <!--
                  OPTIONAL.
                  Space delimited, case sensitive list of ASCII string values
                  that specifies whether the Authorization Server prompts
                  the End-User for reauthentication and consent.
                  The defined values are:
                  -->

                  <list style="hanging">
                    <t hangText="none">
                      <vspace/>
                      Authorization Server はいかなる認証および同意 UI をも表示してはならない (MUST NOT).
                      End-User が認証済でない場合, Client が要求する Claim 取得に十分な事前同意を取得済でない場合, またはリクエストを処理するために必要な何らかの条件を満たさない場合には, エラーが返される.
                      典型的なエラーコードは <spanx style="verb">login_required</spanx>, <spanx style="verb">interaction_required</spanx> であり,
                      その他のコードは <xref target="AuthError"/> で定義されている.
                      これは既存の認証と同意の両方, またはいずれかを確認する方法として使用できる.
                      <!--
                      The Authorization Server
                      MUST NOT display any authentication or consent
                      user interface pages.
                      An error is returned
                      if an End-User
                      is not already authenticated or the Client does not have
                      pre-configured consent for the requested
                      Claims or does not fulfill other conditions for processing the request.
                      The error code will typically be
                      <spanx style="verb">login_required</spanx>,
                      <spanx style="verb">interaction_required</spanx>,
                      or another code defined in <xref target="AuthError"/>.
                      This can be used as a
                      method to check for existing authentication and/or consent.
                      -->
                    </t>

                    <t hangText="login">
                      <vspace/>
                      Authorization Server は End-User を再認証するべきである (SHOULD).
                      再認証が不可能な場合はエラーを返す (MUST).
                      典型的なエラーコードは <spanx style="verb">login_required</spanx> である.
                      <!--
                      The Authorization Server SHOULD prompt the
                      End-User for reauthentication.
                      If it cannot reauthenticate the End-User, it MUST return an error,
                      typically <spanx style="verb">login_required</spanx>.
                      -->
                    </t>

                    <t hangText="consent">
                      <vspace/>
                      Authorization Server は Client にレスポンスを返す前に End-User に同意を要求するべきである (SHOULD).
                      同意要求が不可能な場合はエラーを返す (MUST).
                      典型的なエラーコードは <spanx style="verb">consent_required</spanx> である.
                      <!--
                      The Authorization Server SHOULD prompt the End-User for consent
                      before returning information to the Client.
                      If it cannot obtain consent, it MUST return an error,
                      typically <spanx style="verb">consent_required</spanx>.
                      -->
                    </t>

                    <t hangText="select_account">
                      <vspace/>
                      Authorization Server は End-User にアカウント選択を促すべきである (SHOULD).
                      この prompt 値は, End-User が Authorization Server 上に複数アカウントを持っているとき, 現在のセッションに紐づくアカウントの中から一つを選択することを可能にする.
                      End-User によるアカウント選択が不可能な場合はエラーを返す (MUST).
                      典型的なエラーコードは <spanx style="verb">account_selection_required</spanx> である.
                      <!--
                      The Authorization Server SHOULD
                      prompt the End-User to select a user account.  This enables
                      an End-User who has multiple accounts at the Authorization Server
                      to select amongst the multiple accounts that they might have
                      current sessions for.
                      If it cannot obtain an account selection choice made by the End-User,
                      it MUST return an error,
                      typically <spanx style="verb">account_selection_required</spanx>.
                      -->
                    </t>
                  </list>

                  <spanx style="verb">prompt</spanx> パラメータは Client に対して, End-User のセッションがアクティブであることを確認したり, End-User にリクエストに対する注意を促すことを可能にする.
                  <spanx style="verb">none</spanx> がその他の値とともに用いられる場合はエラーとなる.
                  <!--
                  The <spanx style="verb">prompt</spanx> parameter
                  can be used by the Client to make sure that the End-User is
                  still present for the current session or to bring attention to the
                  request. If this parameter contains <spanx style="verb">none</spanx>
                  with any other value, an
                  error is returned.
                  -->
                </t>

                <t hangText="max_age">
                  <vspace/>
                  OPTIONAL.
                  Authentication Age の最大値.
                  End-User が OP によって明示的に認証されてからの経過時間の最大許容値 (秒).
                  もし経過時間がこの値より大きい場合, OP は End-User を明示的に再認証しなければならない (MUST).
                  (<spanx style="verb">max_age</spanx> リクエストパラメータは OpenID 2.0 <xref target="OpenID.PAPE">PAPE</xref> の <spanx style="verb">max_auth_age</spanx> リクエストパラメータに相当する)
                  <spanx style="verb">max_age</spanx> が指定された場合, 発行される ID Token は <spanx style="verb">auth_time</spanx> Claim を含まねばならない (MUST).
                  <!--
                  OPTIONAL.
                  Maximum Authentication Age.
                  Specifies the allowable elapsed time in seconds
                  since the last time the End-User was actively
                  authenticated by the OP. If the elapsed time is greater than
                  this value, the OP MUST attempt to actively
                  re-authenticate the End-User.
                  (The <spanx style="verb">max_age</spanx> request parameter corresponds to
                  the OpenID 2.0 <xref target="OpenID.PAPE">PAPE</xref>
                  <spanx style="verb">max_auth_age</spanx> request parameter.)
                  When <spanx style="verb">max_age</spanx> is used, the ID Token returned
                  MUST include an <spanx style="verb">auth_time</spanx> Claim Value.
                  -->
                </t>

                <t hangText="ui_locales">
                  <vspace/>
                  OPTIONAL.
                  End-User の選好する UI の表示言語および文字種.
                  スペース区切りの <xref target="RFC5646">BCP47</xref> 言語タグ値のリストとして表現され, 順序は選好順となる.
                  例えば "fr-CA fr en" という値が指定された場合, カナダで用いられるフランス語が第一選好となり, 次いで地域指定のないフランス語, そして英語と続く.
                  要求されたロケールがサポートされていない場合でも, OpenID Provider はエラーとするべきではない (SHOULD NOT).
                  <!--
                  OPTIONAL.
                  End-User's preferred languages and scripts for the user interface,
                  represented as a space-separated list of
                  <xref target="RFC5646">BCP47</xref> language tag values,
                  ordered by preference.
                  For instance, the value "fr-CA fr en" represents a preference
                  for French as spoken in Canada,
                  then French (without a region designation),
                  followed by English (without a region designation).
                  An error SHOULD NOT result if some or all of the requested locales
                  are not supported by the OpenID Provider.
                  -->
                </t>

                <t hangText="id_token_hint">
                  <vspace/>
                  OPTIONAL.
                  Authorization Server が以前発行した ID Token.
                  Client が認証した End-User の現在もしくは過去のセッションに関するヒントとして利用される.
                  もしこの ID Token に紐づく End-User が認証済, もしくはこのリクエスト中で認証された場合, Authorization Server はポジティブレスポンスを返す.
                  さもなければ, Authorization Server は <spanx style="verb">login_required</spanx> のようなエラーを返す (SHOULD).
                  <spanx style="verb">prompt=none</spanx> を利用する場合は, 可能であれば <spanx style="verb">id_token_hint</spanx> を指定するべきであり (SHOULD), さもなければ <spanx style="verb">invalid_request</spanx> を返しても良い (MAY).
                  ただしサーバーはその場合可能な限りサクセスレスポンスを返すこと.
                  <spanx style="verb">id_token_hint</spanx> 利用時は, ID Token の audience に Authorization Server 自身が含まれている必要はない.
                  <!--
                  OPTIONAL.
                  ID Token previously issued by the Authorization Server
                  being passed as a hint about the End-User's current or past
                  authenticated session with the Client.
                  If the End-User identified by the ID Token is logged in or is logged in by the request,
                  then the Authorization Server returns a positive response;
                  otherwise, it SHOULD return
                  an error, such as <spanx style="verb">login_required</spanx>.
                  When possible, an <spanx style="verb">id_token_hint</spanx>
                  SHOULD be present when <spanx style="verb">prompt=none</spanx> is used
                  and an <spanx style="verb">invalid_request</spanx> error
                  MAY be returned if it is not;
                  however, the server SHOULD respond successfully when possible,
                  even if it is not present.
                  The Authorization Server need not be listed as an
                  audience of the ID Token when it is used as an
                  <spanx style="verb">id_token_hint</spanx> value.
                  -->
                </t>
                <t>
                  <spanx style="verb">id_token_hint</spanx> として使用するために RP によって受信された OP からの ID Token が暗号化されていた場合,
                  クライアントは暗号化された ID Token を含んだ署名済みの ID Token を復号しなければならない (MUST).
                  クライアントは Authentication Server に送信する署名済みの ID Token をサーバーが ID Token を復号できる鍵を用いて再暗号化し, <spanx style="verb">id_token_hint</spanx> の値として使用してもよい (MAY).
                  <!--
                  If the ID Token received by the RP from the OP is encrypted,
                  to use it as an <spanx style="verb">id_token_hint</spanx>, the Client MUST
                  decrypt the signed ID Token contained within the encrypted ID Token.
                  The Client MAY re-encrypt the signed ID token to the Authentication Server
                  using a key that enables the server to decrypt the ID Token,
                  and use the re-encrypted ID token as the
                  <spanx style="verb">id_token_hint</spanx> value.
                  -->
                </t>

                <t hangText="login_hint">
                  <vspace/>
                  OPTIONAL.
                  Authorization Server に対する End-User ログイン識別子のヒントとして利用される.
                  RP が End-User に Email アドレス (もしくはその他の識別子) を要求し, それを Authorization Server にヒントとして送信することでヒントとする.
                  Discovery に利用された値をヒントの値として利用することを推奨する (RECOMMENDED).
                  この値は <spanx style="verb">phone_number</spanx> Claim に指定されるフォーマットに従った電話番号でもよい (MAY).
                  このパラメータを利用するか否かは OP の判断にゆだねる.
                  <!--
                  OPTIONAL.
                  Hint to the Authorization Server
                  about the login identifier the End-User might use to log in (if necessary).
                  This hint can be used by an RP if it first asks the End-User for their e-mail
                  address (or other identifier) and then wants to pass that value as a hint
                  to the discovered authorization service.
                  It is RECOMMENDED that the hint value match the value used for discovery.
                  This value MAY also be a phone number in the format specified for the
                  <spanx style="verb">phone_number</spanx> Claim.
                  The use of this parameter is left to the OP's discretion.
                  -->
                </t>

                <t hangText="acr_values">
                  <vspace/>
                  OPTIONAL.
                  Authentication Context Class Reference リクエスト値.
                  Authorization Server が Authentication Request を処理する際に要求される <spanx style="verb">acr</spanx> の値をスペース区切りで示した文字列.
                  認証処理が満たした Authentication Context Class は, <xref target="IDToken"/> に示す <spanx style="verb">acr</spanx> Claim Value として返される.
                  <spanx style="verb">acr</spanx> Claim はこのパラメータを用いることで Voluntary Claim としてリクエストされることになる.
                  <!--
                  OPTIONAL.
                  Requested Authentication Context Class Reference values.
                  Space-separated string that specifies the <spanx style="verb">acr</spanx>
                  values that the Authorization Server is being requested to use
                  for processing this Authentication Request,
                  with the values appearing in order of preference.
                  The Authentication Context Class satisfied by the authentication
                  performed is returned as the <spanx style="verb">acr</spanx> Claim Value,
                  as specified in <xref target="IDToken"/>.
                  The <spanx style="verb">acr</spanx> Claim is requested as
                  a Voluntary Claim by this parameter.
                  -->
                </t>
              </list>
            </t>
            <t>
              他のパラメータを送ってもよい (MAY).
              本仕様で定義される追加の Authorization Request Parameter とパラメータ値については
              <xref target="ImplicitAuthorizationEndpoint" format="counter"/>,
              <xref target="HybridAuthorizationEndpoint" format="counter"/>,
              <xref target="ClaimsLanguagesAndScripts" format="counter"/>,
              <xref target="ClaimsParameter" format="counter"/>,
              <xref target="JWTRequests" format="counter"/> と,
              <xref target="RegistrationParameter" format="counter"/>
              セクションを参照すること.
            </t>
            <!--
            <t>
              Other parameters MAY be sent.
              See Sections <xref target="ImplicitAuthorizationEndpoint" format="counter"/>,
              <xref target="HybridAuthorizationEndpoint" format="counter"/>,
              <xref target="ClaimsLanguagesAndScripts" format="counter"/>,
              <xref target="ClaimsParameter" format="counter"/>,
              <xref target="JWTRequests" format="counter"/>, and
              <xref target="RegistrationParameter" format="counter"/>
              for additional Authorization Request parameters and parameter values
              defined by this specification.
            </t>
            -->

            <figure>
              <preamble>
                以下の例では Client が User Agent に HTTP 302 リダイレクトレスポンスを返し, User Agent に対して Authorization Endpoint に Authentication Request を送るよう指示している. (改行は掲載上の都合による)
              </preamble>
              <!--
              <preamble>
                The following is a non-normative example
                HTTP 302 redirect response by the Client, which triggers
                the User Agent to make an Authentication Request
                to the Authorization Endpoint
                (with line wraps within values for display purposes only):
              </preamble>
              -->

              <artwork><![CDATA[
  HTTP/1.1 302 Found
  Location: https://server.example.com/authorize?
    response_type=code
    &scope=openid%20profile%20email
    &client_id=s6BhdRkqt3
    &state=af0ifjsldkj
    &redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb
]]></artwork>
            </figure>

            <figure>
              <preamble>
                User Agent は上記の Client からの HTTP 302 リダイレクトレスポンスに従い, Authorization Server に以下のようなリクエストを送る. (改行は掲載上の都合による)
              </preamble>
              <!--
              <preamble>
                The following is the non-normative example request
                that would be sent by the User Agent to the Authorization Server
                in response to the HTTP 302 redirect response by the Client above
                (with line wraps within values for display purposes only):
              </preamble>
              -->

              <artwork><![CDATA[
  GET /authorize?
    response_type=code
    &scope=openid%20profile%20email
    &client_id=s6BhdRkqt3
    &state=af0ifjsldkj
    &redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb HTTP/1.1
  Host: server.example.com
]]></artwork>
            </figure>

          </section>

          <section anchor="AuthRequestValidation" title="Authentication Request Validation">
            <t>
              Authorization Server は, 以下のように受信した要求を検証しなければならない (MUST).
            </t>
            <!--
            <t>
              The Authorization Server MUST validate the request received as follows:
            </t>
            -->
            <t>
              <list style="numbers">
                <t>
                  Authorization Server は, 全ての OAuth 2.0 パラメータを OAuth 2.0 仕様に従って検証しなければならない (MUST).
                </t>
                <t>
                  <spanx style="verb">scope</spanx> パラメータが存在することと,
                  <spanx style="verb">openid</spanx> scope 値を含んでいることを検証.
                  (もし <spanx style="verb">openid</spanx> scope 値が存在しなかった場合,
                  その要求は OpenID Connect の要求ではないが,
                  有効な OAuth 2.0 の要求である可能性がある.)
                </t>
                <t>
                  Authorization Server は, 全ての必須 (REQUIRED) パラメータが存在するか,
                  そしてそれらの使用方法が当仕様に従っているかを検証しなければならない (MUST).
                </t>
                <t>
                  ID Token の <spanx style="verb">sub</spanx> (subject) Claim に値が指定されて要求された場合,
                  Authorization Server は, <spanx style="verb">sub</spanx> 値で識別される End-Userが,
                  Authorization Server 上にアクティブなセッションを持っているか,
                  またはその要求の結果として認証された場合のみ,
                  成功応答を送信しなければならない (MUST) .
                  End-User が Authorization Server 上にアクティブなセッションを持っていたとしても,
                  Authorization Server は, 異なるユーザの ID Token や Access Token を応答してはならない (MUST NOT) .
                  このような要求は,  <spanx style="verb">id_token_hint</spanx> パラメータを用いるか,
                  もしくは実装が <spanx style="verb">claims</spanx> パラメータをサポートしていれば,
                  <xref target="IndividualClaimsRequests"/> に記述されているように特定の Claim Value を要求することによって実現することができる.
                </t>
              </list>
            </t>
            <!--
            <t>
              <list style="numbers">
                <t>
                  The Authorization Server MUST validate all the
                  OAuth 2.0 parameters according to the OAuth 2.0 specification.
                </t>
                <t>
                  Verify that a <spanx style="verb">scope</spanx> parameter is present
                  and contains the <spanx style="verb">openid</spanx> scope value.
                  (If no <spanx style="verb">openid</spanx> scope value is present,
                  the request may still be a valid OAuth 2.0 request,
                  but is not an OpenID Connect request.)
                </t>
                <t>
                  The Authorization Server MUST verify that all the REQUIRED parameters
                  are present
                  and their usage conforms to this specification.
                </t>
                <t>
                  If the <spanx style="verb">sub</spanx> (subject) Claim
                  is requested with a specific value for the ID Token,
                  the Authorization Server MUST only send a positive response
                  if the End-User identified by that <spanx style="verb">sub</spanx> value
                  has an active session with the Authorization Server
                  or has been Authenticated as a result of the request.
                  The Authorization Server MUST NOT reply with an ID Token or
                  Access Token for a different user,
                  even if they have an active session with the Authorization Server.
                  Such a request can be made either using an
                  <spanx style="verb">id_token_hint</spanx> parameter
                  or by requesting a specific Claim Value
                  as described in <xref target="IndividualClaimsRequests"/>,
                  if the <spanx style="verb">claims</spanx> parameter
                  is supported by the implementation.
                </t>
              </list>
            </t>
            -->

            <t>
              <xref target="RFC6749">OAuth 2.0</xref> の規定どおり,
              Authorization Server は認識できない要求パラメータを無視すべきである (SHOULD) .
            </t>
            <!--
            <t>
              As specified in <xref target="RFC6749">OAuth 2.0</xref>,
              Authorization Servers SHOULD ignore unrecognized request parameters.
            </t>
            -->
            <t>
              Authorization Server はなんからのエラーに遭遇した場合,
              <xref target="AuthError"/> に従い,
              失敗応答を返さなければならない (MUST) .
            </t>
            <!--
            <t>
              If the Authorization Server encounters any error,
              it MUST return an error response, per <xref target="AuthError"/>.
            </t>
            -->
          </section>

          <section anchor="Authenticates" title="Authorization Server Authenticates End-User">

            <t>
              要求が妥当であった場合,  Authorization Server は使用された要求パラメータに応じて,
              End-User を 認証するか, End-User が認証済かの確認を試みる.
              Authorization Server によって用いられる End-User の認証方式 (例えば, ユーザ名とパスワード, セッションクッキー等) については当仕様の規定範疇外である.
              使用された要求パラメータの値や使用された認証方式に応じ,
              Authorization Server は認証ユーザーインタフェースを表示するかもしれない (MAY).
            </t>
            <!--
            <t>
              If the request is valid, the Authorization Server attempts
              to Authenticate the End-User or determines whether the End-User is Authenticated,
              depending upon the request parameter values used.
              The methods used by the Authorization Server to Authenticate the End-User
              (e.g. username and password, session cookies, etc.)
              are beyond the scope of this specification.
              An Authentication user interface MAY be displayed by
              the Authorization Server, depending upon the request parameter values used
              and the authentication methods used.
            </t>
            -->

            <t>
              Authorization Server は以下のケースのとき, End-User の認証を試みなければならない (MUST).
            <list style="symbols">
              <t>
                End-User はまだ認証されていない.
              </t>

              <t>
                Authentication Request は,
                <spanx style="verb">login</spanx> という値を持つ
                <spanx style="verb">prompt</spanx> パラメータを含んでいる.
                このケースでは, End-User が既に認証されていたとしても,
                Authorization Server は End-User を再認証しなければならない (MUST).
              </t>
            </list>
            </t>
            <!--
            <t>The Authorization Server MUST attempt to Authenticate the
            End-User in the following cases:
            <list style="symbols">
              <t>The End-User is not already Authenticated.</t>

              <t>The Authentication Request contains the <spanx
              style="verb">prompt</spanx> parameter with the value
              <spanx style="verb">login</spanx>.  In this case, the
              Authorization Server MUST reauthenticate the End-User
              even if the End-User is already authenticated.</t>
            </list>
            </t>
            -->

            <t>
              Authorization Server は以下のケースのとき, End-User と対話を行ってはならない (MUST NOT).
            <list style="symbols">
              <t>
                Authentication Request は,
                <spanx style="verb">none</spanx> という値を持つ
                <spanx style="verb">prompt</spanx> パラメータを含んでいる.
                このケースでは, End-User がまだ認証されていなかったり,
                対話なしに認証することができない場合,
                Authorization Server は エラーを返さなければならない (MUST).
              </t>
            </list>
            </t>
            <!--
            <t>The Authorization Server MUST NOT interact with the End-User
            in the following case:
            <list style="symbols">
              <t>The Authentication Request contains the <spanx
              style="verb">prompt</spanx> parameter with the value
              <spanx style="verb">none</spanx>.  In this case,
              the Authorization Server MUST return
              an error if an End-User
              is not already Authenticated or could not be silently Authenticated.</t>
            </list>
            </t>
            -->

            <t>
              End-User と対話を行うとき,
              <xref target="RFC6749">OAuth 2.0</xref> の Section 10.12 と 10.13 に記述されている通り,
              Authorization Server は, Cross-Site Request Forgery や Clickjacking に対する適切な対策を行わなければならない (MUST).
            </t>
            <!--
            <t>
              When interacting with the End-User,
              the Authorization Server MUST employ appropriate measures against
              Cross-Site Request Forgery and Clickjacking as, described in
              Sections 10.12 and 10.13 of <xref target="RFC6749">OAuth 2.0</xref>.
            </t>
            -->
          </section>

          <section anchor="Consent" title="Authorization Server Obtains End-User Consent/Authorization">

            <t>
              End-User を認証した後, Authorization Server は, Relying Party に 情報を送る前に認可決定を取得しなければならない (MUST).
              使用された要求パラメータによって許可されている場合,
              同意事項を明確にした End-User 対話を通じてか,
              要求の処理やその他の手法 (例えば, 管理機能を用いた事前同意) による同意の確立によって,
              この認可決定は行われるかもしれない (MAY).
              Sections <xref target="IDToken" format="counter"/> と
              <xref target="UserInfo" format="counter"/> で,
              情報の送出機構について述べる.
            </t>
            <!--
            <t>
              Once the End-User is authenticated, the Authorization Server MUST
              obtain an authorization decision before releasing information
              to the Relying Party.
              When permitted by the request parameters used,
              this MAY be done through an interactive dialogue with the End-User
              that makes it clear what is being consented to
              or by establishing consent via conditions for processing the request or
              other means (for example, via previous administrative consent).
              Sections <xref target="IDToken" format="counter"/> and
              <xref target="UserInfo" format="counter"/> describe
              information release mechanisms.
            </t>
            -->

          </section>

          <section anchor="AuthResponse" title="Successful Authentication Response">

            <t>
              Authentication Response は, RP により送られた Authorization Request メッセージに応じて OP の Authorization Endpoint から返される OAuth 2.0 Authorization Response メッセージである.
            </t>
            <!--
            <t>
              An Authentication Response is an OAuth 2.0 Authorization Response
              message returned from the
              OP's Authorization Endpoint in response to the Authorization Request
              message sent by the RP.
            </t>
            -->
            <t>
              Authorization Code Flow を利用するとき, Authorization Response は <xref target="RFC6749">OAuth 2.0</xref> の Section 4.1.2 にて定義されるパラメータを Authorization Request 中で指定された <spanx style="verb">redirect_uri</spanx> にクエリパラメータとして加え, 異なる Response Mode が指定されない限りは <spanx style="verb">application/x-www-form-urlencoded</spanx> フォーマットを用いて返さなければならない (MUST).
            </t>
            <!--
            <t>
              When using the Authorization Code Flow, the Authorization Response
              MUST return the parameters defined in Section 4.1.2 of
              <xref target="RFC6749">OAuth 2.0</xref>
              by adding them as query parameters to the
              <spanx style="verb">redirect_uri</spanx> specified in the Authorization Request
              using the <spanx style="verb">application/x-www-form-urlencoded</spanx> format,
              unless a different Response Mode was specified.
            </t>
            -->

            <figure>
              <preamble>
                以下にこのフローを用いた成功レスポンスの例を示す. (改行は掲載上の都合による)
              </preamble>
              <!--
              <preamble>
                The following is a non-normative example
                successful response using this flow
                (with line wraps within values for display purposes only):
              </preamble>
              -->

              <artwork><![CDATA[
  HTTP/1.1 302 Found
  Location: https://client.example.org/cb?
    code=SplxlOBeZQQYbYS6WxSbIA
    &state=af0ifjsldkj
]]></artwork>
            </figure>

            <t>
              Authorization Code の内容についての実装メモは <xref target="CodeNotes"/> を参照のこと.
            </t>
            <!--
            <t>
              For implementation notes on the contents of
              the Authorization Code, see <xref target="CodeNotes"/>.
            </t>
            -->
          </section>

          <section anchor="AuthError" title="Authentication Error Response">

            <t>
              Authentication Error Response は, RP により送られた Authorization Request メッセージに応じて OP の Authorization Endpoint から返される OAuth 2.0 Authorization Error Response メッセージである.
            </t>
            <!--
            <t>
              An Authentication Error Response is an OAuth 2.0 Authorization Error Response
              message returned from the
              OP's Authorization Endpoint in response to the Authorization Request
              message sent by the RP.
            </t>
            -->

            <t>
              End-User が認可を拒否したり, End-User の認証に失敗した場合, OP ( Authorization Server ) は <xref target="RFC6749">OAuth 2.0</xref> Section 4.1.2.1 に定義されている Error Response パラメータを用いて伝える.
              (RFC 6749 に関係のないエラーは, 適切な HTTP ステータスコードを用いて User Agent に返すこと)
            </t>
            <!--
            <t>
              If the End-User denies the request or the End-User authentication
              fails, the OP (Authorization Server) informs the RP (Client)
              by using the Error Response parameters defined in
              Section 4.1.2.1 of <xref target="RFC6749">OAuth 2.0</xref>.
              (HTTP errors unrelated to RFC 6749 are returned to the User Agent using the
              appropriate HTTP status code.)
            </t>
            -->
            <t>
              Redirection URI が無効でない限り, Authorization Server は適切なエラーと state パラメータで Authorization Request にて指定された Redirection URI に Client を返す.
            </t>
            <!--
            <t>
              Unless the Redirection URI is invalid,
              the Authorization Server returns the Client to
              the Redirection URI specified in the Authorization Request
              with the appropriate error and state parameters.
              Other parameters SHOULD NOT be returned.
            </t>
            -->
            <t>
              OAuth 2.0 の Section 4.1.2.1 に定義されているエラーコードに加え, この仕様では次のようなエラーコードを定義する:
            </t>
            <!--
            <t>
              In addition to the error codes defined in Section 4.1.2.1 of
              OAuth 2.0, this specification also defines the following error codes:
            </t>
            -->

            <t>
              <list style="hanging">

                <t hangText="interaction_required">
                  <vspace/>
                  Authorization Server は処理を進めるためにいくつかの End-User interaction を必要とする.
                  Authentication Request 中の <spanx style="verb">prompt</spanx> パラメータが <spanx style="verb">none</spanx> であるが, End-User interaction のためのユーザーインターフェースの表示なしには Authentication Request が完了できない時にこのエラーが返される.
                  <!--
                  The Authorization Server
                  requires End-User interaction of some form to proceed.
                  This error MAY be returned when the
                  <spanx style="verb">prompt</spanx> parameter value in the
                  Authentication Request is <spanx style="verb">none</spanx>,
                  but the Authentication Request cannot be completed
                  without displaying a user interface for End-User interaction.
                  -->
                </t>

                <t hangText="login_required">
                  <vspace/>
                  Authorization Server は End-User の認証を必要とする.
                  Authentication Request 中の <spanx style="verb">prompt</spanx> パラメータが <spanx style="verb">none</spanx> であるが, End-User の認証のためのユーザーインターフェースの表示なしには Authentication Request が完了できない時にこのエラーが返される.
                  <!--
                  The Authorization Server requires
                  End-User authentication. This error MAY be returned when the
                  <spanx style="verb">prompt</spanx> parameter value in the
                  Authentication Request is <spanx style="verb">none</spanx>,
                  but the Authentication Request cannot be completed
                  without displaying a user interface for End-User authentication.
                  -->
                </t>

                <t hangText="account_selection_required">
                  <vspace/>
                  End-User は Authorization Server にてセッションの選択を必要とされる (REQUIRED).
                  End-User は Authorization Server にて異なるアカウントで認証されているが, セッションを選択していないかもしれない (MAY).
                  Authentication Request 中の <spanx style="verb">prompt</spanx> パラメータが <spanx style="verb">none</spanx> であるが, 利用するセッションを選択するためのユーザーインターフェースの表示なしには Authentication Request が完了できない時にこのエラーが返される.
                  <!--
                  The End-User is REQUIRED
                  to select a session at the Authorization Server. The End-User MAY
                  be authenticated at the Authorization Server with different
                  associated accounts, but the End-User did not select a session.
                  This error MAY be returned
                  when the <spanx style="verb">prompt</spanx> parameter value in the
                  Authentication Request is <spanx style="verb">none</spanx>,
                  but the Authentication Request cannot be completed
                  without displaying a user interface to prompt for a session to use.
                  -->
                </t>

                <t hangText="consent_required">
                  <vspace/>
                  Authorization Server は End-User の同意を必要とする.
                  Authentication Request 中の <spanx style="verb">prompt</spanx> パラメータが <spanx style="verb">none</spanx> であるが, End-User の同意のためのユーザーインターフェースの表示なしには Authentication Request が完了できない時にこのエラーが返される.
                  <!--
                  The Authorization Server
                  requires End-User consent. This error MAY be returned when the
                  <spanx style="verb">prompt</spanx> parameter value in the
                  Authentication Request is <spanx style="verb">none</spanx>,
                  but the Authentication Request cannot be completed
                  without displaying a user interface for End-User consent.
                  -->
                </t>

                <t hangText="invalid_request_uri">
                  <vspace/>
                  Authorization Request 中の <spanx style="verb">request_uri</spanx> はエラーを返すか, 無効なデータを含む.
                  <!--
                  The
                  <spanx style="verb">request_uri</spanx> in
                  the Authorization Request returns an error or contains invalid data.
                  -->
                </t>

                <t hangText="invalid_request_object">
                  <vspace/>
                  <spanx style="verb">request</spanx> パラメータが無効な Request Object を含む.
                  <!--
                  The
                  <spanx style="verb">request</spanx> parameter contains an invalid
                  Request Object.
                  -->
                </t>

                <t hangText="request_not_supported">
                  <vspace/>
                  OP は <xref target="JWTRequests"/> にて定義されている <spanx style="verb">request</spanx> パラメータをサポートしていない.
                  <!--
                  The OP does not support use of the
                  <spanx style="verb">request</spanx> parameter
                  defined in <xref target="JWTRequests"/>.
                  -->
                </t>

                <t hangText="request_uri_not_supported">
                  <vspace/>
                  OP は <xref target="JWTRequests"/> にて定義されている <spanx style="verb">request_uri</spanx> パラメータをサポートしていない.
                  <!--
                  The OP does not support use of the
                  <spanx style="verb">request_uri</spanx> parameter
                  defined in <xref target="JWTRequests"/>.
                  -->
                </t>

                <t hangText="registration_not_supported">
                  <vspace/>
                  OP は <xref target="RegistrationParameter"/> で定義されている <spanx style="verb">registration</spanx> パラメータをサポートしていない.
                  <!--
                  The OP does not support use of the
                  <spanx style="verb">registration</spanx> parameter
                  defined in <xref target="RegistrationParameter"/>.
                  -->
                </t>

              </list>
            </t>

            <t>
              エラーレスポンスパラメータは以下のようになる.
              <!--
              The error response parameters are the following:
              -->

              <list style="hanging">
                <t hangText="error">
                  <vspace/>
                  REQUIRED.
                  エラーコード.
                  <!--
                  REQUIRED. Error code.
                  -->
                </t>

                <t hangText="error_description">
                  <vspace/>
                  OPTIONAL.
                  人間が読める ASCII エンコードされたエラーの説明文.
                  <!--
                  OPTIONAL. Human-readable ASCII
                  encoded text description of the error.
                  -->
                </t>

                <t hangText="error_uri">
                  <vspace/>
                  OPTIONAL.
                  エラーについての追加情報を含むWebページのURI.
                  <!--
                  OPTIONAL. URI of a web page that
                  includes additional information about the error.
                  -->
                </t>

                <t hangText="state">
                  <vspace/>
                  OAuth 2.0 の state の値.
                  Authorization Request が <spanx style="verb">state</spanx> パラメータを含む場合は REQUIRED.
                  Client から受け取った値をセットする.
                  <!--
                  OAuth 2.0 state value.
                  REQUIRED if the Authorization Request
                  included the <spanx style="verb">state</spanx> parameter. Set
                  to the value received from the Client.
                  -->
                </t>
              </list>
            </t>

            <t>
              Authorization Code Flow を利用するとき, エラーレスポンスパラメータは異なる Response Mode が指定されない限り Redirection URI のクエリ要素に付加される.
              <!--
              When using the Authorization Code Flow, the error response
              parameters are added to the query component of the Redirection URI,
              unless a different Response Mode was specified.
              -->
            </t>

            <t>
              <figure>
                <preamble>
                  以下にこのフローを用いたエラーレスポンスの例を示す. (改行は掲載上の都合による)
                  <!--
                  The following is a non-normative example
                  error response using this flow
                  (with line wraps within values for display purposes only):
                  -->
                </preamble>

                <artwork><![CDATA[
  HTTP/1.1 302 Found
  Location: https://client.example.org/cb?
    error=invalid_request
    &error_description=
      Unsupported%20response_type%20value
    &state=af0ifjsldkj
]]></artwork>
              </figure>
            </t>
          </section>

          <section anchor="AuthResponseValidation" title="Authentication Response Validation">
            <t>
              Authorization Code Flow を利用するとき, Client は RFC 6749, 特に Section 4.1.2 と Section 10.12 に従ってレスポンスを検証しなければならない (MUST).
            </t>
            <!--
            <t>
              When using the Authorization Code Flow,
              the Client MUST validate the response according to RFC 6749,
              especially Sections 4.1.2 and 10.12.
            </t>
            -->
          </section>

        </section>

        <section anchor="TokenEndpoint" title="Token Endpoint">
          <t>
            Access Token と ID Token , そしてオプションの Refresh Token の取得には,
            Authorization Code Flowを使用する場合,
            <xref target="RFC6749">OAuth 2.0</xref> の Section 3.2 に記載の通り,
            RP (Client) は Token Endpoint へ Token Request を送信し, Token Responseを取得する.
          </t>
          <!--
          <t>
            To obtain an Access Token, an ID Token, and optionally a Refresh Token,
            the RP (Client) sends a Token Request to the Token Endpoint
            to obtain a Token Response, as described in
            Section 3.2 of <xref target="RFC6749">OAuth 2.0</xref>,
            when using the Authorization Code Flow.
          </t>
          -->

          <t>
            Token Endpoint と通信する際は TLS を利用しなければならない (MUST).
            TLS の使用に関するより詳細な情報を得る場合,  <xref target="TLSRequirements"/> を参照すること.
          </t>
          <!--
          <t>
            Communication with the Token Endpoint MUST utilize TLS.
            See <xref target="TLSRequirements"/> for more information on using TLS.
          </t>
          -->

          <section anchor="TokenRequest" title="Token Request">

            <t>
              <xref target="RFC6749">OAuth 2.0</xref> の Section 4.1.3に記載の通り,
              <spanx style="verb">grant_type</spanx> の値に
              <spanx style="verb">authorization_code</spanx> を指定し,
              (Authorization Code の形で) Authorization Grant を
              Token Endpoint に提示することで,
              Client は Token Request を生成する.
              Client が Confidential Client の場合,
              <xref target="ClientAuthentication"/> に記載の通り,
              自身の <spanx style="verb">client_id</spanx> 用に登録された認証方式を用いて,
              Token Endpoint に対して認証を行わなければならない (MUST).
            </t>
            <!--
            <t>
              A Client makes a Token Request by
              presenting its Authorization Grant (in the form of
              an Authorization Code) to the Token Endpoint
              using the <spanx style="verb">grant_type</spanx> value
              <spanx style="verb">authorization_code</spanx>, as described in
              Section 4.1.3 of <xref target="RFC6749">OAuth 2.0</xref>.
              If the Client is a Confidential Client, then it MUST
              authenticate to the Token Endpoint using the authentication method
              registered for its <spanx style="verb">client_id</spanx>,
              as described in <xref target="ClientAuthentication"/>.
            </t>
            -->

            <t>
              <xref target="RFC6749">OAuth 2.0</xref> の Section 4.1.3 に記載の通り,
              Client は, HTTP <spanx style="verb">POST</spanx> メソッドと
              <xref target="FormSerialization"/> による Form Serialization を用いて,
              Token Endpoint にパラメータを送信する.
            </t>
            <!--
            <t>
              The Client sends the parameters to the Token Endpoint
              using the HTTP <spanx style="verb">POST</spanx> method and the
              Form Serialization, per <xref target="FormSerialization"/>,
              as described in Section 4.1.3 of
              <xref target="RFC6749">OAuth 2.0</xref>.
            </t>
            -->

            <figure>
              <preamble>
                以下に Token Request の一例を示す. (表示の都合上の改行を含む)
              </preamble>
              <!--
              <preamble>
                The following is a non-normative example of a Token Request
                (with line wraps within values for display purposes only):
              </preamble>
              -->

              <artwork><![CDATA[
  POST /token HTTP/1.1
  Host: server.example.com
  Content-Type: application/x-www-form-urlencoded
  Authorization: Basic czZCaGRSa3F0MzpnWDFmQmF0M2JW

  grant_type=authorization_code&code=SplxlOBeZQQYbYS6WxSbIA
    &redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb
]]></artwork>
            </figure>
          </section>

          <section anchor="TokenRequestValidation" title="Token Request Validation">
            <t>
              Authorization Server は, Token Request を以下のように検証しなければならない (MUST).
            </t>
            <!--
            <t>
              The Authorization Server MUST validate the Token Request as follows:
            </t>
            -->
            <t>
              <list style='symbols'>
                <t>
                  <xref target="ClientAuthentication"/> により,
                  Client Credential を発行していた場合や, その他の Client Authentication 方式を用いる場合,
                  Client を認証.
                </t>
                <t>
                  Authorization Code が認証された Client 向けに発行されたものかを確認.
                </t>
                <t>
                  Authorization Code の有効性を検証.
                </t>
                <t>
                  可能な場合, その Authorization Code が以前に使用されていないものであることを検証.
                </t>
                <t>
                  <spanx style='verb'>redirect_uri</spanx> パラメータの値が,
                  最初の Authorization Request に含まれていた
                  <spanx style='verb'>redirect_uri</spanx> パラメータの値と同一であることを確認.
                  登録されている <spanx style='verb'>redirect_uri</spanx> の値が一つだけであり,
                  <spanx style='verb'>redirect_uri</spanx> パラメータの値が存在していない場合,
                  Authorization Server は, (Clientはそのパラメータを含むべきであるため) エラーを返すかもしれないし (MAY),
                  (OAuth 2.0ではこのようなケースではパラメータの省略を許可しているため) エラーなしで処理を進めるかもしれない (MAY).
                </t>
                <t>
                  (ID Token を Token Endpoint から返却できるように)
                  その使用された Authorization Code が OpenID Connect Authentication Request に対する応答として発行されたものであることを検証.
                </t>
              </list>
            </t>
            <!--
            <t>
              <list style='symbols'>
                <t>
                  Authenticate the Client if it was issued Client Credentials
                  or if it uses another Client Authentication method,
                  per <xref target="ClientAuthentication"/>.
                </t>
                <t>
                  Ensure the
                  Authorization Code was issued to the authenticated Client.
                </t>
                <t>
                  Verify that the Authorization Code is valid.
                </t>
                <t>
                  If possible,
                  verify that the Authorization Code has not been previously used.
                </t>
                <t>
                  Ensure that the
                  <spanx style='verb'>redirect_uri</spanx> parameter value
                  is identical to the <spanx style='verb'>redirect_uri</spanx>
                  parameter value that was included in the initial Authorization Request.
                  If the <spanx style='verb'>redirect_uri</spanx> parameter value
                  is not present when there is only one registered
                  <spanx style='verb'>redirect_uri</spanx> value,
                  the Authorization Server MAY return an error
                  (since the Client should have included the parameter)
                  or MAY proceed without an error
                  (since OAuth 2.0 permits the parameter to be omitted in this case).
                </t>
                <t>
                  Verify that the Authorization Code used was issued
                  in response to an OpenID Connect Authentication Request
                  (so that an ID Token will be returned from the Token Endpoint).
                </t>
              </list>
            </t>
            -->

          </section>

          <section anchor="TokenResponse" title="Successful Token Response">
            <t>
              Client から Token Request を受け取り, リクエストの検証を行った後, Authorization Server はサクセスレスポンスを返す.
              このレスポンスには ID Token と Access Token を含む.
              サクセスレスポンス中のパラメータは <xref target="RFC6749">OAuth 2.0</xref> Section 4.1.4 で定義される.
              レスポンスメディアタイプは <spanx style="verb">application/json</spanx> とする.
            </t>
            <!--
            <t>
              After receiving and validating a valid and authorized Token Request
              from the Client, the Authorization Server returns a successful
              response that includes an ID Token and an Access Token.  The
              parameters in the successful response are defined in Section 4.1.4
              of <xref target="RFC6749">OAuth 2.0</xref>.
              The response uses the <spanx style="verb">application/json</spanx>
              media type.
            </t>
            -->
            <t>
              OAuth 2.0 <spanx style="verb">token_type</spanx> レスポンスパラメータは, <xref target="RFC6750">OAuth 2.0 Bearer Token Usage</xref> に従い <spanx style="verb">Bearer</spanx> とすること (MUST).
              ただし他の Token Type が Client との間でネゴシエートされている場合は, その限りではない.
              Server は <spanx style="verb">Bearer</spanx> Token Type をサポートすべきである (SHOULD).
              その他の Token Type の利用に関しては, 本仕様の定めるところではない.
            </t>
            <!--
            <t>
              The OAuth 2.0 <spanx style="verb">token_type</spanx> response parameter
              value MUST be <spanx style="verb">Bearer</spanx>,
              as specified in <xref target="RFC6750">OAuth 2.0 Bearer Token Usage</xref>,
              unless another Token Type has been negotiated with the Client.
              Servers SHOULD support the <spanx style="verb">Bearer</spanx> Token Type;
              use of other Token Types is outside the scope of this specification.
            </t>
            -->
            <t>
              OAuth 2.0 で定義されるパラメータに加え, 以下のパラメータをレスポンスに含めること (MUST).
            </t>
            <!--
            <t>
              In addition to the response parameters specified by OAuth 2.0, the following
              parameters MUST be included in the response:
            </t>
            -->
            <t>
              <list style="hanging">
                <t hangText="id_token">
                  <vspace/>
                  認証セッションに紐づいた ID Token 値.
                  <!--
                  ID Token value associated with the
                  authenticated session.
                  -->
                </t>
              </list>
            </t>
            <t>
              トークン, 鍵, その他のセンシティブ情報を含む全ての Token Response には, 以下の HTTP レスポンスヘッダーを指定しなければならない (MUST).
            </t>
            <!--
            <t>
              All Token Responses that contain tokens, secrets, or other
              sensitive information MUST include the following HTTP response header
              fields and values:
            </t>
            -->

            <texttable title="HTTP Response Headers and Values">
              <ttcol>Header Name</ttcol>

              <ttcol>Header Value</ttcol>

              <c>Cache-Control</c>

              <c>no-store</c>

              <c>Pragma</c>

              <c>no-cache</c>
            </texttable>

            <figure>
              <preamble>
                以下はサクセス Token Response の例である.
                ID Token の署名は <xref target="ExampleRSAKey"/> にある鍵で検証可能である.
              </preamble>
              <!--
              <preamble>
                The following is a non-normative example of a successful Token Response.
                The ID Token signature in the example can be verified with the key at
                <xref target="ExampleRSAKey"/>.
              </preamble>
              -->

              <artwork><![CDATA[
  HTTP/1.1 200 OK
  Content-Type: application/json
  Cache-Control: no-store
  Pragma: no-cache

  {
   "access_token": "SlAV32hkKG",
   "token_type": "Bearer",
   "refresh_token": "8xLOxBtZp8",
   "expires_in": 3600,
   "id_token": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjFlOWdkazcifQ.ewogImlzc
     yI6ICJodHRwOi8vc2VydmVyLmV4YW1wbGUuY29tIiwKICJzdWIiOiAiMjQ4Mjg5
     NzYxMDAxIiwKICJhdWQiOiAiczZCaGRSa3F0MyIsCiAibm9uY2UiOiAibi0wUzZ
     fV3pBMk1qIiwKICJleHAiOiAxMzExMjgxOTcwLAogImlhdCI6IDEzMTEyODA5Nz
     AKfQ.ggW8hZ1EuVLuxNuuIJKX_V8a_OMXzR0EHR9R6jgdqrOOF4daGU96Sr_P6q
     Jp6IcmD3HP99Obi1PRs-cwh3LO-p146waJ8IhehcwL7F09JdijmBqkvPeB2T9CJ
     NqeGpe-gccMg4vfKjkM8FcGvnzZUN4_KSP0aAp1tOJ1zZwgjxqGByKHiOtX7Tpd
     QyHE5lcMiKPXfEIQILVq0pc_E2DzL7emopWoaoZTF_m0_N0YzFC6g6EJbOEoRoS
     K5hoDalrcvRYLSrQAZZKflyuVCyixEoV9GfNQC3_osjzw2PAithfubEEBLuVVk4
     XUVrWOLrLl0nx7RkKU8NXNHq-rvKMzqg"
  }
]]></artwork>
            </figure>

            <t>
              <xref target="RFC6749">OAuth 2.0</xref> にあるように, Client は理解できないレスポンスパラメータを無視すべきである (SHOULD).
            </t>
            <!--
            <t>As specified in <xref target="RFC6749">OAuth 2.0</xref>, Clients
            SHOULD ignore unrecognized response parameters.</t>
            -->
          </section>

          <section anchor="TokenErrorResponse" title="Token Error Response">

            <t>
              Token Request が不正もしくは未認可な場合, Authorization Server はエラーレスポンスを返す.
              Token Error Response のパラメータは <xref target="RFC6749">OAuth 2.0</xref> Section 5.2 で定義されている.
              HTTP レスポンスボディのメディアタイプは <spanx style="verb">application/json</spanx> であり, HTTP レスポンスコードは400とする.
            </t>
            <!--
            <t>
              If the Token Request is invalid or unauthorized, the
              Authorization Server constructs the error response. The parameters
              of the Token Error Response are defined as in Section 5.2 of <xref
              target="RFC6749">OAuth 2.0</xref>.
              The HTTP response body uses the <spanx style="verb">application/json</spanx>
              media type with HTTP response code of 400.
            </t>
            -->

            <figure>
              <preamble>
                以下に Token Error Response の例を示す.
              </preamble>
              <!--
              <preamble>The following is a non-normative example Token Error Response:</preamble>
              -->

              <artwork><![CDATA[
  HTTP/1.1 400 Bad Request
  Content-Type: application/json
  Cache-Control: no-store
  Pragma: no-cache

  {
   "error": "invalid_request"
  }
]]></artwork>
            </figure>
          </section>

          <section anchor="TokenResponseValidation" title="Token Response Validation">
            <t>
              Client は以下の手順に従い Token Response を検証すること (MUST).
              <!--
              The Client MUST validate the Token Response as follows:
              -->
              <list style="numbers">
                <t>
                  RFC 6749 (特に Sections 5.1 および 10.12) のバリデーションルールに従う.
                </t>
                <!--
                <t>
                  Follow the validation rules in RFC 6749,
                  especially those in Sections 5.1 and 10.12.
                </t>
                -->
                <t>
                  ID Token バリデーションルールに関しては <xref target="IDTokenValidation"/> に従う.
                </t>
                <!--
                <t>
                  Follow the ID Token validation rules in <xref target="IDTokenValidation"/>.
                </t>
                -->
                <t>
                  Access Token バリデーョンルールに関しては <xref target="CodeFlowTokenValidation"/> に従う.
                </t>
                <!--
                <t>
                  Follow the Access Token validation rules in <xref target="CodeFlowTokenValidation"/>.
                </t>
                -->
              </list>
            </t>

          </section>

          <section anchor="CodeIDToken" title="ID Token">

            <t>
              ID Token のコンテンツに関しては <xref target="IDToken"/> を参照のこと.
              Authorization Code Flow を利用する場合, 以下に示すように, いくつかの ID Token Claim に追加要件が適用される.
            </t>
            <!--
            <t>
              The contents of the ID Token are as described in <xref target="IDToken"/>.
              When using the Authorization Code Flow,
              these additional requirements for the following ID Token Claims apply:
            </t>
            -->
            <t>
              <list style="hanging">

                <t hangText="at_hash">
                  <vspace/>
                  OPTIONAL.
                  Access Token のハッシュ値.
                  この値は, <spanx style="verb">access_token</spanx> の ASCII オクテット列のハッシュ値の左半分を base64url エンコードしたものであり, ハッシュアルゴリズムは ID Token の JOSE Header にある <spanx style="verb">alg</spanx> Header Parameter で用いられるハッシュアルゴリズムと同じものを用いる.
                  例えば <spanx style="verb">alg</spanx> が <spanx style="verb">RS256</spanx> であれば, <spanx style="verb">access_token</spanx> の SHA-256 ハッシュ値を計算し, その左半分の128ビットを base64url エンコードする.
                  <spanx style="verb">at_hash</spanx> は大文字小文字を区別する文字列である.
                  <!--
                  OPTIONAL.
                  Access Token hash value.
                  Its value is the base64url encoding of the left-most half of the
                  hash of the octets of the ASCII representation of the
                  <spanx style="verb">access_token</spanx> value,
                  where the hash algorithm used is the hash algorithm
                  used in the <spanx style="verb">alg</spanx> Header Parameter
                  of the ID Token's JOSE Header.
                  For instance, if the <spanx style="verb">alg</spanx> is
                  <spanx style="verb">RS256</spanx>, hash the
                  <spanx style="verb">access_token</spanx> value
                  with SHA-256, then take the left-most 128 bits and base64url encode them.
                  The <spanx style="verb">at_hash</spanx> value is a case sensitive string.
                  -->
                </t>

              </list>
            </t>

          </section>

          <section anchor="IDTokenValidation" title="ID Token Validation">
            <t>
              Client は Token Response 内の ID Token を確認しなければならない (MUST).
            </t>
            <!--
            <t>
              Clients MUST validate the ID Token in the Token Response
              in the following manner:
            </t>
            -->

            <t>
              <list style="numbers">
                <t>
                  ID Token が 暗号化されているならば, Client が Registration にて指定し OP が ID Token の暗号化に利用した鍵とアルゴリズムを用いて復号する.
                  Registration 時に OP と暗号化が取り決められても ID Token が暗号化されていなかったときは, RP はそれを拒絶するべき (SHOULD).
                </t>
                <!--
                <t>
                  If the ID Token is encrypted, decrypt it using the
                  keys and algorithms that the Client specified during Registration
                  that the OP was to use to encrypt the ID Token.
                  If encryption was negotiated with the OP at Registration time
                  and the ID Token is not encrypted, the RP SHOULD reject it.
                </t>
                -->
                <t>
                  (一般的に Discovery を通して取得される) OpenID Provider の Issuer Identifier は <spanx style="verb">iss</spanx> (issuer) Claim の値と正確に一致しなければならない (MUST).
                </t>
                <!--
                <t>
                  The Issuer Identifier for the OpenID Provider
                  (which is typically obtained during Discovery)
                  MUST exactly match the value of the
                  <spanx style="verb">iss</spanx> (issuer) Claim.
                </t>
                -->
                <t>
                  Client は <spanx style="verb">aud</spanx> (audience) Claim が <spanx style="verb">iss</spanx> (issuer) Claim で示される Issuer にて登録された, 自身の <spanx style="verb">client_id</spanx> をオーディエンスとして含むことを確認しなければならない (MUST).
                  <spanx style="verb">aud</spanx> (audience) Claim は複数要素の配列を含んでも良い (MAY).
                  ID Token が Client を有効なオーディエンスとして記載しない, もしくは Client から信用されていない追加のオーディエンスを含むならば, そのID Token は拒絶されなければならない.
                </t>
                <!--
                <t>
                  The Client MUST validate that the
                  <spanx style="verb">aud</spanx> (audience) Claim
                  contains its <spanx style="verb">client_id</spanx> value
                  registered at the Issuer identified by the
                  <spanx style="verb">iss</spanx> (issuer) Claim
                  as an audience.
                  The <spanx style="verb">aud</spanx> (audience) Claim
                  MAY contain an array with more than one element.
                  The ID Token MUST be rejected if the ID Token does not list
                  the Client as a valid audience, or if it contains additional audiences not trusted by the Client.
                </t>
                -->

                <t>
                  ID Token が複数のオーディエンスを含むならば, Client は <spanx style="verb">azp</spanx> Claim があることを確認すべき (SHOULD).
                </t>
                <!--
                <t>
                  If the ID Token contains multiple audiences, the Client SHOULD verify
                  that an <spanx style="verb">azp</spanx> Claim is present.
                </t>
                -->

                <t>
                  <spanx style="verb">azp</spanx> (authorized party) Claim があるならば, Client は Clime の値が自身の <spanx style="verb">client_id</spanx> であることを確認すべき (SHOULD).
                </t>
                <!--
                <t>
                  If an <spanx style="verb">azp</spanx> (authorized party) Claim is present,
                  the Client SHOULD verify that its <spanx style="verb">client_id</spanx>
                  is the Claim Value.
                </t>
                -->

                <t>
                  (このフローの中で) ID Token を Client と Token Endpoint の間の直接通信により受け取ったならば, トークンの署名確認の代わりに TLS Server の確認を issuer の確認のために利用してもよい (MAY).
                  Client は <xref target="JWS">JWS</xref> に従い, JWT <spanx style="verb">alg</spanx> Header Parameter を用いて全ての ID Token の署名を確認しなければならない (MUST).
                  Client は Issuer から提供された鍵を利用しなければならない (MUST).
                </t>
                <!--
                <t>
                  If the ID Token is received via direct
                  communication between the Client and the Token Endpoint
                  (which it is in this flow), the TLS server
                  validation MAY be used to validate the issuer in place of
                  checking the token signature.
                  The Client MUST validate the signature of all other ID Tokens according to
                  <xref target="JWS">JWS</xref> using the algorithm specified in the
                  JWT <spanx style="verb">alg</spanx> Header Parameter.
                  The Client MUST use the keys provided by the Issuer.
                </t>
                -->

                <t>
                  <spanx style="verb">alg</spanx> の値はデフォルトの <spanx style="verb">RS256</spanx> もしくは Registration にて Client により <spanx style="verb">id_token_signed_response_alg</spanx> パラメータとして送られたアルゴリズムであるべき (SHOULD).
                </t>
                <!--
                <t>The <spanx style="verb">alg</spanx> value SHOULD be the default of
                <spanx style="verb">RS256</spanx>
                or the algorithm sent by the Client
                in the <spanx style="verb">id_token_signed_response_alg</spanx> parameter
                during Registration.</t>
                -->

                <t>
                  JWT <spanx style="verb">alg</spanx> Header Parameter が <spanx style="verb">HS256</spanx>, <spanx style="verb">HS384</spanx> および <spanx style="verb">HS512</spanx> のような MAC ベースのアルゴリズムを利用するならば, <spanx style="verb">aud</spanx> (audience) Claim に含まれる <spanx style="verb">client_id</spanx> に対応する <spanx style="verb">client_secret</spanx> の UTF-8 表現バイト列が署名の確認に用いられる.
                  MAC ベースのアルゴリズムについて, <spanx style="verb">aud</spanx> が複数の値を持つとき, もしくは <spanx style="verb">aud</spanx> の値と異なる <spanx style="verb">azp</spanx> の値があるときの振る舞いは規定されない.
                </t>
                <!--
                <t>If the JWT <spanx style="verb">alg</spanx> Header Parameter
                uses a MAC based algorithm such as
                <spanx style="verb">HS256</spanx>, <spanx style="verb">HS384</spanx>,
                or <spanx style="verb">HS512</spanx>,
                the octets of the UTF-8 representation of
                the <spanx style="verb">client_secret</spanx> corresponding to the
                <spanx style="verb">client_id</spanx> contained in the
                <spanx style="verb">aud</spanx> (audience) Claim are used as the key
                to validate the signature.
                For MAC based algorithms, the behavior is unspecified
                if the <spanx style="verb">aud</spanx> is multi-valued or
                if an <spanx style="verb">azp</spanx> value is present
                that is different than the <spanx style="verb">aud</spanx> value.
                </t>
                -->
                <t>
                  現在時刻は <spanx style="verb">exp</spanx> Claim の時刻表現より前でなければならない (MUST).
                </t>
                <!--
                <t>
                  The current time MUST be before the time represented by the
                  <spanx style="verb">exp</spanx> Claim.
                </t>
                -->

                <t>
                  <spanx style="verb">iat</spanx> Claim は現在時刻からはるか昔に発行されたトークンを拒絶するために利用でき, 攻撃を防ぐために nonce が保存される必要がある期間を制限する.
                  許容できる範囲は Client の仕様である.
                </t>
                <!--
                <t>The <spanx style="verb">iat</spanx> Claim can be used to reject tokens that
                were issued too far away from the current time, limiting the amount of
                time that nonces need to be stored to prevent attacks.
                The acceptable range is Client specific.</t>
                -->

                <t>
                  nonce の値が Authentication Request にて送られたならば, <spanx style="verb">nonce</spanx> Claim が存在し, その値が Authentication Request にて送られたものと一致することを確認するためにチェックされなければならない (MUST).
                  Client は <spanx style="verb">nonce</spanx> の値を リプレイアタックのためにチェックすべき (SHOULD).
                  リプレイアタックを検知する正確な方法は Client の仕様である.
                </t>
                <!--
                <t>
                  If a nonce value was sent in the Authentication Request,
                  a <spanx style="verb">nonce</spanx> Claim MUST be present
                  and its value checked to verify that
                  it is the same value as the one that was sent in the Authentication Request.
                  The Client SHOULD check the <spanx style="verb">nonce</spanx> value
                  for replay attacks.
                  The precise method for detecting replay attacks is Client specific.
                </t>
                -->

                <t>
                  <spanx style="verb">acr</spanx> Claim が 要求されたならば, Client は主張された Claim の値が適切かどうかをチェックすべきである (SHOULD).
                  <spanx style="verb">acr</spanx> Claim の値と意味はこの仕様の対象外である.
                </t>
                <!--
                <t>If the <spanx style="verb">acr</spanx> Claim was requested, the
                Client SHOULD check that the asserted Claim Value is appropriate.
                The meaning and processing of
                <spanx style="verb">acr</spanx> Claim Values is out of scope for this specification.</t>
                -->

                <t>
                  <spanx style="verb">auth_time</spanx> Claim が要求されたならば, この Claim のための特定のリクエストもしくは <spanx style="verb">max_age</spanx> パラメータを用いて Client は <spanx style="verb">auth_time</spanx> Claim の値をチェックし, もし最新のユーザー認証からあまりに長い時間が経過したと判定されたときは再認証を要求すべきである (SHOULD).
                </t>
                <!--
                <t>
                  If the <spanx style="verb">auth_time</spanx> Claim was requested,
                  either through a specific request for this Claim
                  or by using the <spanx style="verb">max_age</spanx> parameter,
                  the Client SHOULD check the <spanx style="verb">auth_time</spanx> Claim
                  value and request re-authentication if it determines too much time
                  has elapsed since the last End-User authentication.
                </t>
                -->
              </list>
            </t>

          </section>

          <section anchor="CodeFlowTokenValidation" title="Access Token Validation">
            <t>
              Authorization Code Flow を利用し, ID Token が <spanx style="verb">at_hash</spanx> Claim を含むときには <xref target="ImplicitTokenValidation"/> にある Implicit Flow と同様に, Client はそれを Token Endpoint から返された ID Token と Access Token を用いて Access Token の確認に利用してもよい (MAY).
            </t>
            <!--
            <t>
              When using the Authorization Code Flow,
              if the ID Token contains an <spanx style="verb">at_hash</spanx> Claim,
              the Client MAY use it to validate the Access Token
              in the same manner as for the Implicit Flow,
              as defined in <xref target="ImplicitTokenValidation"/>,
              but using the ID Token and Access Token returned from the Token Endpoint.
            </t>
            -->
          </section>

        </section>

      </section>

      <section anchor="ImplicitFlowAuth" title="Authentication using the Implicit Flow">
        <t>
          この章では Implicit Flow での認証フローについて述べる.
          Implicit Flow を利用する場合, Token Endpoint は使用されず, 全てのトークンは Authorization Endpoint から返される.
        </t>
        <!--
        <t>
          This section describes how to perform authentication using the Implicit Flow.
          When using the Implicit Flow,
          all tokens are returned from the Authorization Endpoint;
          the Token Endpoint is not used.
        </t>
        -->

        <t>
          Implicit Flow は主にスクリプト言語を用いて実装されブラウザ上で動作する Client によって使用される.
          Access Token と ID Token は, Client に直接返却され,
          その Access Token と ID Token は, End-User と End-User の User Agent にアクセスするアプリケーションに露出する可能性がある.
          Authorization Server は Client Authentication を行わない.
        </t>
        <!--
        <t>The Implicit Flow is mainly used by Clients implemented in a browser
        using a scripting language. The Access Token and ID Token are returned
        directly to the Client, which may expose them to the End-User and
        applications that have access to the End-User's User Agent.
        The Authorization Server does not perform Client Authentication.
        </t>
        -->

        <section anchor="ImplicitFlowSteps" title="Implicit Flow Steps">
          <t>
            Implicit Flow の流れは以下通りである.
          </t>
          <!--
          <t>The Implicit Flow follows the following steps:</t>
          -->

          <t>
            <list style="numbers">
              <t>
                Client は必要なパラメータを含む Authentication Request を用意する.
              </t>
              <!--
              <t>Client prepares an Authentication Request containing the desired
              request parameters.</t>
              -->

              <t>
                Client は Authorization Server にリクエストを送信する.
              </t>
              <!--
              <t>Client sends the request to the Authorization Server.</t>
              -->

              <t>
                Authorization Server は End-User を Authenticate する.
              </t>
              <!--
              <t>Authorization Server Authenticates the End-User.</t>
              -->

              <t>
                Authorization Server は End-User の Consent/Authorization を得る.
              </t>
              <!--
              <t>Authorization Server obtains End-User Consent/Authorization.</t>
              -->

              <t>
                Authorization Server は ID Token, および要求があれば Access Token を添えて End-User を Client に戻す.
              </t>
              <!--
              <t>Authorization Server sends the End-User back to the Client with
              an ID Token and, if requested, an Access Token.</t>
              -->

              <t>
                Client は ID Token を検証し, End-User の Subject Identifier を取得する.
              </t>
              <!--
              <t>Client validates the ID token and retrieves the End-User's
              Subject Identifier.</t>
              -->

            </list>
          </t>
        </section>

        <section anchor="ImplicitAuthorizationEndpoint" title="Authorization Endpoint">
          <t>
            Implicit Flow では, 本章で述べる相違点以外は,
            Authorization Code Flow と同様の方法 (<xref target="AuthorizationEndpoint"/> 参照) で Authorization Endpoint を利用する.
          </t>
          <!--
          <t>
            When using the Implicit Flow, the Authorization Endpoint is used
            in the same manner as for the Authorization Code Flow,
            as defined in <xref target="AuthorizationEndpoint"/>,
            with the exception of the differences specified in this section.
          </t>
          -->

          <section anchor="ImplicitAuthRequest" title="Authentication Request">
            <t>
              Authentication Request 構築方法は, 以下の Authentication Request パラメータ以外は <xref target="AuthRequest"/> に従う.
            </t>
            <!--
            <t>
              Authentication Requests are made
              as defined in <xref target="AuthRequest"/>,
              except that these Authentication Request parameters
              are used as follows:
            </t>
            -->
            <t>
              <list style="hanging">
                <t hangText="response_type">
                  <vspace/>
                  REQUIRED.
                  使用する認証処理フローを決定する OAuth 2.0 Response Type 値.
                  この値により, どのエンドポイントからどのようなパラメータが返されるのかなどが決定される.
                  Implicit Flow を使用する場合, この値は <spanx style="verb">id_token&nbsp;token</spanx> ないしは <spanx style="verb">id_token</spanx> となる.
                  これらの値の意味するところは <xref target="OAuth.Responses">OAuth 2.0 Multiple Response Type Encoding Practices</xref> を参照すること.
                  <spanx style="verb">id_token</spanx> を利用する場合, Access Token は返されない.
                  <!--
                  REQUIRED.
                  OAuth 2.0 Response Type value that determines
                  the authorization processing flow to be used,
                  including what parameters are returned from the endpoints used.
                  When using the Implicit Flow, this value is
                  <spanx style="verb">id_token&nbsp;token</spanx> or
                  <spanx style="verb">id_token</spanx>.
                  The meanings of both of these values are defined in
                  <xref target="OAuth.Responses">OAuth 2.0 Multiple Response Type Encoding Practices</xref>.
                  No Access Token is returned when the value is
                  <spanx style="verb">id_token</spanx>.
                  -->
                </t>
                <t>
                  注) OAuth 2.0 は Implicit Flow に Response Type <spanx style="verb">token</spanx> という値を定義してはいるが, その場合 ID Token が返却できないため, OpenID Connect ではこの Response Type は利用しない.
                  <!--
                  NOTE:  While OAuth 2.0 also defines the
                  <spanx style="verb">token</spanx> Response Type value
                  for the Implicit Flow, OpenID Connect does not use this Response Type,
                  since no ID Token would be returned.
                  -->
                </t>

                <t hangText="redirect_uri">
                  REQUIRED.
                  レスポンスが返される Redirection URI.
                  この URI は, Client が OpenID Provider に対して事前に登録済みの Redirection URI のいずれかと完全一致しなければならない (MUST).
                  マッチングルールは <xref target="RFC3986"/> (Simple String Comparison) の Section 6.2.1 に従うこと.
                  このフローを使用する場合, Client がネイティブアプリケーションでない限り, Redirection URI に <spanx style="verb">http</spanx> スキーマを利用してはならない (MUST NOT).
                  Client がネイティブアプリケーションの場合は, ホスト名に <spanx style="verb">localhost</spanx> とした上で <spanx style="verb">http:</spanx> スキーマを利用してもよい (MAY).
                </t>
                <!--
                <t hangText="redirect_uri">
                  <vspace/>
                  REQUIRED.
                  Redirection URI to which the response will be sent.
                  This URI MUST exactly match one of the Redirection URI values
                  for the Client pre-registered at the OpenID Provider,
                  with the matching performed as described in
                  Section 6.2.1 of <xref target="RFC3986"/> (Simple String Comparison).
                  When using this flow, the Redirection URI
                  MUST NOT use the <spanx style="verb">http</spanx> scheme
                  unless the Client is a native application, in which case it MAY
                  use the <spanx style="verb">http:</spanx> scheme with
                  <spanx style="verb">localhost</spanx> as the hostname.
                </t>
                -->

                <t hangText="nonce">
                  <vspace/>
                  REQUIRED.
                  Client セッションと ID Token を紐づける文字列であり, リプレイアタック対策に用いられる.
                  この値は Authentication Request で指定され, そのままの値で ID Token に含まれる.
                  <spanx style="verb">nonce</spanx> 値には, 推測不可能なように十分なエントロピーを持たせること (MUST).
                  実装の注意事項については <xref target="NonceNotes"/> を参照すること.
                  <!--
                  REQUIRED.
                  String value used to associate a Client session
                  with an ID Token, and to mitigate replay attacks.
                  The value is passed through unmodified from the Authentication Request to the ID Token.
                  Sufficient entropy MUST be present in the
                  <spanx style="verb">nonce</spanx> values used to prevent
                  attackers from guessing values.
                  For implementation notes, see <xref target="NonceNotes"/>.
                  -->
                </t>
              </list>
            </t>

            <figure>
              <preamble>
                以下に Implicit Flow の例を示す.
                以下の例では Client から HTTP 302 リダイレクトレスポンスを受け取った User Agent が Authorization Server にリクエストを送っている.
                (改行は掲載上の都合による)
              </preamble>
              <!--
              <preamble>
                The following is a non-normative example request using the Implicit Flow
                that would be sent by the User Agent to the Authorization Server
                in response to a corresponding HTTP 302 redirect response by the Client
                (with line wraps within values for display purposes only):
              </preamble>
              -->

              <artwork><![CDATA[
  GET /authorize?
    response_type=id_token%20token
    &client_id=s6BhdRkqt3
    &redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb
    &scope=openid%20profile
    &state=af0ifjsldkj
    &nonce=n-0S6_WzA2Mj HTTP/1.1
  Host: server.example.com
]]></artwork>
            </figure>

          </section>

          <section anchor="ImplicitValidation" title="Authentication Request Validation">
            <t>
              Implicit Flow では, Authorization Code Flow と同様の方法 (<xref target="AuthRequestValidation"/> 参照) で Authentication Request を検証する.
            </t>
            <!--
            <t>
              When using the Implicit Flow, the Authentication Request is validated
              in the same manner as for the Authorization Code Flow,
              as defined in <xref target="AuthRequestValidation"/>.
            </t>
            -->
          </section>

          <section anchor="ImplicitAuthenticates" title="Authorization Server Authenticates End-User">
            <t>
              Implicit Flow では, Authorization Code Flow と同様の方法 (<xref target="Authenticates"/> 参照) で End-User Authentication を行う.
            </t>
            <!--
            <t>
              When using the Implicit Flow, End-User Authentication is performed
              in the same manner as for the Authorization Code Flow,
              as defined in <xref target="Authenticates"/>.
            </t>
            -->
          </section>

          <section anchor="ImplicitConsent" title="Authorization Server Obtains End-User Consent/Authorization">
            <t>
              Implicit Flow では, Authorization Code Flow と同様の方法 (<xref target="Consent"/> 参照) で End-User Consent を取得する.
            </t>
            <!--
            <t>
              When using the Implicit Flow, End-User Consent is obtained
              in the same manner as for the Authorization Code Flow,
              as defined in <xref target="Consent"/>.
            </t>
            -->
          </section>


          <section anchor="ImplicitAuthResponse" title="Successful Authentication Response">
            <t>
              Implicit Flow では, このセクションで指定された点を除いては, Authorization Code Flow と同様の手順で Authentication Response を構築する. (<xref target="AuthResponse"/> 参照)
            </t>
            <!--
            <t>
              When using the Implicit Flow, Authentication Responses are made
              in the same manner as for the Authorization Code Flow,
              as defined in <xref target="AuthResponse"/>,
              with the exception of the differences specified in this section.
            </t>
            -->
            <t>
              Implicit Flow では, 異なる Response Mode が指定されない限り, 全てのレスポンスパラメータは <xref target="OAuth.Responses">OAuth 2.0 Multiple Response Type Encoding Practices</xref> の規定により Redirection URI のフラグメント要素に加えられる.
            </t>
            <!--
            <t>
              When using the Implicit Flow,
              all response parameters are added to the fragment component
              of the Redirection URI, as specified in
              <xref target="OAuth.Responses">OAuth 2.0 Multiple Response Type Encoding Practices</xref>,
              unless a different Response Mode was specified.
            </t>
            -->
            <t>
              以下のパラメータは Authorization Endpoint から返される.
            </t>
            <!--
            <t>
              These parameters are returned from the Authorization Endpoint:
            </t>
            -->
            <t>
              <list style="hanging">
                <t hangText="access_token">
                  <vspace/>
                  OAuth2.0 の Access Token.
                  <spanx style="verb">response_type</spanx> の値が <spanx style="verb">id_token</spanx> でない限り, これは返される.
                  <!--
                  OAuth 2.0 Access Token.
                  This is returned
                  unless the <spanx style="verb">response_type</spanx> value used is
                  <spanx style="verb">id_token</spanx>.
                  -->
                </t>

                <t hangText="token_type">
                  <vspace/>
                  OAuth 2.0 の Token Type の値.
                  この値は <spanx style="verb">Bearer</spanx> もしくは Client が Authorization Server と交渉した他の <spanx style="verb">token_type</spanx> の値でなければならない (MUST).
                  このプロファイルを実装している Client は <xref target="RFC6750">OAuth 2.0 Bearer Token Usage</xref> の仕様をサポートしなければならない (MUST).
                  このプロファイルは bearer token の利用のみを述べる.
                  これは <spanx style="verb">access_token</spanx> と同時に返される.
                  <!--
                  OAuth 2.0 Token Type value.
                  The value MUST be <spanx style="verb">Bearer</spanx> or
                  another <spanx style="verb">token_type</spanx> value that the Client
                  has negotiated with the Authorization Server.
                  Clients implementing this profile MUST support the <xref
                  target="RFC6750">OAuth 2.0 Bearer Token Usage</xref> specification.
                  This profile only describes the use of bearer tokens.
                  This is returned in the same cases as
                  <spanx style="verb">access_token</spanx> is.
                  -->
                </t>

                <t hangText="id_token">
                  <vspace/>
                  REQUIRED.
                  ID Token.
                </t>

                <t hangText="state">
                  <vspace/>
                  OAuth 2.0 の state の値.
                  <spanx style="verb">state</spanx> パラメータが Authorization Request にある場合は必須 (REQUIRED).
                  Client は <spanx style="verb">state</spanx> の値が Authorization Request 中の <spanx style="verb">state</spanx> パラメータと等しいことを確認しなければならない (MUST).
                  <!--
                  OAuth 2.0 state value.
                  REQUIRED if the
                  <spanx style="verb">state</spanx> parameter is present in the
                  Authorization Request. Clients MUST verify that the
                  <spanx style="verb">state</spanx> value is equal to the
                  value of <spanx style="verb">state</spanx> parameter in the
                  Authorization Request.
                  -->
                </t>

                <t hangText="expires_in">
                  <vspace/>
                  OPTIONAL.
                  Access Token の有効期限である, レスポンスが生成されてからの秒数.
                  <!--
                  OPTIONAL.
                  Expiration time of the Access Token in seconds
                  since the response was generated.
                  -->
                </t>
              </list>
            </t>

            <t>
              <xref target="RFC6749">OAuth 2.0</xref> の Section 4.2.2 により, Implicit Flow を用いるときに <spanx style="verb">code</spanx> は返されない.
            </t>
            <!--
            <t>
              Per Section 4.2.2 of <xref target="RFC6749">OAuth 2.0</xref>,
              no <spanx style="verb">code</spanx> result is returned
              when using the Implicit Flow.
            </t>
            -->

            <figure>
              <preamble>
                以下に Implicit Flow を用いた成功レスポンスの例を示す. (改行は掲載上の都合による)
              </preamble>
              <!--
              <preamble>The following is a non-normative example
              of a successful response using the Implicit Flow
              (with line wraps for the display purposes only):</preamble>
              -->

              <artwork><![CDATA[
  HTTP/1.1 302 Found
  Location: https://client.example.org/cb#
    access_token=SlAV32hkKG
    &token_type=bearer
    &id_token=eyJ0 ... NiJ9.eyJ1c ... I6IjIifX0.DeWt4Qu ... ZXso
    &expires_in=3600
    &state=af0ifjsldkj
]]></artwork>
            </figure>
          </section>

          <section anchor="ImplicitAuthError" title="Authentication Error Response">

            <t>
              Implicit Flow を用いるとき, Authorization Error Responses はこのセクションで指定される違いを除いて <xref target="AuthError"/> で定義されている Authorization Code Flow と同様に作成される.
            </t>
            <!--
            <t>
              When using the Implicit Flow, Authorization Error Responses are made
              in the same manner as for the Authorization Code Flow,
              as defined in <xref target="AuthError"/>,
              with the exception of the differences specified in this section.
            </t>
            -->
            <t>
              End-User がリクエストを拒絶または End-User の認証に失敗したとき, 異なる Response Mode が指定されないかぎり Authorization Server は Error Authorization Response を <xref target="RFC6749">OAuth 2.0</xref> の 4.2.2.1 と <xref target="OAuth.Responses">OAuth 2.0 Multiple Response Type Encoding Practices</xref> で定義されている Redirection URI のフラグメント要素にて返さなければならない (MUST).
            </t>
            <!--
            <t>
              If the End-User denies the request or the End-User authentication
              fails, the Authorization Server MUST return the error
              Authorization Response in the
              fragment component of the Redirection URI,
              as defined in 4.2.2.1 of
              <xref target="RFC6749">OAuth 2.0</xref> and
              <xref target="OAuth.Responses">OAuth 2.0 Multiple Response Type Encoding Practices</xref>,
              unless a different Response Mode was specified.
            </t>
            -->
          </section>

          <section anchor="ImplicitCallback" title="Redirect URI Fragment Handling">
            <t>
              レスポンスパラメータが Redirection URI のフラグメントの値で返されるため, Client は フラグメントエンコードされた値をパースしてそれを消費する Client の処理ロジックに渡す User Agent を持つことを必要とする.
              URIフラグメントのハンドリングは <xref target="FragmentNotes"/> を参照すること.
            </t>
            <!--
            <t>
              Since response parameters are returned in the Redirection URI fragment value,
              the Client needs to have the User Agent parse the fragment encoded values
              and pass them to on to the Client's processing logic for consumption.
              See <xref target="FragmentNotes"/> for implementation notes
              on URI fragment handling.
            </t>
            -->
          </section>

          <section anchor="ImplicitAuthResponseValidation" title="Authentication Response Validation">
            <t>
              Implicit Flow を用いるとき, Client は 以下のようにレスポンスを確認しなければならない (MUST).
              <!--
              When using the Implicit Flow,
              the Client MUST validate the response as follows:
              -->
              <list style="numbers">
                <t>
                  レスポンスが <xref target="OAuth.Responses"/> の Section 5 に従うことを検証する.
                </t>
                <!--
                <t>
                  Verify that the response conforms to Section 5 of
                  <xref target="OAuth.Responses"/>.
                </t>
                -->
                <t>
                  RFC 6749, 特に Sections 4.2.2 と 10.12の確認規則に従う.
                </t>
                <!--
                <t>
                  Follow the validation rules in RFC 6749,
                  especially those in Sections 4.2.2 and 10.12.
                </t>
                -->
                <t>
                  <xref target="ImplicitIDTValidation"/> の ID Token 確認規則に従う.
                </t>
                <!--
                <t>
                  Follow the ID Token validation rules in <xref target="ImplicitIDTValidation"/>.
                </t>
                -->
                <t>
                  <spanx style="verb">response_type</spanx> の値が <spanx style="verb">id_token</spanx> を利用しない限り, <xref target="ImplicitTokenValidation"/> の Access Token 確認規則に従う.
                </t>
                <!--
                <t>
                  Follow the Access Token validation rules in <xref target="ImplicitTokenValidation"/>,
                  unless the <spanx style="verb">response_type</spanx> value used is
                  <spanx style="verb">id_token</spanx>.
                </t>
                -->
              </list>
            </t>
          </section>

          <section anchor="ImplicitTokenValidation" title="Access Token Validation">
            <t>
              Authorization Endpoint から ID Token とともに発行された Access Token を確認するため, Client は次のことを行うべきである (SHOULD).
            </t>
            <!--
            <t>To validate an Access Token issued from the Authorization Endpoint with an ID Token,
            the Client SHOULD do the following:</t>
            -->

            <t>
              <list style="numbers">
                <t>
                  ID Token の JOSE Header 中の <spanx style="verb">alg</spanx> Header Parameter のために <xref target="JWA">JWA</xref> にて指定されているハッシュアルゴリズムにて <spanx style="verb">access_token</spanx> の ASCII バイト列をハッシュする.
                  例えば <spanx style="verb">alg</spanx> が <spanx style="verb">RS256</spanx> であれば, ハッシュアルゴリズムは SHA-256 となる.
                </t>
                <!--
                <t>Hash the octets of the ASCII representation of
                the <spanx style="verb">access_token</spanx>
                with the hash algorithm specified in <xref target="JWA">JWA</xref> for the
                <spanx style="verb">alg</spanx> Header Parameter
                of the ID Token's JOSE Header.
                For instance, if the <spanx style="verb">alg</spanx> is
                <spanx style="verb">RS256</spanx>,
                the hash algorithm used is SHA-256.
                </t>
                -->

                <t>
                  ハッシュの左半分を取り出し, それを base64url エンコードする.
                </t>
                <!--
                <t>Take the left-most half of the hash and base64url encode it.</t>
                -->
                <t>
                  ID Token の <spanx style="verb">at_hash</spanx> の値が直前のステップで生成された値と等しくなければならない (MUST).
                </t>
                <!--
                <t>
                  The value of <spanx style="verb">at_hash</spanx> in the ID Token MUST
                  match the value produced in the previous step.
                </t>
                -->
              </list>
            </t>
          </section>

          <section anchor="ImplicitIDToken" title="ID Token">

            <t>
              ID Token の内容は <xref target="IDToken"/> で述べられている.
              Implicit Flow を使用する場合,
              以下の ID Token Claims に対する追加要件が適用される:
            </t>
            <!--
            <t>
              The contents of the ID Token are as described in <xref target="IDToken"/>.
              When using the Implicit Flow,
              these additional requirements for the following ID Token Claims apply:
            </t>
            -->
            <t>
              <list style="hanging">

                <t hangText="nonce">
                  <vspace/>
                  このフローでは <spanx style="verb">nonce</spanx> Claim の使用は必須である (REQUIRED).
                  <!--
                  Use of the <spanx style="verb">nonce</spanx> Claim is REQUIRED
                  for this flow.
                  -->
                </t>

                <t hangText="at_hash">
                  <vspace/>
                  Access Token のハッシュ値.
                  この値は, <spanx style="verb">access_token</spanx> の ASCII バイト列のハッシュ値の左半分を base64url エンコードしたものであり, ハッシュアルゴリズムは ID Token の JOSE Header にある <spanx style="verb">alg</spanx> Header Parameter で用いられるハッシュアルゴリズムと同じものを用いる.
                  例えば <spanx style="verb">alg</spanx> が <spanx style="verb">RS256</spanx> であれば, <spanx style="verb">access_token</spanx> の SHA-256 ハッシュ値を計算し, その左半分の128ビットを base64url エンコードする.
                  <spanx style="verb">at_hash</spanx> は大文字小文字を区別する文字列である.
                  <!--
                  Access Token hash value.
                  Its value is the base64url encoding of the left-most half of the
                  hash of the octets of the ASCII representation of the
                  <spanx style="verb">access_token</spanx> value,
                  where the hash algorithm used is the hash algorithm
                  used in the <spanx style="verb">alg</spanx> Header Parameter
                  of the ID Token's JOSE Header.
                  For instance, if the <spanx style="verb">alg</spanx> is
                  <spanx style="verb">RS256</spanx>, hash the
                  <spanx style="verb">access_token</spanx> value
                  with SHA-256, then take the left-most 128 bits and base64url encode them.
                  The <spanx style="verb">at_hash</spanx> value is a case sensitive string.
                  -->
                </t>
                <t>
                  ID Token が <spanx style="verb">access_token</spanx> とともに Authorization Endpoint から発行された場合(<spanx style="verb">response_type</spanx> 値が <spanx style="verb">id_token&nbsp;token</spanx> である場合に該当する), この Claim は必須である (REQUIRED).
                  Access Token が発行されない場合(<spanx style="verb">response_type</spanx> 値が <spanx style="verb">id_token</spanx> である場合に該当する), この Claim は使用されなくてもよい (MAY NOT).
                  <!--
                  If the ID Token is issued from the Authorization Endpoint with an
                  <spanx style="verb">access_token</spanx> value,
                  which is the case for the <spanx style="verb">response_type</spanx> value
                  <spanx style="verb">id_token&nbsp;token</spanx>,
                  this is REQUIRED;
                  it MAY NOT be used when no Access Token is issued,
                  which is the case for the <spanx style="verb">response_type</spanx> value
                  <spanx style="verb">id_token</spanx>.
                  -->
                </t>

              </list>
            </t>
          </section>

          <section anchor="ImplicitIDTValidation" title="ID Token Validation">
            <t>
              Implicit Flow では, このセクションで指定された違いを除いて, Authorization Code Flow と同様の手順で ID Token の内容を検証されなければならない (MUST). (<xref target="IDTokenValidation"/> 参照)
            </t>
            <!--
            <t>
              When using the Implicit Flow, the contents of the ID Token MUST be validated
              in the same manner as for the Authorization Code Flow,
              as defined in <xref target="IDTokenValidation"/>,
              with the exception of the differences specified in this section.
            </t>
            -->
            <t>
              <list style="numbers">
                <t>
                  Clientは ID Token の署名を, JOSE Header 中の <spanx style="verb">alg</spanx> Header Parameter で指定されたアルゴリズムを使い, <xref target="JWS">JWS</xref> に従って検証しなければならない (MUST).
                </t>
                <!--
                <t>
                  The Client MUST validate the signature of the ID Token according to
                  <xref target="JWS">JWS</xref> using the algorithm specified in the
                  <spanx style="verb">alg</spanx> Header Parameter of the JOSE Header.
                </t>
                -->

                <t>
                  <spanx style="verb">nonce</spanx>
                  Claim の値が Authentication Request にて送られたものと一致することを確認しなければならない (MUST).
                  Clientは <spanx style="verb">nonce</spanx> の値をリプレイアタック対策のためにチェックすべきである (SHOULD).
                  リプレイアタック検知方法の詳細はClientによって異なる.
                </t>
                <!--
                <t>
                  The value of the <spanx style="verb">nonce</spanx>
                  Claim MUST be checked to verify that
                  it is the same value as the one that was sent in the Authentication Request.
                  The Client SHOULD check the <spanx style="verb">nonce</spanx> value
                  for replay attacks.
                  The precise method for detecting replay attacks is Client specific.
                </t>
                -->

              </list>
            </t>
          </section>

        </section>
      </section>

      <section anchor="HybridFlowAuth" title="Authentication using the Hybrid Flow">

        <t>
          このセクションは Hybrid Flow を用いて認証を行う方法について述べる.
          Hybrid Flow を使用する場合, いくつかのトークンは Authorization Endpoint から返され, その他のトークンは Token Endpoint から返される.
          Hybrid Flow でのトークン返却の仕組みは <xref target="OAuth.Responses">OAuth 2.0 Multiple Response Type Encoding Practices</xref> で指定されている.
        </t>
        <!--
        <t>
          This section describes how to perform authentication using the Hybrid Flow.
          When using the Hybrid Flow,
          some tokens are returned from the Authorization Endpoint
          and others are returned from the Token Endpoint.
          The mechanisms for returning tokens in the Hybrid Flow are specified in
          <xref target="OAuth.Responses">OAuth 2.0 Multiple Response Type Encoding Practices</xref>.
        </t>
        -->

        <section anchor="HybridFlowSteps" title="Hybrid Flow Steps">

          <t>
            Hybrid Flow は以下の手順に従う:
          </t>
          <!--
          <t>The Hybrid Flow follows the following steps:</t>
          -->

          <t>
            <list style="numbers">
              <t>
                Clientは必要なリクエストパラメータを含んだ Authentication Request を構築する.
              </t>
              <!--
              <t>Client prepares an Authentication Request containing the desired
              request parameters.</t>
              -->

              <t>
                Clientは Authorization Server にリクエストを送信する.
              </t>
              <!--
              <t>Client sends the request to the Authorization Server.</t>
              -->

              <t>
                Authorization Server は End-User を認証する.
              </t>
              <!--
              <t>Authorization Server Authenticates the End-User.</t>
              -->

              <t>
                Authorization Server は End-User の同意/認可を取得する.
              </t>
              <!--
              <t>Authorization Server obtains End-User Consent/Authorization.</t>
              -->

              <t>
                Authorization Server は End-User を Authorization Code と, レスポンスタイプに応じた1つ以上の追加パラメータとともにClientに戻す.
              </t>
              <!--
              <t>
                Authorization Server sends the End-User back to the Client with
                an Authorization Code and, depending on the Response Type,
                one or more additional parameters.
              </t>
              -->

              <t>
                Clientは Token Endpoint で Authorization Code を使用してレスポンスを要求する.
              </t>
              <!--
              <t>Client requests a response using the Authorization Code at the
              Token Endpoint.</t>
              -->

              <t>
                Clientは ID Token と Access Token をレスポンスボディに含んだレスポンスを受け取る.
              </t>
              <!--
              <t>Client receives a response that contains an ID Token
              and Access Token in the response body.</t>
              -->

              <t>
                Clientは ID Token をトークンを検証し, End-User の Subject Identifier を取得する.
              </t>
              <!--
              <t>Client validates the ID Token and retrieves the End-User's
              Subject Identifier.</t>
              -->

            </list>
          </t>
        </section>

        <section anchor="HybridAuthorizationEndpoint" title="Authorization Endpoint">

          <t>
            Hybrid Flow では, このセクションで指定された違いを除いて, Authorization Code Flow と同様の方式で Authorization Endpoint を利用する.
            (<xref target="AuthorizationEndpoint"/> 参照)
          </t>
          <!-- <t>
            When using the Hybrid Flow, the Authorization Endpoint is used
            in the same manner as for the Authorization Code Flow,
            as defined in <xref target="AuthorizationEndpoint"/>,
            with the exception of the differences specified in this section.
          </t> -->

          <section anchor="HybridAuthRequest" title="Authentication Request">

            <t>
              Authentication Request 構築方法は, 以下の Authentication Request パラメータ以外は <xref target="AuthRequest"/> に従う.
            </t>
            <!-- <t>
              Authentication Requests are made
              as defined in <xref target="AuthRequest"/>,
              except that these Authentication Request parameters
              are used as follows:
            </t> -->
            <t>
              <list style="hanging">
                <t hangText="response_type">
                  <vspace/>
                  REQUIRED.
                  使用する認証処理フローを決定する OAuth 2.0 Response Type 値.
                  この値により, どのエンドポイントからどのようなパラメータが返されるのかなどが決定される.
                  Hybrid Flow を使用する場合, この値は<spanx style="verb">code&nbsp;id_token</spanx>,
                  <spanx style="verb">code&nbsp;token</spanx>, <spanx style="verb">code&nbsp;id_token&nbsp;token</spanx> のいずれかになる.
                  これらの値の意味するところは <xref target="OAuth.Responses">OAuth 2.0 Multiple Response Type Encoding Practices</xref> を参照すること.
                  <!--
                  REQUIRED.
                  OAuth 2.0 Response Type value that determines
                  the authorization processing flow to be used,
                  including what parameters are returned from the endpoints used.
                  When using the Hybrid Flow, this value is
                  <spanx style="verb">code&nbsp;id_token</spanx>,
                  <spanx style="verb">code&nbsp;token</spanx>, or
                  <spanx style="verb">code&nbsp;id_token&nbsp;token</spanx>.
                  The meanings of these values are defined in
                  <xref target="OAuth.Responses">OAuth 2.0 Multiple Response Type Encoding Practices</xref>.
                  -->
                </t>

              </list>
            </t>


            <figure>
              <preamble>
                以下に Hybrid Flow の例を示す.
                ここでは Client からの HTTP 302 リダイレクトレスポンスを受け取った User Agent が Authorization Server にリクエストを送っている.
                (改行は掲載上の都合による)
              </preamble>
              <!--
              <preamble>
                The following is a non-normative example request using the Hybrid Flow
                that would be sent by the User Agent to the Authorization Server
                in response to a corresponding HTTP 302 redirect response by the Client
                (with line wraps within values for display purposes only):
              </preamble>
              -->

              <artwork><![CDATA[
  GET /authorize?
    response_type=code%20id_token
    &client_id=s6BhdRkqt3
    &redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb
    &scope=openid%20profile%20email
    &nonce=n-0S6_WzA2Mj
    &state=af0ifjsldkj HTTP/1.1
  Host: server.example.com
]]></artwork>
            </figure>

          </section>

          <section anchor="HybridValidation" title="Authentication Request Validation">

            <t>
              Hybrid Flow では, Authorization Code Flow と同様の方法 (<xref target="AuthRequestValidation"/> 参照) で Authentication Request を検証する.
            </t>
            <!-- <t>
              When using the Hybrid Flow, the Authentication Request is validated
              in the same manner as for the Authorization Code Flow,
              as defined in <xref target="AuthRequestValidation"/>.
            </t> -->
          </section>

          <section anchor="HybridAuthenticates" title="Authorization Server Authenticates End-User">

            <t>
              Hybrid Flow では, Authorization Code Flow と同様の方法 (<xref target="Authenticates"/> 参照) で End-User Authentication を行う.
            </t>
            <!-- <t>
              When using the Hybrid Flow, End-User Authentication is performed
              in the same manner as for the Authorization Code Flow,
              as defined in <xref target="Authenticates"/>.
            </t> -->
          </section>

          <section anchor="HybridConsent" title="Authorization Server Obtains End-User Consent/Authorization">

            <t>
              Hybrid Flow では, Authorization Code Flow と同様の方法 (<xref target="Consent"/> 参照) で End-User Consent を取得する.
            </t>
            <!--
            <t>
              When using the Hybrid Flow, End-User Consent is obtained
              in the same manner as for the Authorization Code Flow,
              as defined in <xref target="Consent"/>.
            </t>
            -->
          </section>

          <section anchor="HybridAuthResponse" title="Successful Authentication Response">

            <t>
              Hybrid Flow では, このセクションで指定される違いを除いて, Implicit Flow と同様の方法で Authorization Responses を構築する.
              (<xref target="ImplicitAuthResponse"/> 参照)
            </t>
            <!--
            <t>
              When using the Hybrid Flow, Authentication Responses are made
              in the same manner as for the Implicit Flow,
              as defined in <xref target="ImplicitAuthResponse"/>,
              with the exception of the differences specified in this section.
            </t>
            -->

            <t>
              これらのAuthorization Endpoint の結果は, 以下のように使用される.
            </t>
            <!-- <t>
              These Authorization Endpoint results are used in the following manner:
            </t> -->
            <t>
              <list style="hanging">
                <t hangText="access_token">
                  <vspace/>
                  OAuth2.0のAccess Token.
                  <spanx style="verb">response_type</spanx> の値が,
                  <spanx style="verb">code&nbsp;token</spanx> か,
                  <spanx style="verb">code&nbsp;id_token&nbsp;token</spanx> の場合に返される.
                  (<spanx style="verb">token_type</spanx> も同様に返される)
                  <!--
                  OAuth 2.0 Access Token.
                  This is returned
                  when the <spanx style="verb">response_type</spanx> value used is
                  <spanx style="verb">code&nbsp;token</spanx>,
                  or <spanx style="verb">code&nbsp;id_token&nbsp;token</spanx>.
                  (A <spanx style="verb">token_type</spanx> value is also returned in the same cases.)
                  -->
                </t>

                <t hangText="id_token">
                  <vspace/>
                  ID Token.
                  <spanx style="verb">response_type</spanx> の値が,
                  <spanx style="verb">code&nbsp;id_token</spanx> か
                  <spanx style="verb">code&nbsp;id_token&nbsp;token</spanx> の場合に返される.
                  <!--
                  ID Token.
                  This is returned
                  when the <spanx style="verb">response_type</spanx> value used is
                  <spanx style="verb">code&nbsp;id_token</spanx> or
                  <spanx style="verb">code&nbsp;id_token&nbsp;token</spanx>.
                  -->
                </t>

                <t hangText="code">
                  <vspace/>
                  Authorization Code.
                  Hybrid Flow では常に返される.
                  <!--
                  Authorization Code.
                  This is always returned when using the Hybrid Flow.
                  -->
                </t>

              </list>
            </t>

            <figure>
              <preamble>
                以下に Hybrid Flow のサクセスレスポンス例を示す.
                (改行は掲載上の都合による)
              </preamble>
              <!--
              <preamble>The following is a non-normative example
              of a successful response using the Hybrid Flow
              (with line wraps for the display purposes only):</preamble>
              -->

              <artwork><![CDATA[
  HTTP/1.1 302 Found
  Location: https://client.example.org/cb#
    code=SplxlOBeZQQYbYS6WxSbIA
    &id_token=eyJ0 ... NiJ9.eyJ1c ... I6IjIifX0.DeWt4Qu ... ZXso
    &state=af0ifjsldkj
]]></artwork>
            </figure>

          </section>

          <section anchor="HybridAuthError" title="Authentication Error Response">

            <t>
              Hybrid Flow では, このセクションで指定される違いを除いて, Authorization Code Flow と同様の方法で Authorization Error Responses を構築する.
              (<xref target="AuthError"/> 参照)
            </t>
            <!-- <t>
              When using the Hybrid Flow, Authorization Error Responses are made
              in the same manner as for the Authorization Code Flow,
              as defined in <xref target="AuthError"/>,
              with the exception of the differences specified in this section.
            </t> -->
            <t>
              もしエンドユーザがリクエストを拒否または認証に失敗した場合,
              認可サーバは, 異なるResponse Modeが定義されていない限り,
              <xref target="RFC6749">OAuth 2.0</xref> の Section 4.2.2.1 と<xref target="OAuth.Responses">OAuth 2.0 Multiple Response Type Encoding Practices</xref> に定義されるように,
              Redirect URI のフラグメントコンポーネントに含めて, エラー Authorization Response を返却しなければならない (MUST).
            </t>
            <!-- <t>
              If the End-User denies the request or the End-User authentication
              fails, the Authorization Server MUST return the error
              Authorization Response in the
              fragment component of the Redirection URI,
              as defined in 4.2.2.1 of
              <xref target="RFC6749">OAuth 2.0</xref> and
              <xref target="OAuth.Responses">OAuth 2.0 Multiple Response Type Encoding Practices</xref>,
              unless a different Response Mode was specified.
            </t> -->
          </section>

          <section anchor="HybridCallback" title="Redirect URI Fragment Handling">

            <t>
              Hybrid Flow では Implicit Flow 同様 Redirect URI のフラグメントを利用するため, <xref target="ImplicitCallback"/> と同様の要件が求められる.
              実装時の注意点は <xref target="FragmentNotes"/> を参照のこと.
            </t>
            <!--
            <t>
              When using the Hybrid Flow, the same requirements for
              Redirection URI fragment parameter handling apply as do for
              the Implicit Flow, as defined in <xref target="ImplicitCallback"/>.
              Also see <xref target="FragmentNotes"/> for implementation notes
              on URI fragment handling.
            </t>
            -->
          </section>

          <section anchor="HybridAuthResponseValidation" title="Authentication Response Validation">

            <t>
              Hybrid Flow を使用する場合, Client は以下の通りレスポンスを検証しなければならない (MUST).
              <!--
              When using the Hybrid Flow,
              the Client MUST validate the response as follows:
              -->
              <list style="numbers">
                <t>
                  レスポンスが <xref target="OAuth.Responses"/> の Section 5 に準拠していることを検証する.
                </t>
                <!--
                <t>
                  Verify that the response conforms to Section 5 of
                  <xref target="OAuth.Responses"/>.
                </t>
                -->
                <t>
                  検証ルールは, RFC 6949 の特に Section 4.2.2 と 10.12 に従うこと.
                </t>
                <!--
                <t>
                  Follow the validation rules in RFC 6749,
                  especially those in Sections 4.2.2 and 10.12.
                </t>
                -->
                <t>
                  使用される <spanx style="verb">response_type</spanx> の値が, <spanx style="verb">code&nbsp;id_token</spanx> か <spanx style="verb">code&nbsp;id_token&nbsp;token</spanx> の場合, ID Token の検証ルールは, <xref target="HybridIDTValidation"/> に従うこと.
                </t>
                <!--
                <t>
                  Follow the ID Token validation rules in <xref target="HybridIDTValidation"/>
                  when the <spanx style="verb">response_type</spanx> value used is
                  <spanx style="verb">code&nbsp;id_token</spanx> or
                  <spanx style="verb">code&nbsp;id_token&nbsp;token</spanx>.
                </t>
                -->
                <t>
                  使用される <spanx style="verb">response_type</spanx> の値が, <spanx style="verb">code&nbsp;token</spanx> か <spanx style="verb">code&nbsp;id_token&nbsp;token</spanx> の場合, Access Token の検証ルールは, <xref target="HybridTokenValidation"/> に従うこと.
                </t>
                <!--
                <t>
                  Follow the Access Token validation rules in <xref target="HybridTokenValidation"/>
                  when the <spanx style="verb">response_type</spanx> value used is
                  <spanx style="verb">code&nbsp;token</spanx> or
                  <spanx style="verb">code&nbsp;id_token&nbsp;token</spanx>.
                </t>
                -->
                <t>
                  使用される <spanx style="verb">response_type</spanx> の値が, <spanx style="verb">code&nbsp;id_token</spanx> または <spanx style="verb">code&nbsp;id_token&nbsp;token</spanx> の場合, Authorization Code の検証ルールは, <xref target="CodeValidation"/> に従うこと.
                </t>
                <!--
                <t>
                  Follow the Authorization Code validation rules in <xref target="CodeValidation"/>
                  when the <spanx style="verb">response_type</spanx> value used is
                  <spanx style="verb">code&nbsp;id_token</spanx> or
                  < !-- <spanx style="verb">code&nbsp;token</spanx>
                       is not included because Authorization Code validation requires an ID Token -- >
                  <spanx style="verb">code&nbsp;id_token&nbsp;token</spanx>.
                </t>
                -->
              </list>
            </t>
          </section>

          <section anchor="HybridTokenValidation" title="Access Token Validation">

            <t>
              Hybrid Flow では, Authorization Endpoint から返される Access Token に対して Implicit Flow と同様の検証処理を行うこと.
              (<xref target="ImplicitTokenValidation"/> 参照)
            </t>
            <!--
            <t>
              When using the Hybrid Flow, Access Tokens
              returned from the Authorization Endpoint are validated
              in the same manner as for the Implicit Flow,
              as defined in <xref target="ImplicitTokenValidation"/>.
            </t>
            -->
          </section>

          <section anchor="CodeValidation" title="Authorization Code Validation">

            <t>
              Authorization Endpoint で ID Token と一緒に発行された Authorization Code を検証するために, Client は以下を行うべきである (SHOULD).
            </t>
            <!--
            <t>To validate an Authorization Code issued from the Authorization Endpoint with an ID Token,
            the Client SHOULD do the following:</t>
            -->

            <t>
              <list style="numbers">
                <t>
                  <spanx style="verb">code</spanx> の ASCII オクテットのハッシュ値を計算する.
                  ハッシュアルゴリズムは, ID Token の JOSE Header に含まれる <spanx style="verb">alg</spanx> Header Parameter で利用されるものを利用する.
                  各 <spanx style="verb">alg</spanx> Header Parameter に対応するハッシュアルゴリズムは <xref target="JWA">JWA</xref> で定義されている.
                  たとえば, <spanx style="verb">alg</spanx> が <spanx style="verb">RS256</spanx> であれば, 使用されるハッシュアルゴリズムは SHA-256 である.
                </t>
                <!--
                <t>Hash the octets of the ASCII representation of
                the <spanx style="verb">code</spanx>
                with the hash algorithm specified in <xref target="JWA">JWA</xref> for the
                <spanx style="verb">alg</spanx> Header Parameter
                of the ID Token's JOSE Header.
                For instance, if the <spanx style="verb">alg</spanx> is
                <spanx style="verb">RS256</spanx>,
                the hash algorithm used is SHA-256.
                </t>
                -->

                <t>
                  ハッシュの左半分を取得し, base64url エンコードする.
                </t>
                <!--
                <t>Take the left-most half of the hash and base64url encode it.</t>
                -->

                <t>
                  ID Token に <spanx style="verb">c_hash</spanx> が含まれる場合, その値は前述のプロセスにより計算された値と ID Token 中の <spanx style="verb">c_hash</spanx> が一致しなければならない (MUST).
                </t>
                <!--
                <t>The value of <spanx style="verb">c_hash</spanx> in the ID Token MUST
                match the value produced in the previous step if <spanx style="verb">c_hash</spanx>
                is present in the ID Token.</t>
                -->
              </list>
            </t>
          </section>

          <section anchor="HybridIDToken" title="ID Token">

            <t>
              ID Token に含まれるコンテンツについては, <xref target="IDToken"/> に記載されている.
              Hybrid Flow を用いる際には, Authorization Endpoint から返される ID Token に対して, 以下に挙げる ID Token Claim 各々に追加の要件が適用される.
            </t>
            <!--
            <t>
              The contents of the ID Token are as described in <xref target="IDToken"/>.
              When using the Hybrid Flow,
              these additional requirements for the following ID Token Claims apply
              to an ID Token returned from the Authorization Endpoint:
            </t>
            -->
            <t>
              <list style="hanging">

                <t hangText="nonce">
                  このフローでは <spanx style="verb">nonce</spanx> Claim の使用は必須である (REQUIRED).
                </t>
                <!--
                <t hangText="nonce">
                  <vspace/>
                  Use of the <spanx style="verb">nonce</spanx> Claim is REQUIRED
                  for this flow.
                </t>
                -->

                <t hangText="at_hash">
                  Access Token のハッシュ値.
                  この値は, <spanx style="verb">access_token</spanx> の ASCII オクテット列のハッシュ値の左半分を base64url エンコードしたものであり, ハッシュアルゴリズムは ID Token の JOSE Header にある <spanx style="verb">alg</spanx> Header Parameter で用いられるハッシュアルゴリズムと同じものを用いる.
                  例えば <spanx style="verb">alg</spanx> が <spanx style="verb">RS256</spanx> であれば, <spanx style="verb">access_token</spanx> の SHA-256 ハッシュ値を計算し, その左半分の128ビットを base64url エンコードする.
                  <spanx style="verb">at_hash</spanx> は大文字小文字を区別する文字列である.
                </t>
                <!--
                <t hangText="at_hash">
                  <vspace/>
                  Access Token hash value.
                  Its value is the base64url encoding of the left-most half of the
                  hash of the octets of the ASCII representation of the
                  <spanx style="verb">access_token</spanx> value,
                  where the hash algorithm used is the hash algorithm
                  used in the <spanx style="verb">alg</spanx> Header Parameter
                  of the ID Token's JOSE Header.
                  For instance, if the <spanx style="verb">alg</spanx> is
                  <spanx style="verb">RS256</spanx>, hash the
                  <spanx style="verb">access_token</spanx> value
                  with SHA-256, then take the left-most 128 bits and base64url encode them.
                  The <spanx style="verb">at_hash</spanx> value is a case sensitive string.
                </t>
                -->
                <t>
                  <spanx style="verb">response_type</spanx> の値が <spanx style="verb">code&nbsp;id_token&nbsp;token</spanx> の時のように, Authorization Endpoint から ID Token が <spanx style="verb">access_token</spanx> と共に発行される場合は必須 (REQUIRED).
                  それ以外の場合, 任意 (OPTIONAL).
                </t>
                <!--
                <t>
                  If the ID Token is issued from the Authorization Endpoint with an
                  <spanx style="verb">access_token</spanx> value,
                  which is the case for the <spanx style="verb">response_type</spanx> value
                  <spanx style="verb">code&nbsp;id_token&nbsp;token</spanx>,
                  this is REQUIRED; otherwise, its inclusion is OPTIONAL.
                </t>
                -->

                <t hangText="c_hash">
                  Code のハッシュ値.
                  この値は, <spanx style="verb">code</spanx> の ASCII オクテット列のハッシュ値の左半分を base64url エンコードしたものであり, ハッシュアルゴリズムは ID Token の JOSE Header にある <spanx style="verb">alg</spanx> Header Parameter で用いられるハッシュアルゴリズムと同じものを用いる.
                  例えば <spanx style="verb">alg</spanx> が <spanx style="verb">RS256</spanx> であれば, <spanx style="verb">code</spanx> の SHA-256 ハッシュ値を計算し, その左半分の128ビットを base64url エンコードする.
                  <spanx style="verb">c_hash</spanx> は大文字小文字を区別する文字列である.
                </t>
                <!--
                <t hangText="c_hash">
                  <vspace/>
                  Code hash value.
                  Its value is the base64url encoding of the left-most half of the
                  hash of the octets of the ASCII representation of the
                  <spanx style="verb">code</spanx> value,
                  where the hash algorithm used is the hash algorithm
                  used in the <spanx style="verb">alg</spanx> Header Parameter
                  of the ID Token's JOSE Header.
                  For instance, if the <spanx style="verb">alg</spanx> is
                  <spanx style="verb">HS512</spanx>, hash the
                  <spanx style="verb">code</spanx> value
                  with SHA-512, then take the left-most 256 bits and base64url encode them.
                  The <spanx style="verb">c_hash</spanx> value is a case sensitive string.
                </t>
                -->
                <t>
                  <spanx style="verb">response_type</spanx> の値が <spanx style="verb">code&nbsp;id_token</spanx> や <spanx style="verb">code&nbsp;id_token&nbsp;token</spanx> の時のように, Authorization Endpoint から ID Token が <spanx style="verb">code</spanx> と共に発行される場合は必須 (REQUIRED).
                  それ以外の場合, 任意 (OPTIONAL).
                </t>
                <!--
                <t>
                  If the ID Token is issued from the Authorization Endpoint with a
                  <spanx style="verb">code</spanx>,
                  which is the case for the <spanx style="verb">response_type</spanx> values
                  <spanx style="verb">code&nbsp;id_token</spanx> and
                  <spanx style="verb">code&nbsp;id_token&nbsp;token</spanx>,
                  this is REQUIRED; otherwise, its inclusion is OPTIONAL.
                </t>
                -->

              </list>
            </t>
          </section>

          <section anchor="HybridIDTValidation" title="ID Token Validation">

            <t>
              Hybrid Flow では, Authorization Endpoint から返される ID Token は Implicit Flow と同様の方法 (<xref target="ImplicitIDTValidation"/> 参照) で検証すること (MUST).
            </t>
            <!--
            <t>
              When using the Hybrid Flow, the contents of an ID Token
              returned from the Authorization Endpoint MUST be validated
              in the same manner as for the Implicit Flow,
              as defined in <xref target="ImplicitIDTValidation"/>.
            </t>
            -->
          </section>

        </section>

        <section anchor="HybridTokenEndpoint" title="Token Endpoint">

          <t>
            Hybrid Flow では, 本章で述べる相違点以外は, Authorization Code Flow と同様の方法 (<xref target="TokenEndpoint"/> 参照) で Token Endpoint を利用する.
          </t>
          <!--
          <t>
            When using the Hybrid Flow, the Token Endpoint is used
            in the same manner as for the Authorization Code Flow,
            as defined in <xref target="TokenEndpoint"/>,
            with the exception of the differences specified in this section.
          </t>
          -->

          <section anchor="HybridTokenRequest" title="Token Request">

            <t>
              Hybrid Flow では, Authorization Code Flow と同様の方法 (<xref target="TokenRequest"/> 参照) で Token Request を構築する.
            </t>
            <!--
            <t>
              When using the Hybrid Flow, Token Requests are made
              in the same manner as for the Authorization Code Flow,
              as defined in <xref target="TokenRequest"/>.
            </t>
            -->
          </section>

          <section anchor="HybridTokenRequestValidation" title="Token Request Validation">

            <t>
              Hybrid Flow では, Authorization Code Flow と同様の方法 (<xref target="TokenRequestValidation"/> 参照) で Token Request を検証する.
            </t>
            <!--
            <t>
              When using the Hybrid Flow, Token Requests are validated
              in the same manner as for the Authorization Code Flow,
              as defined in <xref target="TokenRequestValidation"/>.
            </t>
            -->
          </section>

          <section anchor="HybridTokenResponse" title="Successful Token Response">

            <t>
              Hybrid Flow では, Authorization Code Flow と同様の方法 (<xref target="TokenResponse"/> 参照) で Token Response を構築する.
            </t>
            <!--
            <t>
              When using the Hybrid Flow, Token Responses are made
              in the same manner as for the Authorization Code Flow,
              as defined in <xref target="TokenResponse"/>.
            </t>
            -->
          </section>

          <section anchor="HybridTokenErrorResponse" title="Token Error Response">

            <t>
              Hybrid Flow では, Authorization Code Flow と同様の方法 (<xref target="TokenErrorResponse"/> 参照) で Token Error Response を構築する.
            </t>
            <!--
            <t>
              When using the Hybrid Flow, Token Error Responses are made
              in the same manner as for the Authorization Code Flow,
              as defined in <xref target="TokenErrorResponse"/>.
            </t>
            -->
          </section>

          <section anchor="HybridTokenResponseValidation" title="Token Response Validation">

            <t>
              Hybrid Flow では, Authorization Code Flow と同様の方法 (<xref target="TokenResponseValidation"/> 参照) で Token Response を検証する.
            </t>
            <!--
            <t>
              When using the Hybrid Flow, Token Responses are validated
              in the same manner as for the Authorization Code Flow,
              as defined in <xref target="TokenResponseValidation"/>.
            </t>
            -->
          </section>

          <section anchor="HybridIDToken2" title="ID Token">

          	<t>
              Hybrid Flow を使用する場合, このセクションで指定された違いを除いて, Token Endpoint から返された ID Token の内容は <xref target="HybridIDToken"/> で述べた Authorization Endpoint から返される ID Token と同一である.
            </t>
            <!--
            <t>
              When using the Hybrid Flow, the contents of an ID Token
              returned from the Token Endpoint are
              the same as for an ID Token returned from the Authorization Endpoint,
              as defined in <xref target="HybridIDToken"/>,
              with the exception of the differences specified in this section.
            </t>
            -->
            <t>
              ID Token が Authorization Endpoint と Token Endpoint の両方から返される場合 (<spanx style="verb">response_type</spanx> 値が <spanx style="verb">code&nbsp;id_token</spanx> もしくは <spanx style="verb">code&nbsp;id_token&nbsp;token</spanx> である場合), <spanx style="verb">iss</spanx> Claim と <spanx style="verb">sub</spanx> Claim は両方の ID Token で同一でなければならない (MUST).
              Authentication イベントに関する Claim については, 片方にその Claim を含めるのであれば, もう片方にも同じ Claim を含めるべきである (SHOULD).
              End-User に関する Claim については, それらが両方に存在するのであれば, その値は同値であるべきである (SHOULD).
              なお, プライバシー上の理由などにより, OP は Authorization Endpoint から返す End-User の Claim を, Token Endpoint から返すそれより少なくしてもよい (MAY).
              たとえ Authorization Endpoint から返される ID Token に <spanx style="verb">at_hash</spanx> および <spanx style="verb">c_hash</spanx> Claim が含まれていたとしても, Token Endpoint から返される ID Token ではそれらの Claim は省略可能である (MAY).
              Token Endpoint から返される ID Token と Access Token は, 既に Token Endpoint における TLS 暗号化により暗号論的に紐づけられている.
            </t>
            <!--
            <t>
              If an ID Token is returned from both the Authorization Endpoint
              and from the Token Endpoint,
              which is the case for the <spanx style="verb">response_type</spanx> values
              <spanx style="verb">code&nbsp;id_token</spanx> and
              <spanx style="verb">code&nbsp;id_token&nbsp;token</spanx>,
              the <spanx style="verb">iss</spanx> and <spanx style="verb">sub</spanx>
              Claim Values MUST be identical in both ID Tokens.
              All Claims about the Authentication event present in either
              SHOULD be present in both.
              If either ID Token contains Claims about the End-User,
              any that are present in both SHOULD have the same values in both.
              Note that the OP MAY choose to return fewer Claims about the End-User
              from the Authorization Endpoint, for instance, for privacy reasons.
              The <spanx style="verb">at_hash</spanx>
              and <spanx style="verb">c_hash</spanx> Claims
              MAY be omitted from the ID Token returned from the Token Endpoint
              even when these Claims are
              present in the ID Token returned from the Authorization Endpoint,
              because the ID Token and Access Token values returned from
              the Token Endpoint are already cryptographically bound together
              by the TLS encryption performed by the Token Endpoint.
            </t>
            -->
          </section>

          <section anchor="HybridIDTValidation2" title="ID Token Validation">

          	<t>
              Hybrid Flow を使用する場合, Token Endpoint で返される ID Token の内容は,  <xref target="IDTokenValidation"/> に従い Authorization Code Flow と同じ方法で検証すること (MUST).
            </t>
            <!--
            <t>
              When using the Hybrid Flow, the contents of an ID Token
              returned from the Token Endpoint MUST be validated
              in the same manner as for the Authorization Code Flow,
              as defined in <xref target="IDTokenValidation"/>.
            </t>
            -->
          </section>

          <section anchor="HybridAccessToken2" title="Access Token">

          	<t>
              Access Token が Authorization Endpoint と Token Endpoint の両方から返される場合 (<spanx style="verb">response_type</spanx> 値が <spanx style="verb">code&nbsp;token</spanx> もしくは <spanx style="verb">code&nbsp;id_token&nbsp;token</spanx> である場合), それぞれの値は同一としてもよく (MAY), 異なる値としてもよい (MAY).
              2つのエンドポイントでの異なるセキュリティ特性によって異なる Access Token が返されるかもしれず, 有効期限と承認されたリソースへのアクセス権も異なる可能性があることに注意.
            </t>
            <!--
            <t>
              If an Access Token is returned from both the Authorization Endpoint
              and from the Token Endpoint,
              which is the case for the <spanx style="verb">response_type</spanx> values
              <spanx style="verb">code&nbsp;token</spanx> and
              <spanx style="verb">code&nbsp;id_token&nbsp;token</spanx>,
              their values MAY be the same
              or they MAY be different.
              Note that different Access Tokens might be returned
              be due to the different security characteristics
              of the two endpoints and the lifetimes and
              the access to resources granted by them might also be different.
            </t>
            -->
          </section>

          <section anchor="HybridTokenValidation2" title="Access Token Validation">

          	<t>
              Hybrid Flow を使用する場合, Token Endpoint で返される Access Token は, <xref target="CodeFlowTokenValidation"/> に従い Authorization Code Flow と同じ方法で検証すること.
            </t>
            <!--
            <t>
              When using the Hybrid Flow, the Access Token
              returned from the Token Endpoint
              is validated
              in the same manner as for the Authorization Code Flow,
              as defined in <xref target="CodeFlowTokenValidation"/>.
            </t>
            -->
          </section>

        </section>
      </section>

    </section>

    <section anchor="ThirdPartyInitiatedLogin" title="Initiating Login from a Third Party">
      <t>
        場合によっては, ログインフローは Relying Party ではなく OpenID Provider やその他の Party によって開始されることもある.
        その場合, ログインフローを開始する主体は, ユーザーを RP のログイン開始エンドポイントにリダイレクトさせ, RP に特定の OP に Authentication Request を送るよう要求する.
        このログイン開始エンドポイントは RP のデフォルトのランディングページではなく deep link でもよい.
        <xref target="OpenID.Registration">OpenID Connect Dynamic Client Registration 1.0</xref> をサポートする RP は <spanx style="verb">initiate_login_uri</spanx> Registration パラメータを使ってこのエンドポイントを登録することができる.
      </t>
      <!--
      <t>
        In some cases, the login flow is initiated by an OpenID Provider
        or another party, rather than the Relying Party.
        In this case, the initiator redirects to the RP at its login initiation endpoint,
        which requests that the RP send an Authentication Request to a specified OP.
        This login initiation endpoint can be a deep link at the RP,
        rather than a default landing page.
        RPs supporting
        <xref target="OpenID.Registration">OpenID Connect Dynamic Client Registration 1.0</xref>
        register this endpoint value using the
        <spanx style="verb">initiate_login_uri</spanx> Registration parameter.
      </t>
      -->
      <t>
        ログインリクエストを開始する Party は, 以下のパラメーターを付与してユーザーを RP のログイン開始エンドポイントにリダイレクトさせることでフローを開始する:
      </t>
      <!--
      <t>
        The party initiating the login request does so by redirecting
        to the login initiation endpoint at the RP, passing the following parameters:
      </t>
      -->
      <t>
        <list style="hanging">
          <t hangText="iss">
            <vspace/>
            REQUIRED.
            RP が Authentication Request を送信する OP を示す Issuer Identifier.
            その値は <spanx style="verb">https</spanx> スキームを用いた URL でなければならない (MUST).
            <!--
            REQUIRED.
            Issuer Identifier for the OP that the RP is to send
            the Authentication Request to.
            Its value MUST be a URL using the <spanx style="verb">https</spanx> scheme.
            -->
          </t>
          <t hangText="login_hint">
            <vspace/>
            OPTIONAL.
            Authorization Server に対して, ログインさせたい End-User を示す, ログイン識別子に関するヒント情報.
            Client がこの文字列値パラメーターを受け取った場合, それを Authentication Request に <spanx style="verb">login_hint</spanx> パラメーター値として含めなければならない (MUST).
            <!--
            OPTIONAL.
            Hint to the Authorization Server
            about the login identifier the End-User might use to log in.
            If the client receives a value for this string-valued parameter,
            it MUST include it in the Authentication Request
            as the <spanx style="verb">login_hint</spanx> parameter value.
            -->
          </t>
          <t hangText="target_link_uri">
            <vspace/>
            OPTIONAL.
            認証後, RP がリダイレクトするよう要求された URL.
            RP は外部サイトへのオープンリダイレクターとして使用されることを防ぐために <spanx style="verb">target_link_uri</spanx> の値を検証しなければならない(MUST).
            <!--
            OPTIONAL.
            URL that the RP is requested to redirect to after authentication.
            RPs MUST verify the value of the
            <spanx style="verb">target_link_uri</spanx> to prevent being used as
            an open redirector to external sites.
            -->
          </t>

        </list>
      </t>
      <t>
        パラメーターは HTTP <spanx style="verb">GET</spanx> メソッドを用いたクエリパラメーターとして渡す, もしくは User Agent で自動送信される HTML フォーム値として HTTP <spanx style="verb">POST</spanx> メソッドで渡すことができる.
      </t>
      <!--
      <t>
        The parameters can either be passed as query parameters using
        the HTTP <spanx style="verb">GET</spanx> method
        or be passed as HTML form values that are auto-submitted in the User Agent,
        and thus are transmitted via the HTTP <spanx style="verb">POST</spanx> method.
      </t>
      -->

      <t>
        拡張によって他のパラメーターが定義される場合, それらが送られてもよい (MAY).
        Client は, 理解できないパラメーターが送られた場合, それらを無視しなければならない (MUST).
      </t>
      <!--
      <t>
        Other parameters MAY be sent, if defined by extensions.
        Any parameters used that are not understood MUST be ignored by the Client.
      </t>
      -->

      <t>
        Clients は, Clickjacking などの攻撃を通じて End-User が 3rd-party サイトに無意識にログインさせられるような攻撃を防ぐため, フレームバスティングやその他の技術を採用すべきである (SHOULD).
        詳細は <xref target="RFC6819"/> の Section 4.4.1.9 を参照.
      </t>
      <!--
      <t>
        Clients SHOULD employ frame busting and other techniques to prevent
        End-Users from being logged in by third party sites without their knowledge
        through attacks such as Clickjacking.
        Refer to Section 4.4.1.9 of <xref target="RFC6819"/> for more details.
      </t>
      -->

    </section>

    <section anchor="Claims" title="Claims">
      <t>
        この章では, Client が End-User と Authentication イベントについての Claims をどのように取得するかについて定義する.
        また同時に Basic Profile Claims の標準セットも定義する.
        特定の scope 値を用いて事前に定義された Claims のセットを要求することもできるし, <spanx style="verb">claims</spanx> リクエストパラメーターを用いて個々の Claims を要求することもできる.
        これらの Claims は, OpenID Provider から直接取得することもできるし, 分散されたデータソースから個別に取得することもできる.
      </t>
      <!--
      <t>
        This section specifies how the Client can obtain Claims about the End-User
        and the Authentication event.
        It also defines a standard set of basic profile Claims.
        Pre-defined sets of Claims can be requested using specific scope values
        or individual Claims can be requested using the
        <spanx style="verb">claims</spanx> request parameter.
        The Claims can come directly from the OpenID Provider
        or from distributed sources as well.
      </t>
      -->

      <section anchor="StandardClaims" title="Standard Claims">
        <t>
          ここでは標準 Claims のセットを定義する.
          これらは <xref target="UserInfoResponse"/> に示す UserInfo Response, あるいは <xref target="IDToken"/> に示す ID Token のどちらかに含めて返却するように要求できる.
        </t>
        <!--
        <t>This specification defines a set of standard Claims.
        They can be requested to be returned either in the
        UserInfo Response, per <xref target="UserInfoResponse"/>,
        or in the ID Token, per <xref target="IDToken"/>.
        </t>
        -->

        <texttable anchor="ClaimTable" title="Registered Member Definitions">
          <ttcol align="left">Member</ttcol>

          <ttcol align="left">Type</ttcol>

          <ttcol align="left">Description</ttcol>

          <c>sub</c>
          <c>string</c>
          <c>Subject - Issuer における End-User の識別子</c>
          <!--
          <c>Subject - Identifier for the End-User at the Issuer.</c>
          -->

          <c>name</c>
          <c>string</c>
          <c>
            End-User の表示用フルネーム.
            肩書きや称号 (suffix) 等が含まれることもある.
            氏名等の表示順は End-User の locale や選好に従う.
          </c>
          <!--
          <c>
            End-User's full name in displayable form including all name parts,
            possibly including titles and suffixes,
            ordered according to the End-User's locale and preferences.
          </c>
          -->

          <c>given_name</c>
          <c>string</c>
          <c>
            End-User の名 (given name / first name).
            複数の given name を持つ文化圏もあることに注意.
            全ての given name が含まれる可能性があり, その場合はスペース区切りで表記される.
          </c>
          <!--
          <c>
            Given name(s) or first name(s) of the End-User.
            Note that in some cultures, people can have multiple given names;
            all can be present, with the names being separated by space characters.
          </c>
          -->

          <c>family_name</c>
          <c>string</c>
          <c>
            End-User の姓 (surname / last name).
            複数の family name を持つ文化圏や family name を持たない文化圏もあることに注意.
            全ての family name が含まれる可能性があり, その場合はスペース区切りで表記される.
          </c>
          <!--
          <c>
            Surname(s) or last name(s) of the End-User.
            Note that in some cultures, people can have multiple family names
            or no family name;
            all can be present, with the names being separated by space characters.
          </c>
          -->

          <c>middle_name</c>
          <c>string</c>
          <c>
            End-User の middle name.
            複数の middle name を持つ文化圏もあることに注意.
            全ての middle name が含まれる可能性があり, その場合はスペース区切りで表記される.
            また middle name を使用しない文化圏もある.
          </c>
          <!--
          <c>
            Middle name(s) of the End-User.
            Note that in some cultures, people can have multiple middle names;
            all can be present, with the names being separated by space characters.
            Also note that in some cultures, middle names are not used.
          </c>
          -->

          <c>nickname</c>
          <c>string</c>
          <c>
            End-User のニックネーム. これは <spanx style="verb">given_name</spanx> と同じこともあれば異なることもある.
            例えば, <spanx style="verb">nickname</spanx> が <spanx style="verb">Mike</spanx>, <spanx style="verb">given_name</spanx> が <spanx style="verb">Michael</spanx> として返されることがある.
          </c>
          <!--
          <c>Casual name of the End-User that may or may not be the same as the
          <spanx style="verb">given_name</spanx>. For instance, a <spanx
          style="verb">nickname</spanx> value of <spanx style="verb">Mike</spanx>
          might be returned alongside a <spanx style="verb">given_name</spanx>
          value of <spanx style="verb">Michael</spanx>.</c>
          -->

          <c>preferred_username</c>
          <c>string</c>
          <c>
            <spanx style="verb">janedoe</spanx> や <spanx style="verb">j.doe</spanx> といった, End-User の選好する簡略名.
            これは <spanx style="verb">@</spanx> や <spanx style="verb">/</spanx> や空白文字といった特殊文字を含むあらゆる valid な JSON 文字列でありうる (MAY).
            <xref target="ClaimStability"></xref> にあるように, RP はこの値がユニークであるという前提で扱ってはならない (MUST NOT).
          </c>
          <!--
          <c>Shorthand name by which the End-User wishes to be referred to at the RP, such as
          <spanx style="verb">janedoe</spanx> or <spanx style="verb">j.doe</spanx>.
          This value MAY be any valid JSON string including
          special characters such as <spanx style="verb">@</spanx>,
          <spanx style="verb">/</spanx>, or whitespace.
          The RP MUST NOT rely upon this value being unique,
          as discussed in <xref target="ClaimStability"></xref>.
          </c>
          -->

          <c>profile</c>
          <c>string</c>
          <c>
            End-User のプロフィールページの URL.
            この Web ページに掲載されるコンテンツはこの End-User に関するものであるべきである (SHOULD).
          </c>
          <!--
          <c>
            URL of the End-User's profile page.
            The contents of this Web page SHOULD be about the End-User.
          </c>
          -->

          <c>picture</c>
          <c>string</c>
          <c>
            End-User のプロフィール画像の URL.
            この URL は画像ファイル (PNG, JPEG, GIF 画像ファイル等) を参照すること (MUST).
            またこの画像は End-User が撮影した任意の写真ではなく, End-User に言及する際の表示に適切なプロフィール画像とするべきである (SHOULD).
          </c>
          <!--
          <c>
            URL of the End-User's profile picture.
            This URL MUST refer to an image file
            (for example, a PNG, JPEG, or GIF image file),
            rather than to a Web page containing an image.
            Note that this URL SHOULD specifically reference
            a profile photo of the End-User
            suitable for displaying when describing the End-User,
            rather than an arbitrary photo taken by the End-User.
          </c>
          -->

          <c>website</c>
          <c>string</c>
          <c>
            End-User の Web ページやブログの URL.
            この Web ページは End-User 自身や End-User が所属する組織が発信する情報を含むべきである (SHOULD).
          </c>
          <!--
          <c>
            URL of the End-User's Web page or blog.
            This Web page SHOULD contain information published by the End-User
            or an organization that the End-User is affiliated with.
          </c>
          -->

          <c>email</c>
          <c>string</c>
          <c>
            End-User の選好する Email アドレス.
            <xref target="RFC5322">RFC 5322</xref> の addr-spec シンタックスに従うこと.
            <xref target="ClaimStability"></xref> にあるように, RP はこの値がユニークであるという前提で扱ってはならない (MUST NOT).
          </c>
          <!--
          <c>
            End-User's preferred e-mail address.
            Its value MUST conform to the <xref target="RFC5322">RFC 5322</xref>
            addr-spec syntax.
            The RP MUST NOT rely upon this value being unique,
            as discussed in <xref target="ClaimStability"></xref>.
          </c>
          -->

          <c>email_verified</c>
          <c>boolean</c>
          <c>
            End-User の Email アドレスが検証済であれば true, さもなければ false.
            Claim Value が <spanx style="verb">true</spanx> の場合, これは OP が検証を行った時点において該当 Email アドレスが End-User のコントロール下にあるという確認処理を行ったことを示す.
            Email アドレスの検証の詳細についてはコンテキストに依存し, 関係者間でのトラストフレームワークや契約上の同意事項等などによって異なる.
          </c>
          <!--
          <c>
            True if the End-User's e-mail address has been verified; otherwise false.
            When this Claim Value is <spanx style="verb">true</spanx>,
            this  means that the OP took affirmative steps
            to ensure that this e-mail address was controlled by the End-User
            at the time the verification was performed.
            The means by which an e-mail address is verified is context-specific,
            and dependent upon the trust framework or contractual agreements
            within which the parties are operating.
          </c>
          -->

          <c>gender</c>
          <c>string</c>
          <c>
            End-User の性別.
            本仕様では <spanx style="verb">female</spanx>, <spanx style="verb">male</spanx> を定義する.
            定義済の値に適切なものがない場合, その他の値を利用してもよい (MAY).
          </c>
          <!--
          <c> End-User's gender.  Values defined by this
          specification are <spanx style="verb">female</spanx> and
          <spanx style="verb">male</spanx>.  Other values MAY be used
          when neither of the defined values are applicable.</c>
          -->

          <c>birthdate</c>
          <c>string</c>
          <c>
            End-User の誕生日.
            <xref target="ISO8601-2004">ISO 8601:2004</xref> <spanx style="verb">YYYY-MM-DD</spanx> 形式で表現される.
            生年を <spanx style="verb">0000</spanx> とすることで生年を省略することもできる (MAY).
            生年のみを提示する場合は <spanx style="verb">YYYY</spanx> 形式としても良い.
            利用するプラットフォームの日付関連の関数の実装によって, 生年のみを提供した場合の月日の扱いは様々であるため, 実装者はこの点を考慮にいれて日付を処理すべきである.
          </c>
          <!--
          <c>End-User's birthday, represented as an
          <xref target="ISO8601-2004">ISO 8601:2004</xref> <spanx style="verb">YYYY-MM-DD</spanx>
          format. The year MAY be <spanx style="verb">0000</spanx>, indicating that it is omitted.
          To represent only the year, <spanx style="verb">YYYY</spanx> format is allowed. Note that
          depending on the underlying platform's date related function, providing just year can
          result in varying month and day, so the implementers need to take this factor into account
          to correctly process the dates. </c>
          -->

          <c>zoneinfo</c>
          <c>string</c>
          <c>
            End-User のタイムゾーンを示す zoneinfo <xref target="zoneinfo"/> に登録された文字列.
            例えば, <spanx style="verb">Europe/Paris</spanx> や <spanx style="verb">America/Los_Angeles</spanx>.
          </c>
          <!--
          <c>String from zoneinfo <xref target="zoneinfo"/> time zone
          database representing the End-User's time zone.
          For example, <spanx style="verb">Europe/Paris</spanx> or
          <spanx style="verb">America/Los_Angeles</spanx>.</c>
          -->

          <c>locale</c>
          <c>string</c>
          <c>
            End-User の locale.
            <xref target="RFC5646">BCP47</xref> 言語タグ表現.
            これは通常 <xref target="ISO639-1">ISO 639-1 Alpha-2</xref> 言語コードを小文字表記, <xref target="ISO3166-1">ISO 3166-1 Alpha-2</xref> 国コードを大文字表記し, ダッシュでつなげたものである.
            (<spanx style="verb">en-US</spanx>, <spanx style="verb">fr-CA</spanx> 等)
            実装によってはダッシュの代わりにアンダースコアを区切り文字に用いる場合もあるため, 互換性の観点からは注意すること. (<spanx style="verb">en_US</spanx> 等)
            Relying Party はダッシュ区切りに加えてアンダースコア区切りのシンタックスを受け入れてもよい (MAY).
          </c>
          <!--
          <c>End-User's locale, represented as a
          <xref target="RFC5646">BCP47</xref> language tag.
          This is typically an <xref target="ISO639-1">ISO 639-1 Alpha-2</xref>
          language code in
          lowercase and an <xref target="ISO3166-1">ISO 3166-1 Alpha-2</xref>
          country code in uppercase, separated by a dash. For example,
          <spanx style="verb">en-US</spanx> or <spanx style="verb">fr-CA</spanx>.
          As a compatibility note, some implementations have used an underscore
          as the separator rather than a dash, for example,
          <spanx style="verb">en_US</spanx>; Relying Parties MAY choose to
          accept this locale syntax as well.</c>
          -->

          <c>phone_number</c>
          <c>string</c>
          <c>
            End-User の選好する電話番号.
            この Claim のフォーマットとしては <xref target="E.164">E.164</xref> を推奨する (RECOMMENDED).
            (<spanx style="verb">+1 (425) 555-1212</spanx>, <spanx style="verb">+56 (2) 687 2400</spanx> 等)
            電話番号が拡張を含む場合, その拡張は <xref target="RFC3966">RFC 3966</xref> 拡張シンタックスで表記することを推奨する (RECOMMENDED).
            (<spanx style="verb">+1 (604) 555-1234;ext=5678</spanx> 等)
          </c>
          <!--
          <c>
            End-User's preferred telephone number. <xref target="E.164">E.164</xref>
            is RECOMMENDED as the format of this Claim,
            for example, <spanx style="verb">+1 (425) 555-1212</spanx>
            or <spanx style="verb">+56 (2) 687 2400</spanx>.
            If the phone number contains an extension, it is RECOMMENDED that
            the extension be represented using the
            <xref target="RFC3966">RFC 3966</xref> extension syntax,
            for example, <spanx style="verb">+1 (604) 555-1234;ext=5678</spanx>.
          </c>
          -->

          <c>phone_number_verified</c>
          <c>boolean</c>
          <c>
            End-User の電話番号が検証済であれば ture, さもなければ false.
            Claim Value が <spanx style="verb">true</spanx> の場合, これは OP が検証を行った時点において該当電話番号が End-User のコントロール下にあるという確認処理を行ったことを示す.
            電話番号の検証の詳細についてはコンテキストに依存し, 関係者間でのトラストフレームワークや契約上の同意事項等などによって異なる.
            また true の場合, <spanx style="verb">phone_number</spanx> Claim は E.164 形式でなければならず (MUST), すべての拡張は RFC 3966 形式でなければならない (MUST).
          </c>
          <!--
          <c>
            True if the End-User's phone number has been verified; otherwise false.
            When this Claim Value is <spanx style="verb">true</spanx>,
            this  means that the OP took affirmative steps
            to ensure that this phone number was controlled by the End-User
            at the time the verification was performed.
            The means by which a phone number is verified is context-specific,
            and dependent upon the trust framework or contractual agreements
            within which the parties are operating.
            When true, the <spanx style="verb">phone_number</spanx>
            Claim MUST be in E.164 format
            and any extensions MUST be represented in RFC 3966 format.
          </c>
          -->

          <c>address</c>
          <c>JSON object</c>
          <c>
            End-User の選好する郵送先住所.
            <spanx style="verb">address</spanx> メンバーは <xref target="AddressClaim"/> に定義されたメンバーを含む JSON <xref target="RFC4627"/> 構造である.
          </c>
          <!--
          <c>
            End-User's preferred postal address.
            The value of the <spanx style="verb">address</spanx> member is
            a JSON <xref target="RFC4627"/> structure containing some or all of
            the members defined in <xref target="AddressClaim"/>.
          </c>
          -->

          <c>updated_at</c>
          <c>number</c>
          <c>
            End-User に関する情報の最終更新日時.
            この値は UTC 1970-01-01T0:0:0Z から該当時刻までの秒数を示す JSON 数値である.
          </c>
          <!--
          <c>
            Time the End-User's information was last updated.
            Its value is a JSON number representing the number of seconds from
            1970-01-01T0:0:0Z as measured in UTC until the date/time.
          </c>
          -->
        </texttable>

        <section anchor="AddressClaim" title="Address Claim">
          <t>
            Address Claim は物理的な郵送先住所である.
            End-User の登録済情報とプライバシー設定に基づいて, <spanx style="verb">address</spanx> の一部のみを返却することもある (MAY).
            例えば <spanx style="verb">country</spanx> と <spanx style="verb">region</spanx> を返し, それ以外の詳細なアドレス情報を省略するなどが考えられる.
          </t>
          <!--
          <t>
            The Address Claim represents a physical mailing address.
            Implementations MAY return only a subset of the
            fields of an <spanx style="verb">address</spanx>, depending upon
            the information available and the End-User's privacy
            preferences. For
            example, the <spanx style="verb">country</spanx> and <spanx
            style="verb">region</spanx> might be returned without returning
            more fine-grained address information.
          </t>
          -->
          <t>
            住所全体を <spanx style="verb">formatted</spanx> サブフィールドに1文字列として入れてもよいし (MAY), 他のサブフィールドに個別の要素として各住所要素を指定するだけでもよいし (MAY), 両方を含めてもよい (MAY).
            もし両方を含める場合, <spanx style="verb">formatted</spanx> 住所は住所の各要素の連結方法を示すものとし, 両方が同じ住所を示すこと (SHOULD).
          </t>
          <!--
          <t>
            Implementations MAY return just the full address
            as a single string in the formatted sub-field,
            or they MAY return just the individual component
            fields using the other sub-fields,
            or they MAY return both.
            If both variants are returned,
            they SHOULD be describing the same address,
            with the formatted address indicating how the
            component fields are combined.
          </t>
          -->

          <t>
            <list style="hanging">
              <t hangText="formatted">
                <vspace/>
                表示や宛名ラベルで使用するために整形された完全な郵送先住所.
                このフィールドは改行で区切られた複数の行を含んでもよい (MAY).
                改行は, 復帰/行送りのペア ("\r\n") か,
                または単一の行送り文字 ("\n") によって表現される.
              </t>

              <t hangText="street_address">
                <vspace/>
                家番号, ストリート名, 私書箱, 複数行からなる拡張された住所情報を含むことができる (MAY) 完全な住所を示す要素.
                このフィールドは改行で区切られた複数の行を含んでもよい (MAY).
                改行は, 復帰/行送りのペア ("\r\n") か,
                または単一の行送り文字 ("\n") によって表現される.
              </t>

              <t hangText="locality">
                <vspace/>
                市町村などを表す city, locality を示す要素.
              </t>

              <t hangText="region">
                <vspace/>
                都道府県などを表す state, province, prefecture, region を示す要素.
              </t>

              <t hangText="postal_code">
                <vspace/>
                郵便番号を表す ZIP code, postal code を示す要素.
              </t>

              <t hangText="country">
                <vspace/>
                国名を示す要素.
              </t>
            </list>
          </t>
          <!--
          <t>
            <list style="hanging">
              <t hangText="formatted">
                <vspace/>
                Full mailing address,
                formatted for display or use on a mailing label.
                This field MAY contain multiple lines, separated by newlines.
                Newlines can be represented either as
                a carriage return/line feed pair ("\r\n") or as
                a single line feed character ("\n").
              </t>

              <t hangText="street_address">
                <vspace/>
                Full street address component,
                which MAY include house number, street name,
                Post Office Box, and multi-line extended street
                address information.
                This field MAY contain multiple lines, separated by newlines.
                Newlines can be represented either as
                a carriage return/line feed pair ("\r\n") or as
                a single line feed character ("\n").
              </t>

              <t hangText="locality">
                <vspace/>
                City or locality component.
              </t>

              <t hangText="region">
                <vspace/>
                State, province,
                prefecture, or region component.
              </t>

              <t hangText="postal_code">
                <vspace/>
                Zip code or
                postal code component.
              </t>

              <t hangText="country">
                <vspace/>
                Country name component.
              </t>
            </list>
          </t>
          -->
        </section>

        <section anchor="AdditionalClaims" title="Additional Claims">
          <t>
            当仕様では標準 Claim として小さなセットの Claim のみを定義しているが,
            その他の Claim を標準 Claim と同時に使用してもよい (MAY).
            このような Claim を用いる際は,
            <xref target="JWT">JSON Web Token (JWT)</xref> 仕様に記載の通り,
            衝突耐性のある名称を Claim Name に用いることを推奨する (RECOMMENDED).
            あるいは, JWT 仕様に記載の通り, 名前衝突が発生する可能性が低い場合は,
            Private Claim Name を安全に利用できるだろう.
            もしくは, JWT 仕様に記載の通り, 追加の Claim が広く一般的に適用可能であれば,
            Registered Claim Name として登録も可能だろう.
          </t>
          <!--
          <t>
            While this specification defines only a small set of Claims as
            standard Claims, other Claims MAY be used in conjunction
            with the standard Claims.
            When using such Claims, it is RECOMMENDED that
            collision-resistant names be used for the Claim Names,
            as described in <!-- Section 4.2 (Public Claim Names) of --><!-- the
            <xref target="JWT">JSON Web Token (JWT)</xref> specification.
            Alternatively, Private Claim Names can be safely used
            when naming conflicts are unlikely to arise,
            as described in <!-- Section 4.3 of --><!-- the JWT specification.
            Or, if specific additional Claims will have broad and general applicability,
            they can be registered with Registered Claim Names,
            per <!-- Sections 4.1 and 10.1 of --><!-- the JWT specification.
          </t>
          -->
        </section>
      </section>

      <section anchor="ClaimsLanguagesAndScripts" title="Claims Languages and Scripts">
        <t>
          Human-readable な Claim Value およびそれらへの参照は, 複数言語および複数文字種で表現することができる (MAY).
          言語および文字種の指定には <xref target="RFC5646">BCP47</xref> 言語タグを <spanx style="verb">#</spanx> を区切り文字としてメンバー名に付与する.
          例えば <spanx style="verb">family_name#ja-Kana-JP</spanx> は日本語のカタカナ表記の Family Name を示す.
          カタカナ表記の氏名は, 漢字表記 (<spanx style="verb">family_name#ja-Hani-JP</spanx>) の氏名の発音を示したりインデックス目的等で用いられることが多い.
          他にも <spanx style="verb">website</spanx> が言語指定のない Web サイト, <spanx style="verb">website#de</spanx> がドイツ語の Web サイトを参照していることを示すといった例も挙げられる.
        </t>
        <!--
        <t>
          Human-readable Claim Values and Claim Values that reference human-readable values
          MAY be represented in multiple languages and scripts.
          To specify the languages and scripts, <xref
          target="RFC5646">BCP47</xref> language tags are added to member names,
          delimited by a <spanx style="verb">#</spanx> character.  For example,
          <spanx style="verb">family_name#ja-Kana-JP</spanx> expresses the
          Family Name in Katakana in Japanese, which is commonly used to index
          and represent the phonetics of the Kanji representation of the same
          represented as <spanx style="verb">family_name#ja-Hani-JP</spanx>.
          As another example, both <spanx style="verb">website</spanx> and
          <spanx style="verb">website#de</spanx> Claim Values might be returned,
          referencing a Web site in an unspecified language and a Web site
          in German.
        </t>
        -->
        <t>
          Claim Name は大文字小文字を区別するため, Claim Name 内の言語タグは <xref target="IANA.Language">IANA Language Subtag Registry</xref> に登録されたままの表記とすることを強く推奨する (RECOMMENDED).
          一般的に言語名は小文字, 地域名は大文字, 文字種は大文字小文字混合で表記されることが多い.
          しかしながら BCP47 言語タグ値は大文字小文字を区別しないため, 実装は言語タグを大文字小文字区別なく処理できるべきである (SHOULD).
        </t>
        <!--
        <t>
          Since Claim Names are case sensitive, it is strongly RECOMMENDED
          that language tag values used in Claim Names be spelled using the
          character case with which they are registered in the
          <xref target="IANA.Language">IANA Language Subtag Registry</xref>.
          In particular, normally language names are spelled with lowercase characters,
          region names are spelled with uppercase characters, and
          scripts are spelled with mixed case characters.
          However, since BCP47 language tag values are case insensitive,
          implementations SHOULD interpret the language tag values supplied
          in a case insensitive manner.
        </t>
        -->
        <t>
          BCP47 で推奨されるように, Claim の言語タグ値は必要な時にのみ指定すべきである (SHOULD).
          例えばほとんどの場合 <spanx style="verb">fr-CA</spanx> や <spanx style="verb">fr-FR</spanx> でなく <spanx style="verb">fr</spanx> で十分である.
          可能であれば OP は要求された Claim locale と自身が持つ Claim のマッチングを試みるべきである (SHOULD).
          例えば Client が <spanx style="verb">de</spanx> (ドイツ語) の Claim を要求してきており, OP が <spanx style="verb">de-CH</spanx> (スイスのドイツ語) 表記の Claim は持つが地域指定無しの一般的ドイツ語表記の Claim を持たない場合, OP はスイスのドイツ語の値を返すのが適切である.
          (Client をできるかぎりシンプルに保つため, ここでは言語タグのマッチングが内包する複雑性をわざと OP に寄せている)
        </t>
        <!--
        <t>
          Per the recommendations in BCP47, language tag values for Claims
          SHOULD only be as specific as necessary.
          For instance, using <spanx style="verb">fr</spanx> might be sufficient
          in many contexts, rather than <spanx style="verb">fr-CA</spanx> or
          <spanx style="verb">fr-FR</spanx>.
          Where possible, OPs SHOULD try to match requested Claim locales with
          Claims it has.  For instance, if the Client asks for a Claim with
          a <spanx style="verb">de</spanx> (German) language tag and the OP
          has a value tagged with <spanx style="verb">de-CH</spanx> (Swiss German)
          and no generic German value, it would be appropriate for the OP
          to return the Swiss German value to the Client.
          (This intentionally moves as much of the complexity of language tag
          matching to the OP as possible, to simplify Clients.)
        </t>
        -->
        <t>
          返却される Claim の好ましい言語および文字種の指定を可能とするため,
          OpenID Connect では, 以下の Authorization Request パラメータを定義している:

          <list style="hanging">

            <t hangText="claims_locales">
              OPTIONAL.
              返却される Claim に関して, End-User が好む言語および文字種.
              スペース区切りの <xref target="RFC5646">BCP47</xref> 言語タグ値のリストとして表現され, 順序は選好順となる.
              要求されたロケールがサポートされていない場合でも, OpenID Provider はエラーとするべきではない (SHOULD NOT).
            </t>
          </list>
        </t>
        <!--
        <t>
          OpenID Connect defines the following Authorization Request parameter
          to enable specify the preferred languages and scripts to be used
          for the returned Claims:

          <list style="hanging">

            <t hangText="claims_locales">
              <vspace/>
              OPTIONAL.
              End-User's preferred languages and scripts for Claims being returned,
              represented as a space-separated list of
              <xref target="RFC5646">BCP47</xref> language tag values,
              ordered by preference.
              An error SHOULD NOT result if some or all of the requested locales
              are not supported by the OpenID Provider.
            </t>
          </list>
        </t>
        -->
        <t>
          OP が <spanx style="verb">claims_locales</spanx> やその他の手段により End-User と Client が単一言語および文字種表記の Claim を要求していると特定した場合, 該当言語および文字種表記の Claim を返却する際には言語タグを付けずに返すことを推奨する (RECOMMENDED).
          また Client は言語タグ付きの Claim を処理可能なよう実装することを推奨する (RECOMMENDED).
        </t>
        <!--
        <t>
          When the OP determines, either through the
          <spanx style="verb">claims_locales</spanx> parameter,
          or by other means, that the End-User and Client are
          requesting Claims in only one set of languages and scripts,
          it is RECOMMENDED that OPs return Claims without language tags
          when they employ this language and script.
          It is also RECOMMENDED that Clients be written in a manner
          that they can handle and utilize Claims using language tags.
        </t>
        -->

      </section>

      <section anchor="UserInfo" title="UserInfo Endpoint">

        <t>
          UserInfo Endpoint は, 認証された End-User に関する Claim を返す OAuth 2.0 Protected Resource である.
          要求された End-User の Claim を取得するため, Clientは OpenID Connect Authentication を通して得られた Access Token を用いて UserInfo Endpoint に要求する.
          これらの Claim は通常, Claim の名前と値のペアのコレクションを含んだ JSON オブジェクトで表現される.
        </t>
        <!--
        <t>
          The UserInfo Endpoint is an OAuth 2.0 Protected Resource that
          returns Claims about the authenticated End-User.
          To obtain the requested Claims about the End-User, the Client
          makes a request to the UserInfo Endpoint
          using an Access Token obtained through OpenID Connect Authentication.
          These Claims are normally represented by a JSON object that contains
          a collection of name and value pairs for the Claims.
        </t>
        -->
        <t>
          UserInfo Endpoint にアクセスする際には TLS は必須である (MUST).
          TLS 利用についての詳細は <xref target="TLSRequirements"/> 参照.
        </t>
        <!--
        <t>
          Communication with the UserInfo Endpoint MUST utilize TLS.
          See <xref target="TLSRequirements"/> for more information on using TLS.
        </t>
        -->

        <t>
          UserInfo Endpoint は <xref target="RFC2616">RFC 2616</xref> で定義された HTTP <spanx style="verb">GET</spanx> メソッドと HTTP <spanx style="verb">POST</spanx> メソッドをサポートしなければならない (MUST).
        </t>
        <!--
        <t>
          The UserInfo Endpoint MUST support the use of the
          HTTP <spanx style="verb">GET</spanx> and
          HTTP <spanx style="verb">POST</spanx> methods
          defined in <xref target="RFC2616">RFC 2616</xref>.
        </t>
        -->

        <t>
          UserInfo Endpoint は <xref target="RFC6750">OAuth 2.0 Bearer Token Usage</xref> の Access Token を受け入れなければいけない (MUST).
        </t>
        <!--
        <t>The UserInfo Endpoint MUST accept Access Tokens as
        <xref target="RFC6750">OAuth 2.0 Bearer Token Usage</xref>.</t>
        -->

        <t>
          UserInfo Endpoint は Java Scipt Clientが Endpoint にアクセスできるように <xref target="CORS">Cross Origin Resource Sharing (CORS)</xref> や 必要に応じて他の方法をサポートすべきである (SHOULD).
        </t>
        <!--
        <t>The UserInfo Endpoint SHOULD support the use of
        <xref target="CORS">Cross Origin Resource Sharing (CORS)</xref> and
        or other methods as appropriate to enable Java Script Clients to access the endpoint.</t>
        -->

        <section anchor="UserInfoRequest" title="UserInfo Request">

          <t>
            Clientは HTTP <spanx style="verb">GET</spanx> か HTTP <spanx style="verb">POST</spanx> のいずれかを用いて UserInfo Request を送信する.
            OpenID Connect Authentication Request で得られた Access Token は <xref target="RFC6750">OAuth 2.0 Bearer Token Usage</xref> の Section 2 に従って, Bearer Token として送信されなければいけない (MUST).
          </t>
          <!--
          <t>
            The Client sends the UserInfo Request using either
            HTTP <spanx style="verb">GET</spanx> or HTTP <spanx style="verb">POST</spanx>.
            The Access Token obtained
            from an OpenID Connect Authentication Request MUST be sent as a Bearer Token,
            per Section 2 of <xref target="RFC6750">OAuth 2.0 Bearer Token Usage</xref>.
          </t>
          -->
          <t>
            このリクエストでは, HTTP <spanx style="verb">GET</spanx> メソッドを用いて, Access Token を <spanx style="verb">Authorization</spanx> ヘッダフィールドに含めて送信すべきである (SHOULD).
          </t>
          <!--
          <t>
            It is RECOMMENDED that the request use the
            HTTP <spanx style="verb">GET</spanx> method and
            the Access Token be sent using the
            <spanx style="verb">Authorization</spanx> header field.
          </t>
          -->

          <figure>
            <preamble>
              以下に UserInfo Request の一例を示す:
            </preamble>
            <!--
            <preamble>
              The following is a non-normative example of a UserInfo Request:
            </preamble>
            -->

            <artwork><![CDATA[
  GET /userinfo HTTP/1.1
  Host: server.example.com
  Authorization: Bearer SlAV32hkKG
]]></artwork>
          </figure>
        </section>

        <section anchor="UserInfoResponse" title="Successful UserInfo Response">
          <t>
            Client の登録時に署名または暗号化されたレスポンスが要求されていない限り, UserInfo Claim は JSON オブジェクトのメンバーとして返される (MUST).
            <xref target="StandardClaims"/> に定義されている Claim に加え, そこに明記されていない Claim も返却可能である.
          </t>
          <!--
          <t>
            The UserInfo Claims MUST be returned as the members of a JSON object
            unless a signed or encrypted response was requested during Client Registration.
            The Claims defined in <xref target="StandardClaims"/> can be returned,
            as can additional Claims not specified there.
          </t>
          -->
          <t>
            プライバシー上の理由により, OpenID Provider はいくつかの要求された Claim の値を返さなくてもよい (MAY).
          </t>
          <!--
          <t>
            For privacy reasons, OpenID Providers MAY elect to not return
            values for some requested Claims.
          </t>
          -->
          <t>
            Claim が返されない場合, Claim Name は JSON オブジェクトから除かれるべきであり (SHOULD), 値を null や空文字列にした状態で該当の Claim を含めるべきではない (SHOULD NOT).
          </t>
          <!--
          <t>
            If a Claim is not returned, that Claim Name SHOULD be
            omitted from the JSON object representing the Claims; it
            SHOULD NOT be present with a null or empty string value.
          </t>
          -->
          <t>
            UserInfo Response には, 必ず <spanx style="verb">sub</spanx> (subject) Claim を含むこと (MUST).
          </t>
          <!--
          <t>
            The <spanx style="verb">sub</spanx> (subject) Claim
            MUST always be returned in the UserInfo Response.
          </t>
          -->
          <t>
            注) トークン置換攻撃 (<xref target="TokenSubstitution"/> 参照) を考慮すると, UserInfo Response が必ずしも ID Token の <spanx style="verb">sub</spanx> Claim が示す End-User のものであるとは保証できない.
            そのため UserInfo Response に含まれる <spanx style="verb">sub</spanx> Claim が ID Token のそれと一致することを検証しなければならない (MUST).
            もし2つが一致しない場合, UserInfo Response を利用してはならない (MUST NOT).
          </t>
          <!--
          <t>
            NOTE:  Due to the possibility of token substitution attacks
            (see <xref target="TokenSubstitution"/>),
            the UserInfo Response is not guaranteed to be about the
            End-User identified by the <spanx style="verb">sub</spanx> (subject)
            element of the ID Token.
            The <spanx style="verb">sub</spanx> Claim in the UserInfo Response
            MUST be verified to exactly match the
            <spanx style="verb">sub</spanx> Claim in the ID Token;
            if they do not match, the UserInfo Response values MUST NOT be used.
          </t>
          -->
          <t>
            登録 <xref target="OpenID.Registration"/> 時に別の形式が指定された場合を除き, UserInfo Request を受信すると UserInfo Endpoint は <xref target="JSONSerialization"/> のように, UserInfor Response の JSON Serialization を HTTP レスポンスボディで返さなければならない (MUST).
            UserInfo Endpoint は Content-Type ヘッダーを用いてフォーマットを示すこと (MUST).
            レスポンスボディがテキスト JSON オブジェクトである場合, HTTP レスポンスの Content-Type は <spanx style="verb">application/json</spanx> でなければならず (MUST), レスポンスボディは UTF-8 エンコードとすること (SHOULD).
          </t>
          <!--
          <t>
            Upon receipt of the UserInfo Request, the UserInfo Endpoint MUST
            return the JSON Serialization of the UserInfo Response as in
            <xref target="JSONSerialization"/> in the HTTP response
            body unless a
            different format was specified during Registration
            <xref target="OpenID.Registration"/>.
            The UserInfo Endpoint MUST return a content-type header to indicate
            which format is being returned.
            The content-type of the HTTP response MUST be <spanx
            style="verb">application/json</spanx> if the response body is a text
            JSON object;
            the response body SHOULD be encoded using UTF-8.
          </t>
          -->
          <t>
            UserInfo Response が署名や暗号化をされている場合,
            Claim は JWT で返され, Content-Type は <spanx style="verb">application/jwt</spanx> でなければならない (MUST).
            レスポンスは署名無しに暗号化をしてもよい (MAY).
            署名と暗号化の両方が要求された場合, レスポンスは <xref target="JWT"/> で定義されているように, 結果はネストされた JWT となり, 署名した後に暗号化しなければならない (MUST).
          </t>
          <!--
          <t>
            If the UserInfo Response is
            signed and/or encrypted, then the Claims are returned in a JWT and the
            content-type MUST be <spanx style="verb">application/jwt</spanx>.
            The response MAY be encrypted without also being signed.
            If both signing and encryption are requested,
            the response MUST be signed then encrypted,
            with the result being a Nested JWT, as defined in <xref target="JWT"/>.
          </t>
          -->
          <t>
            署名する場合, UserInfo Response は
            メンバーとして <spanx style="verb">iss</spanx> (issuer) Claim と <spanx style="verb">aud</spanx> (audience) Claim を含むべきである (SHOULD).
            <spanx style="verb">iss</spanx> は OP の Issuer Identifier URL であるべきである (SHOULD).
            <spanx style="verb">aud</spanx> は RP の Client ID の値とするか, 値を含むべきである (SHOULD).
          </t>
          <!--
          <t>
            If signed, the UserInfo Response
            SHOULD contain the Claims
            <spanx style="verb">iss</spanx> (issuer)
            and <spanx style="verb">aud</spanx> (audience) as members.
            The <spanx style="verb">iss</spanx> value SHOULD be the OP's Issuer Identifier URL.
            The <spanx style="verb">aud</spanx> value SHOULD be or include the RP's Client ID value.
          </t>
          -->

          <figure>
            <preamble>
              以下に UserInfo Response の一例を示す:
            </preamble>
            <!--
            <preamble>The following is a non-normative example
            of a UserInfo Response:</preamble>
            -->

            <artwork><![CDATA[
  HTTP/1.1 200 OK
  Content-Type: application/json

  {
   "sub": "248289761001",
   "name": "Jane Doe",
   "given_name": "Jane",
   "family_name": "Doe",
   "preferred_username": "j.doe",
   "email": "janedoe@example.com",
   "picture": "http://example.com/janedoe/me.jpg"
  }
]]></artwork>
          </figure>
        </section>

        <section anchor="UserInfoError" title="UserInfo Error Response">

          <t>
            もし何らかのエラーが起こった場合, UserInfo Endpoint は <xref target="RFC6750">OAuth 2.0 Bearer Token Usage</xref> Section 3 に示す Error Response を返す.
            (RFC 6750 に関係のないエラーは, 適切な HTTP ステータスコードを用いて User Agent に返すこと)
          </t>
          <!--
          <t>
            When an error condition occurs, the UserInfo Endpoint returns
            an Error Response as defined in Section 3 of
            <xref target="RFC6750">OAuth 2.0 Bearer Token Usage</xref>.
            (HTTP errors unrelated to RFC 6750 are returned to the User Agent using the
            appropriate HTTP status code.)
          </t>
          -->

          <figure>
            <preamble>
              以下に UserInfo Error Response の一例を示す:
            </preamble>
            <!--
            <preamble>The following is a non-normative example
            of a UserInfo Error Response:</preamble>
            -->

            <artwork><![CDATA[
  HTTP/1.1 401 Unauthorized
  WWW-Authenticate: error="invalid_token",
    error_description="The Access Token expired"
]]></artwork>
          </figure>
        </section>

        <section anchor="UserInfoResponseValidation" title="UserInfo Response Validation">

          <t>
            Client は UserInfo Response を以下の手順で検証しなければならない (MUST).
          </t>
          <!--
          <t>
            The Client MUST validate the UserInfo Response as follows:
          </t>
          -->

          <t>
            <list style="numbers">
              <t>
                レスポンスを返した OP が意図した通りの OP であることを, <xref target="RFC6125">RFC 6125</xref> に従い TLS サーバー証明書チェックを通じて検証する.
              </t>

              <t>
                Client が Registration 時に <spanx style="verb">userinfo_encrypted_response_alg</spanx> パラメータを提供した場合, Registration 時に指定した鍵を使用して UserInfo Response を復号する.
              </t>

              <t>
                レスポンスが署名されている場合, Clientは <xref target="JWS">JWS</xref> に従って署名を検証すべきである (SHOULD).
              </t>
            </list>
          </t>
          <!--
          <t>
            <list style="numbers">
              <t>Verify that the OP that responded was the intended OP
              through a TLS server certificate check, per
              <xref target="RFC6125">RFC 6125</xref>.</t>

              <t>If the Client has provided a
              <spanx style="verb">userinfo_encrypted_response_alg</spanx>
              parameter during Registration, decrypt the UserInfo Response
              using the keys specified during Registration.</t>

              <t>If the response was signed, the Client SHOULD validate the
              signature according to <xref
              target="JWS">JWS</xref>.</t>
            </list>
          </t>
          -->
        </section>

      </section>

      <section anchor="ScopeClaims" title="Requesting Claims using Scope Values">

        <t>
          OpenID Connect Client は <xref target="RFC6749">OAuth 2.0</xref> Section 3.3 に従い, Access Token に要求されるアクセス権限を <spanx style="verb">scope</spanx> 値を通じて指定する.
          Access Tokens に紐づく scope は, そのトークンを使って OAuth 2.0 で保護されたエンドポイントにアクセスした際にどのようなリソースが得られるかを規定する.
          Protected Resource エンドポイントは, Access Token 要求時に指定された scope 値やその他のパラメータに基づき, 異なる動作をしたり, 異なる情報を返却したりしてもよい (MAY).
        </t>
        <!--
        <t>
          OpenID Connect Clients use <spanx style="verb">scope</spanx> values,
          as defined in Section 3.3 of <xref target="RFC6749">OAuth 2.0</xref>,
          to specify what
          access privileges are being requested for Access Tokens. The scopes associated
          with Access Tokens determine what resources will be available when they are
          used to access OAuth 2.0 protected endpoints.
          Protected Resource endpoints MAY perform different actions and
          return different information based on the scope values and other parameters
          used when requesting the presented Access Token.
        </t>
        -->
        <t>
          OpenID Connect では, scope は Claim Value として取得可能な情報セットを指定する為に利用できる.
          本仕様では OpenID Connect で用いられる scope についてのみ述べる.
        </t>
        <!--
        <t>
          For OpenID Connect, scopes
          can be used to request that specific sets of information
          be made available as Claim Values.
        </t>
        -->
        <t>
          Authorization Server は, 以下の scope によって要求される Claim を Voluntary Claim として扱う.
        </t>
        <!--
        <t>
          Claims requested by the following scopes are treated by Authorization Servers
          as Voluntary Claims.
        </t>
        -->

        <t>
          OpenID Connect は, Claim を要求する際に用いられる以下の <spanx style="verb">scope</spanx> 値を定義する:
        </t>
        <!--
        <t>
          OpenID Connect defines the following <spanx style="verb">scope</spanx> values
          that are used to request Claims:
        </t>
        -->
        <t>
          <list style="hanging">

            <t hangText="profile">
              <vspace/>
              OPTIONAL.
              この scope 値は, 以下に示す End-User のデフォルトプロフィール Claim へのアクセス要求に用いる.
              <!--
              OPTIONAL. This scope value
              requests access to the End-User's default profile Claims,
              which are:
              -->

              <spanx style="verb">name</spanx>,
              <spanx style="verb">family_name</spanx>,
              <spanx style="verb">given_name</spanx>,
              <spanx style="verb">middle_name</spanx>,
              <spanx style="verb">nickname</spanx>,
              <spanx style="verb">preferred_username</spanx>,
              <spanx style="verb">profile</spanx>,
              <spanx style="verb">picture</spanx>,
              <spanx style="verb">website</spanx>,
              <spanx style="verb">gender</spanx>,
              <spanx style="verb">birthdate</spanx>,
              <spanx style="verb">zoneinfo</spanx>,
              <spanx style="verb">locale</spanx>, and
              <spanx style="verb">updated_at</spanx>.
            </t>

            <t hangText="email">
              <vspace/>
              OPTIONAL.
              <spanx style="verb">email</spanx> および <spanx style="verb">email_verified</spanx> Claim へのアクセス要求に用いる.
              <!--
              OPTIONAL. This scope value requests access to
              the <spanx style="verb">email</spanx> and
              <spanx style="verb">email_verified</spanx> Claims.
              -->
            </t>

            <t hangText="address">
              <vspace/>
              OPTIONAL.
              <spanx style="verb">address</spanx> Claim へのアクセス要求に用いる.
              <!--
              OPTIONAL. This scope value requests access to
              the <spanx style="verb">address</spanx> Claim.
              -->
            </t>

            <t hangText="phone">
              <vspace/>
              OPTIONAL.
              <spanx style="verb">phone_number</spanx> および <spanx style="verb">phone_number_verified</spanx> Claim へのアクセス要求に用いる.
              <!--
              OPTIONAL. This scope value requests access to
              the <spanx style="verb">phone_number</spanx> and
              <spanx style="verb">phone_number_verified</spanx> Claims.
              -->
            </t>

          </list>
        </t>

        <t>
          複数の scope 値は, スペース区切りの大文字小文字を区別した ASCII scope 値のリストによって指定することができる (MAY).
        </t>
        <!--
        <t>Multiple scope values MAY be used by creating a space delimited, case
        sensitive list of ASCII scope values.</t>
        -->

        <t>
          処理の結果として Access Token が発行される <spanx style="verb">response_type</spanx> を使用したとき,
          <spanx style="verb">profile</spanx>,
          <spanx style="verb">email</spanx>,
          <spanx style="verb">address</spanx>, および
          <spanx style="verb">phone</spanx> scope 値により要求される Claim は, <xref target="UserInfoResponse"/> にある通り UserInfo Endpoint から返される.
          しかし,
          (<spanx style="verb">response_type</spanx> 値が <spanx style="verb">id_token</spanx> であるケースのように) Access Token が発行されない場合, 結果 Claim はID Token 内で返却される.
        </t>
        <!--
        <t>
          The Claims requested by the
          <spanx style="verb">profile</spanx>,
          <spanx style="verb">email</spanx>,
          <spanx style="verb">address</spanx>, and
          <spanx style="verb">phone</spanx> scope values
          are returned from the UserInfo Endpoint,
          as described in <xref target="UserInfoResponse"/>,
          when a <spanx style="verb">response_type</spanx> value is used
          that results in an Access Token being issued.
          However, when no Access Token is issued
          (which is the case for the <spanx style="verb">response_type</spanx>
          value <spanx style="verb">id_token</spanx>),
          the resulting Claims are returned in the ID Token.
        </t>
        -->

        <t>
          End-User が OpenID Provider に対して RP に要求された情報の一部もしくは全ての提供を拒否することもある.
          End-User に要求する情報を最小化するために, RP は UserInfo Endpoint で提供される情報の一部のみをリクエストすることもできる.
        </t>
        <!--
        <t>In some cases, the End-User will be given the option to
        have the OpenID Provider decline to provide some or all
        information requested by RPs.
        To minimize the amount of information that the End-User is being asked
        to disclose, an RP can elect to
        only request a subset of the information available from the
        UserInfo Endpoint.</t>
        -->

        <t>
          <figure>
            <preamble>
              以下に符号化されていない <spanx style="verb">scope</spanx> リクエスト例を示す.
            </preamble>
            <!--
            <preamble>
              The following is a non-normative example of an unencoded
              <spanx style="verb">scope</spanx> request:
            </preamble>
            -->

            <artwork><![CDATA[
  scope=openid profile email phone
]]></artwork>
          </figure>
        </t>
      </section>

      <section anchor="ClaimsParameter" title='Requesting Claims using the "claims" Request Parameter'>

        <t>
          OpenID Connect では, 個々の Claim の要求や,
          要求された Claim に適用されるパラメータの指定を可能とするために,
          以下の Authorization Request パラメータを定義する:
          <!--
          OpenID Connect defines the following Authorization Request parameter
          to enable requesting individual Claims
          and specifying parameters that apply to the requested Claims:
          -->

          <list style="hanging">

            <t hangText="claims">
              <vspace/>
              OPTIONAL.
              当パラメータは, 特定の Claim の返却を要求するのに用いられる.
              値は要求する Claim をリスト化した JSON オブジェクトである.
              <!--
              OPTIONAL.
              This parameter is used to request that specific Claims be returned.
              The value is a JSON object listing the requested Claims.
              -->
            </t>
          </list>
        </t>
        <t>
          <spanx style="verb">claims</spanx> Authentication Request パラメータは,
          特定の Claim を UserInfo Endpoint から, かつ/または ID Token 内で, 返却することを要求する.
          これは要求する Claim のリストを含む JSON オブジェクトとして表される.
          要求する Claim のプロパティが指定されていてもよい (MAY).
        </t>
        <!--
        <t>
          The <spanx style="verb">claims</spanx> Authentication Request
          parameter requests that specific Claims
          be returned from the UserInfo Endpoint and/or in the ID Token.
          It is represented as a JSON object containing lists of Claims being requested
          from these locations.
          Properties of the Claims being requested MAY also be specified.
        </t>
        -->
        <t>
          <spanx style="verb">claims</spanx> パラメータのサポートは任意である (OPTIONAL).
          当パラメータをサポートしない OP に対して RP が当パラメータを使用したとき,
          OP は 適切と思われるヒューリスティックな方法を用いて, RP と End-User にとって有益と思われる Claim のセットを返すべきである (SHOULD).
          Discovery で得られる <spanx style="verb">claims_parameter_supported</spanx> は, OP が当パラメータをサポートしているかどうかを示す.
        </t>
        <!--
        <t>
          Support for the <spanx style="verb">claims</spanx> parameter is OPTIONAL.
          Should an OP not support this parameter and an RP uses it,
          the OP SHOULD return a set of Claims to the RP that it believes would
          be useful to the RP and the End-User using whatever heuristics it
          believes are appropriate.
          The <spanx style="verb">claims_parameter_supported</spanx>
          Discovery result indicates whether the OP supports this parameter.
        </t>
        -->
        <t>
          <spanx style="verb">claims</spanx> パラメータ値は, OAuth 2.0 要求の中で, UTF-8 でエンコードされた JSON として表される
          (最終的には OAuth パラメータとして受け渡されるときに form-urlencoded される).
          Request Object 値として使用される際は,
          <xref target="RequestObject"/> により,
          JSON が <spanx style="verb">claims</spanx> メンバーの値として使用される.
        </t>
        <!--
        <t>
          The <spanx style="verb">claims</spanx> parameter value is represented
          in an OAuth 2.0 request as UTF-8 encoded JSON
          (which ends up being form-urlencoded when passed as an OAuth parameter).
          When used in a Request Object value, per <xref target="RequestObject"/>,
          the JSON is used as the value of the
          <spanx style="verb">claims</spanx> member.
        </t>
        -->
        <t>
          Claim 要求 JSON オブジェクトのトップレベルメンバーは以下の通り:
          <!--
          The top-level members of the Claims request JSON object are:
          -->

          <list style="hanging">
            <t hangText="userinfo">
              <vspace/>
              OPTIONAL.
              UserInfo Endpoint へ返却を要求する個々の Claim のリストを示す.
              当メンバーが存在した場合,
              <spanx style="verb">scope</spanx> 値で要求された Claim に加え,
              当メンバーでリストされた Claim も返却される.
              当メンバーが存在しなかった場合,
              <spanx style="verb">scope</spanx> 値で要求された Claim のみが返却される.
              <!--
              OPTIONAL.
              Requests that the listed individual Claims be returned
              from the UserInfo Endpoint.
              If present, the listed Claims are being requested to be added to
              any Claims that are being requested using
              <spanx style="verb">scope</spanx> values.
              If not present, the Claims being requested from the UserInfo Endpoint
              are only those requested using  <spanx style="verb">scope</spanx> values.
              -->
            </t>
            <t>
              <spanx style="verb">userinfo</spanx> メンバーを指定する際は,
              UserInfo Endpoint を使用するために,
              <spanx style="verb">response_type</spanx> に対し,
              Access Token を Client に発行するタイプの値を指定しなければならない (MUST).
              <!--
              When the <spanx style="verb">userinfo</spanx> member is used,
              the request MUST also use a <spanx style="verb">response_type</spanx>
              value that results in an Access Token being issued to the Client
              for use at the UserInfo Endpoint.
              -->
            </t>

            <t hangText="id_token">
              <vspace/>
              OPTIONAL.
              ID Token 内に格納して返却を要求する個々の Claim のリストを示す.
              当メンバーが存在した場合,
              デフォルトの Claim に加え,
              当メンバーでリストされた Claim も返却される.
              当メンバーが存在しなかった場合,
              デフォルトの Claim のみが返却される.
              デフォルトの Claim 等の ID Token の定義については <xref target="IDToken"/>を,
              フロー毎の ID Token 要件については Section
              <xref target="CodeIDToken" format="counter"/>,
              <xref target="ImplicitIDToken" format="counter"/>,
              <xref target="HybridIDToken" format="counter"/>,
              <xref target="HybridIDToken2" format="counter"/>
              を参照すること.
              <!--
              OPTIONAL.
              Requests that the listed individual Claims be returned
              in the ID Token.
              If present, the listed Claims are being requested to be added to
              the default Claims in the ID Token.
              If not present, the default ID Token Claims are requested,
              as per the ID Token definition in <xref target="IDToken"/>
              and per the additional per-flow ID Token requirements in Sections
              <xref target="CodeIDToken" format="counter"/>,
              <xref target="ImplicitIDToken" format="counter"/>,
              <xref target="HybridIDToken" format="counter"/>,
              and <xref target="HybridIDToken2" format="counter"/>.
              -->
            </t>

          </list>

          上記以外のメンバーが存在してもよい (MAY).
          認識できないメンバーが使用された場合は無視しなければならない (MUST).
          <!--
          Other members MAY be present.
          Any members used that are not understood MUST be ignored.
          -->
        </t>

        <t>
          <figure>
            <preamble>Claim 要求の例を以下に示す:</preamble>
            <!--
            <preamble>An example Claims request is as follows:</preamble>
            -->

            <artwork><![CDATA[
  {
   "userinfo":
    {
     "given_name": {"essential": true},
     "nickname": null,
     "email": {"essential": true},
     "email_verified": {"essential": true},
     "picture": null,
     "http://example.info/claims/groups": null
    },
   "id_token":
    {
     "auth_time": {"essential": true},
     "acr": {"values": ["urn:mace:incommon:iap:silver"] }
    }
  }
]]></artwork>
          </figure>
          <xref target="StandardClaims"/> で定義されている標準セットには含まれていない Claim である (example) <spanx style="verb">http://example.info/claims/groups</spanx> Claim が要求されていることに注目すること.
          <spanx style="verb">claims</spanx> パラメータの使用は, 標準セットに含まれていない Claim を要求する唯一の方法である.
          また, <spanx style="verb">scope</spanx> 値では指定することが出来ない標準の Claim 同士の特定の組み合わせを要求する唯一の方法でもある.
          <!--
          Note that a Claim that is not in the standard set defined in
          <xref target="StandardClaims"/>, the (example)
          <spanx style="verb">http://example.info/claims/groups</spanx> Claim,
          is being requested.
          Using the <spanx style="verb">claims</spanx> parameter is the only
          way to request Claims outside the standard set.
          It is also the only way to request specific combinations of the
          standard Claims that cannot be specified using scope values.
          -->
        </t>

        <section anchor="IndividualClaimsRequests" title="Individual Claims Requests">
          <t>
            <spanx style="verb">claims</spanx> request の <spanx style="verb">userinfo</spanx> メンバーと <spanx style="verb">id_token</spanx> メンバーは, 要求される個別の Claim の名前をメンバー名とする JSON オブジェクトである.
            メンバーの値は以下のいずれかの値でなければならない (MUST).
            <!--
            The <spanx style="verb">userinfo</spanx> and
            <spanx style="verb">id_token</spanx> members of the
            <spanx style="verb">claims</spanx> request both are JSON objects
            with the names of the individual Claims being requested as the member names.
            The member values MUST be one of the following:
            -->

            <list style="hanging">
              <t hangText="null">
                <vspace/>
                この Claim はデフォルトの形式で要求されていることを示す.
                具体的に言うと, Voluntary Claim である.
                例えば, Claim request:
                <!--
                Indicates that this Claim is being requested in the default manner.
                In particular, this is a Voluntary Claim.
                For instance, the Claim request:
                -->

                <figure>
                  <artwork><![CDATA[
  "given_name": null
]]></artwork>
                </figure>

                は <spanx style="verb">given_name</spanx> Claim をデフォルトの形式で要求する.
                <!--
                requests the <spanx style="verb">given_name</spanx> Claim
                in the default manner.
                -->
              </t>
              <t hangText="JSON Object">
                <vspace/>
                要求されている Claim の追加情報を提供するために使用する.
                本仕様は下記のメンバーを定義する:
                <!--
                Used to provide additional information about the Claim being
                requested. This specification defines the following members:
                -->

                <list style="hanging">
                  <t hangText="essential">
                    <vspace/>
                    OPTIONAL.
                    要求されている Claim が Essential Claim であるかどうかを示す.
                    値が <spanx style="verb">true</spanx> である場合, Claim が Essential Claim であることを示す.
                    例えば, Claim request:
                    <!--
                    OPTIONAL.
                    Indicates whether the Claim being requested is an Essential Claim.
                    If the value is <spanx style="verb">true</spanx>,
                    this indicates that the Claim is an Essential Claim.
                    For instance, the Claim request:
                    -->

                    <figure>
                      <artwork><![CDATA[
  "auth_time": {"essential": true}
]]></artwork>
                    </figure>

                    は <spanx style="verb">auth_time</spanx> Claim の値を返すために Essential であることを指定するために使われる.
                    <!--
                    can be used to specify that it is Essential to return an
                    <spanx style="verb">auth_time</spanx> Claim Value.
                    -->
                  </t>
                  <t>
                    <spanx style="verb">false</spanx> である場合, Voluntary Claim であることを示す.
                    デフォルトは <spanx style="verb">false</spanx> である.
                  </t>
                  <!--
                  <t>
                    If the value is <spanx style="verb">false</spanx>,
                    it indicates that it is a Voluntary Claim.
                    The default is <spanx style="verb">false</spanx>.
                  </t>
                  -->
                  <t>
                    Essential Claim として Claim を要求することで, RP は End-User に対して, End-User が要求する処理に際した円滑な認可処理にこれらの Claim の開示が必要であることを示すことができる.
                    End-User が認可しなかったりそもそも情報が存在しないなどの理由で Claim が利用できない場合であっても, 特定の Claim の記述で特別に指定されない限り, Claim が Essential か Voluntary であるかどうかに関わらず Authorization Server はエラーを生成してはならない (MUST NOT) ことに注意.
                  </t>
                  <!--
                  <t>
                    By requesting Claims as Essential Claims,
                    the RP indicates to the End-User
                    that releasing these Claims will ensure a smooth authorization
                    for the specific task requested by the End-User.
                    Note that even if the Claims are not available because
                    the End-User did not authorize their release or they are not present,
                    the Authorization Server MUST NOT generate an error when
                    Claims are not returned, whether they are Essential or Voluntary,
                    unless otherwise specified in the description of the specific claim.
                  </t>
                  -->

                  <t hangText="value">
                    <vspace/>
                    OPTIONAL.
                    特定の値とともに返される Claim を要求する.
                    例えば Claim request:
                    <!--
                    OPTIONAL.
                    Requests that the Claim be returned with a particular value.
                    For instance the Claim request:
                    -->

                    <figure>
                      <artwork><![CDATA[
  "sub": {"value": "248289761001"}
]]></artwork>
                    </figure>

                    は要求が Subject Identifier <spanx style="verb">248289761001</spanx> を持つ End-User に適用されることを指定するために使われる.
                    <!--
                    can be used to specify that the request apply to the End-User
                    with Subject Identifier <spanx style="verb">248289761001</spanx>.
                    -->
                  </t>
                  <t>
                    <spanx style="verb">value</spanx> メンバーの値は要求されている Claim に対して有効な値でなければならない (MUST).
                    各 Claim の定義においては, 当該 Claim を要求する際の <spanx style="verb">value</spanx> 修飾子の利用方法や, そもそも利用すべきかどうかを定めることもできる.
                  </t>
                  <!--
                  <t>
                    The value of the <spanx style="verb">value</spanx> member
                    MUST be a valid value for the Claim being requested.
                    Definitions of individual Claims can include requirements on
                    how and whether the <spanx style="verb">value</spanx>
                    qualifier is to be used when requesting that Claim.
                  </t>
                  -->
                  <t hangText="values">
                    <vspace/>
                    OPTIONAL.
                    優先順になっている値の集合の内のいずれかで返される Claim を要求する.
                    例えば, Claim request:
                    <!--
                    OPTIONAL.
                    Requests that the Claim be returned with one of a set of values,
                    with the values appearing in order of preference.
                    For instance the Claim request:
                    -->

                    <figure>
                      <artwork><![CDATA[
  "acr": {"essential": true,
          "values": ["urn:mace:incommon:iap:silver",
                     "urn:mace:incommon:iap:bronze"]}
]]></artwork>
                    </figure>

                    は <spanx style="verb">urn:mace:incommon:iap:silver</spanx> か <spanx style="verb">urn:mace:incommon:iap:bronze</spanx> のいずれかの <spanx style="verb">acr</spanx> Claim が Essential であることを指定する.
                    <!--
                    specifies that it is Essential that the <spanx style="verb">acr</spanx>
                    Claim be returned with either the value
                    <spanx style="verb">urn:mace:incommon:iap:silver</spanx> or
                    <spanx style="verb">urn:mace:incommon:iap:bronze</spanx>.
                    -->
                  </t>
                  <t>
                    <spanx style="verb">values</spanx> メンバー配列の値は要求されている Claim に対して有効な値でなければならない (MUST).
                    各 Claim の定義においては, 当該 Claim を要求する際の <spanx style="verb">values</spanx> 修飾子の利用方法や, そもそも利用すべきかどうかを定めることもできる.
                  </t>
                  <!--
                  <t>
                    The values in the <spanx style="verb">values</spanx> member array
                    MUST be valid values for the Claim being requested.
                    Definitions of individual Claims can include requirements on
                    how and whether the <spanx style="verb">values</spanx>
                    qualifier is to be used when requesting that Claim.
                  </t>
                  -->
                </list>

                要求される Claim の追加情報を提供するために他のメンバーを定義してもよい (MAY).
                解釈不可能なメンバーは全て無視すること (MUST).
                <!--
                Other members MAY be defined to provide additional
                information about the requested Claims.
                Any members used that are not understood MUST be ignored.
                -->
              </t>
            </list>
          </t>
          <t>
            <spanx style="verb">claims</spanx> リクエストパラメータがサポートされている場合, Claim を要求する scope の値は, <xref target="ScopeClaims"/> で述べられているように, 効果的に簡略化された個別の Claims の集合を要求するための方法となることに注意.
            例えば, <spanx style="verb">openid email</spanx> scope 値と Access Token を返す <spanx style="verb">response_type</spanx> を使用することは <spanx style="verb">openid</spanx> scope 値と個別の Claims に対する下記のリクエストを使用することと同じである.
            <!--
            Note that when the <spanx style="verb">claims</spanx> request parameter
            is supported, the scope values that request Claims, as defined in
            <xref target="ScopeClaims"/>, are effectively shorthand methods for
            requesting sets of individual Claims.
            For example, using the scope value <spanx style="verb">openid email</spanx>
            and a <spanx style="verb">response_type</spanx> that returns an Access Token
            is equivalent to using the scope value <spanx style="verb">openid</spanx>
            and the following request for individual Claims.
            -->

            <figure>
              <preamble>
                下記のリクエストは <spanx style="verb">email</spanx> scope 値を使用した場合と同じ結果となる:
              </preamble>
              <!--
              <preamble>
                Equivalent of using the <spanx style="verb">email</spanx> scope value:
              </preamble>
              -->

              <artwork><![CDATA[
  {
   "userinfo":
    {
     "email": null,
     "email_verified": null
    }
  }
]]></artwork>
            </figure>
          </t>

          <section anchor="acrSemantics" title='Requesting the "acr" Claim'>

            <t>
              <spanx style="verb">acr</spanx> Claim が特定の Authentication Context Class Reference 値と <spanx style="verb">claims</spanx> パラメータをサポートする実装を要求する <spanx style="verb">values</spanx> パラメータとともに ID Token の Essential Claim として要求される場合, Authorization Server は要求された値のいずれかに一致する <spanx style="verb">acr</spanx> Claim を返さなければいけない (MUST).
              Authorization Server は要求を満たす追加の要素を再認証するために End-User にたずねてもよい (MAY).
              この Claim が Essential Claim であり要求を満たすことが出来ない場合, Authorization Server は認証の試行に失敗したものとして扱わなければいけない (MUST).
            </t>
            <!--
            <t>
              If the <spanx style="verb">acr</spanx> Claim is requested
              as an Essential Claim for the ID Token
              with a <spanx style="verb">values</spanx> parameter requesting
              specific Authentication Context Class Reference values and
              the implementation supports the <spanx style="verb">claims</spanx> parameter,
              the Authorization Server MUST return an <spanx style="verb">acr</spanx>
              Claim Value that matches one of the requested values.
              The Authorization Server MAY ask the End-User to re-authenticate
              with additional factors
              to meet this requirement. If this is an Essential Claim and the
              requirement cannot be met, then the Authorization Server MUST
              treat that outcome as a failed authentication attempt.
            </t>
            -->
            <t>
              RP は <spanx style="verb">acr_values</spanx> request パラメータを使用して, もしくは個別の <spanx style="verb">acr</spanx> Claim リクエストで "essential": true を含まないことにより Voluntary Claim として <spanx style="verb">acr</spanx> Claim を要求してもよい (MAY).
              Claim が Essential でなく, 要求された値が提供できない場合, Authorization Server は <spanx style="verb">acr</spanx> Claim の値としてセッションの現在の <spanx style="verb">acr</spanx> を返すべきである (SHOULD).
              Claim が Essential でない場合, Authorization Server はレスポンスにおいてこの Claim を提供する必要はない.
            </t>
            <!--
            <t>
              Note that the RP MAY request the <spanx style="verb">acr</spanx>
              Claim as a Voluntary Claim
              by using the <spanx style="verb">acr_values</spanx> request parameter
              or by not including "essential": true in an individual
              <spanx style="verb">acr</spanx> Claim request.
              If the Claim is not Essential and a requested value
              cannot be provided, the Authorization Server SHOULD return
              the session's current <spanx style="verb">acr</spanx> as
              the value of the <spanx style="verb">acr</spanx> Claim.
              If the Claim is not Essential, the Authorization Server is not required to
              provide this Claim in its response.
            </t>
            -->
            <t>
              Clientが <spanx style="verb">acr_values</spanx> リクエストパラメータと ID Token のために要求する特定の値をリストにした個別の <spanx style="verb">acr</spanx> Claim リクエストの両方を用いて <spanx style="verb">acr</spanx> Claim を要求する場合, その結果の振る舞いは規定されていない.
            </t>
            <!--
            <t>
              If the client requests the <spanx style="verb">acr</spanx> Claim using
              both the <spanx style="verb">acr_values</spanx> request parameter and
              an individual <spanx style="verb">acr</spanx> Claim request for the ID Token
              listing specific requested values,
              the resulting behavior is unspecified.
            </t>
            -->
          </section>

        </section>

        <section anchor="IndividualClaimsLanguages" title="Languages and Scripts for Individual Claims">
          <t>
            <xref target="ClaimsLanguagesAndScripts"/> で述べられているように, Human-readable な Claim Value およびそれらへの参照は, 複数言語および複数文字種で表現することができる (MAY).
            個別の Claim の要求を行う際に, 特定の Claim に対して <xref target="ClaimsLanguagesAndScripts"/> で指定された Claim 名の構文を用いて Claim 要求に <spanx style="verb">#</spanx> で区切られた <xref target="RFC5646">BCP47</xref> 言語タグ付きの Claim 名を含めることで, 当該 Claim に対して言語や文字種を指定して要求することができる (MAY).
            例えば, 日本語のカタカナでの姓名は Claim　名 <spanx style="verb">family_name#ja-Kana-JP</spanx> を用いて要求することができ, 日本語の漢字表記の姓名は Claim　名 <spanx style="verb">family_name#ja-Hani-JP</spanx> を用いて要求することができる.
            ドイツ語の Web サイトは Claim　名 <spanx style="verb">website#de</spanx> で要求することができる.
          </t>
          <!--
          <t>
            As described in <xref target="ClaimsLanguagesAndScripts"/>,
            human-readable Claim Values and Claim Values that reference human-readable values
            MAY be represented in multiple languages and scripts.
            Within a request for individual Claims, requested languages and scripts
            for particular Claims MAY be requested by including Claim Names
            that contain <spanx style="verb">#</spanx>-separated
            <xref target="RFC5646">BCP47</xref> language tags
            in the Claims request, using the Claim Name syntax specified in
            <xref target="ClaimsLanguagesAndScripts"/>.
            For example, a Family Name in Katakana in Japanese
            can be requested using the Claim Name
            <spanx style="verb">family_name#ja-Kana-JP</spanx>
            and a Kanji representation of the Family Name in Japanese
            can be requested using the Claim Name
            <spanx style="verb">family_name#ja-Hani-JP</spanx>.
            A German-language Web site can be requested with the Claim Name
            <spanx style="verb">website#de</spanx>.
          </t>
          -->
          <t>
            OP が保持していない言語および文字種での Human-readable な Claim の要求を受け取った場合, 返される Claim のいずれかのバージョンは Claim 名に要求された言語および文字種を使わず言語タグを使用するべきである (SHOULD).
          </t>
          <!--
          <t>
            If an OP receives a request for human-readable Claims in a language and script
            that it doesn't have, any versions of those Claims returned that don't use
            the requested language and script SHOULD use a language tag in the Claim Name.
          </t>
          -->
        </section>

      </section>

      <section anchor="ClaimTypes" title="Claim Types">
        <t>
          本仕様では以下の3つの Claim Value 表現形式を定義する.
        </t>
        <!--
        <t>
          Three representations of Claim Values are defined by this specification:
        </t>
        -->
        <t>
          <list style="hanging">
            <t hangText="Normal Claims">
              <vspace/>
              OpenID Provider によって直接アサートされた Claim.
              <!--
              Claims that are directly asserted by
              the OpenID Provider.
              -->
            </t>

            <t hangText="Aggregated Claims">
              <vspace/>
              OpenID Provider 以外の Claims Provider によってアサートされた Claim であるが, OpenID Provider から返却される Claim.
              <!--
              Claims that are asserted by a
              Claims Provider other than the OpenID Provider but are returned
              by OpenID Provider.
              -->
            </t>

            <t hangText="Distributed Claims">
              <vspace/>
              OpenID Provider 以外の Claims Provider によってアサートされた Claim であり, OpenID Provider からはその参照だけが返却される Claim.
              <!--
              Claims that are asserted by a
              Claims Provider other than the OpenID Provider but are returned
              as references by the OpenID Provider.
              -->
            </t>
          </list>
        </t>
        <t>
          Normal Claims はサポートしなければならない (MUST).
          Aggregated Claims と Distributed Claims のサポートは任意である (OPTIONAL).
        </t>
        <!--
        <t>
          Normal Claims MUST be supported.
          Support for Aggregated Claims and Distributed Claims is OPTIONAL.
        </t>
        -->

        <section anchor="NormalClaims" title="Normal Claims">

          <t>
            Normal Claims は JSON オブジェクトの中にメンバーとして表記される.
            Claim 名はそのメンバー名で, Claim Value はそのメンバーの値である.
          </t>
          <!--
          <t>Normal Claims are represented as members in a JSON object. The
          Claim Name is the member name and the Claim Value is the member
          value.</t>
          -->

          <t>
            以下は Normal Claims を含んでいるレスポンスの一例である:
          </t>
          <!--
          <t>The following is a non-normative response containing Normal Claims:</t>
          -->

          <figure>
            <artwork><![CDATA[
  {
   "name": "Jane Doe",
   "given_name": "Jane",
   "family_name": "Doe",
   "email": "janedoe@example.com",
   "picture": "http://example.com/janedoe/me.jpg"
  }
]]></artwork>
          </figure>

        </section>

        <section anchor="AggregatedDistributedClaims" title="Aggregated and Distributed Claims">
          <t>
            Aggregated と Distributed Claims は, Claims を含む JSON オブジェクト中で, <spanx style="verb">_claim_names</spanx> および <spanx style="verb">_claim_sources</spanx> という特殊なメンバーを用いて表記される.
          </t>
          <!--
          <t>Aggregated and distributed Claims are represented by
          using special <spanx style="verb">_claim_names</spanx> and
          <spanx style="verb">_claim_sources</spanx> members
          of the JSON object containing the Claims.</t>
          -->

          <t>
            <list style="hanging">
              <t hangText="_claim_names">
                <vspace/>
                Aggregated Claims および Distributed Claims として返される Claim Name をメンバーとして含む JSON オブジェクトである.
                そのメンバーの値は, 実際の Claim Value が取り出せる
                <spanx style="verb">_claim_sources</spanx> メンバーの中にあるメンバー名への参照である.
                <!--
                JSON object whose member
                names are the Claim Names for the Aggregated and Distributed
                Claims. The member values are references to the member names
                in the <spanx style="verb">_claim_sources</spanx> member from which
                the actual Claim Values can be retrieved.
                -->
              </t>

              <t hangText="_claim_sources">
                <vspace/>
                <spanx style="verb">_claim_names</spanx> メンバー値によって
                参照されるメンバー名を持つ JSON オブジェクトである.
                メンバー値は Aggregated Claims のセットもしくは Distributed Claims の参照場所を含む.
                Aggregated Claims か Distributed Claims かに応じて, メンバー値は以下のフォーマットの1つを持つことができる:
                <!--
                JSON object whose
                member names are referenced by the member values of the
                <spanx style="verb">_claim_names</spanx> member. The member values
                contain sets of Aggregated Claims or reference locations for
                Distributed Claims. The member values can have one of the
                following formats depending on whether it is providing
                Aggregated or Distributed Claims:
                -->

                <list style="hanging">

                  <t hangText="Aggregated Claims">
                    <vspace/>
                    <spanx style="verb">JWT</spanx> を値として持つ <spanx style="verb">JWT</spanx> メンバーを含んだ JSON オブジェクトでなければならない (MUST).
                    当該 JWT は <spanx style="verb">_claim_sources</spanx> メンバーへの参照となった <spanx style="verb">_claim_names</spanx> オブジェクトに含まれる, 全 Claim を含まなければならない (MUST).
                    他のメンバーが存在してもよい (MAY).
                    理解できないメンバーは無視しなければならない (MUST).
                    <!--
                    JSON object that MUST
                    contain the <spanx style="verb">JWT</spanx> member whose value is a <xref
                    target="JWT">JWT</xref> that MUST contain all the Claims
                    in the <spanx style="verb">_claim_names</spanx> object that references the
                    corresponding <spanx style="verb">_claim_sources</spanx> member.
                    Other members MAY be present.
                    Any members used that are not understood MUST be ignored.
                    -->

                    <list style="hanging">
                      <t hangText="JWT">
                        <vspace/>
                        REQUIRED.
                        Claim Value を含んでいる JWT.
                        <!--
                        REQUIRED.
                        JWT containing Claim Values.
                        -->
                      </t>
                    </list>
                  </t>
                  <t>
                    この JWT は, <spanx style="verb">sub</spanx> 値が Claims Provider に置ける End-User の識別子でない限り, <spanx style="verb">sub</spanx> (subject) Claim を含むべきでない (SHOULD NOT).
                    (また OpenID Provider あるいは他の Party が利用するために sub 値を提供すべきでもない)
                    一般的にこれは <spanx style="verb">sub</spanx> Claim が提供されるべきではないということを意味している.
                  </t>
                  <!--
                  <t>
                    The JWT SHOULD NOT contain a <spanx style="verb">sub</spanx> (subject)
                    Claim unless its value is an identifier for the End-User at
                    the Claims Provider (and not for the OpenID Provider or another party);
                    this typically means that a <spanx style="verb">sub</spanx> Claim
                    SHOULD NOT be provided.
                  </t>
                  -->

                  <t hangText="Distributed Claims">
                    <vspace/>
                    以下のメンバーと値を含む JSON オブジェクトである:
                    <!--
                    JSON object that
                    contains the following members and values:
                    -->

                    <list style="hanging">
                      <t hangText="endpoint">
                        <vspace/>
                        REQUIRED.
                        関連した Claim を取り出すことができる OAuth 2.0 リソースエンドポイント.
                        エンドポイント URL は JWT として Claim を返却しなければならない (MUST).
                        <!--
                        REQUIRED.
                        OAuth 2.0 resource endpoint from which the associated
                        Claim can be retrieved. The endpoint URL MUST return
                        the Claim as a JWT.
                        -->
                      </t>

                      <t hangText="access_token">
                        <vspace/>
                        OPTIONAL.
                        <xref target="RFC6750">OAuth 2.0 Bearer Token Usage</xref> プロトコルに従ってエンドポイント URL から Claim を取得する際に利用する Access Token.
                        Access Token は Authorization Request ヘッダーフィールドを用いて送信しなければならず (MUST), Claims Provider はこの方法をサポートしなければならない (MUST).
                        Access Token が使用可能でない場合, RP は out-of-band な方法で Access Token を取得したり, 事前に Claims Provider との間で合意した Access Token を使用する必要があることもある (MAY).
                        Claims Provider は End-User を再認証したり RP を再認可することもある (MAY).
                        <!--
                        OPTIONAL.
                        Access Token
                        enabling retrieval of the Claims from the endpoint URL
                        by using the <xref target="RFC6750">OAuth 2.0 Bearer Token Usage</xref>
                        protocol. Claims SHOULD be requested using
                        the Authorization Request header field and Claims Providers
                        MUST support this method. If the Access Token
                        is not available, RPs MAY need to retrieve the
                        Access Token out of band or use an Access Token
                        that was pre-negotiated between the Claims Provider and
                        RP, or the Claims Provider MAY reauthenticate the
                        End-User and/or reauthorize the RP.
                        -->
                      </t>
                    </list>
                  </t>
                  <t>
                    この JWT は, <spanx style="verb">sub</spanx> 値が Claims Provider に置ける End-User の識別子でない限り, <spanx style="verb">sub</spanx> (subject) Claim を含むべきでない (SHOULD NOT).
                    (また OpenID Provider あるいは他の Party が利用するために sub 値を提供すべきでもない)
                    一般的にこれは <spanx style="verb">sub</spanx> Claim が提供されるべきではないということを意味している.
                  </t>
                  <!--
                  <t>
                    A <spanx style="verb">sub</spanx> (subject) Claim SHOULD NOT
                    be returned from the Claims Provider
                    unless its value is an identifier for the End-User at
                    the Claims Provider (and not for the OpenID Provider or another party);
                    this typically means that a <spanx style="verb">sub</spanx> Claim
                    SHOULD NOT be provided.
                  </t>
                  -->
                </list>
              </t>
            </list>
          </t>
          <t>
            一般的に, どのような時に Aggregated Claims と Distributed Claims の利用が適切かは, OP 次第である.
            場合によっては, どの Claim Type をいつ使うべきかについて, RP と OP の間で out-of-band な方法で合意されることもある.
          </t>
          <!--
          <t>
            In general, it is up to the OP when it is appropriate to use
            Aggregated Claims and Distributed Claims.
            In some cases, information about when to use what Claim Types
            might be negotiated out of band between RPs and OPs.
          </t>
          -->

          <section anchor="AggregatedExample" title="Example of Aggregated Claims">

            <t>
              以下の例では, Claims Provider A からの Claim と OpenID Provider によって保有される他の Claims が同時に返却されている.
              また Claims Provider A からの Claim は, Aggregated Claims となっている.
            </t>
            <!--
            <t>
              In this non-normative example, Claims from Claims Provider A
              are combined with other Claims held by the OpenID provider, with the
              Claims from Claims Provider A being returned as Aggregated Claims.
            </t>
            -->
            <t>
              <figure>
                <preamble>
                  以下の Claim は Claims Provider A によって発行された Jane Doe についての Claims である:
                </preamble>
                <!--
                <preamble>
                  In this example, these Claims about Jane Doe have been issued by
                  Claims Provider A:
                </preamble>
                -->
                <artwork><![CDATA[
  {
   "address": {
     "street_address": "1234 Hollywood Blvd.",
     "locality": "Los Angeles",
     "region": "CA",
     "postal_code": "90210",
     "country": "US"},
   "phone_number": "+1 (310) 123-4567"
  }
]]></artwork>
              </figure>
            </t>

            <t>
              Claims Provider A は JSON Claims に署名し, Signed JWT でそれらを表現する:
              jwt_header.jwt_part2.jwt_part3.
              この JWT は OpenID Provider によって使用される.
            </t>
            <!--
            <t>
              Claims Provider A signs the JSON Claims, representing them in a signed JWT:
              jwt_header.jwt_part2.jwt_part3.
              It is this JWT that is used by the OpenID Provider.
            </t>
            -->
            <t>
              <figure>
                <preamble>
                  この例では, Claims Provider A からの Jane Doe の Aggregated Claims を含んだ JWT が他の Normal Claims と組み合わせられ, 以下の Claims セットとして返却される:
                </preamble>
                <!--
                <preamble>
                  In this example, this JWT containing Jane Doe's Aggregated Claims
                  from Claims Provider A is combined with other Normal Claims,
                  and returned as the following set of Claims:
                </preamble>
                -->
                <artwork><![CDATA[
  {
   "name": "Jane Doe",
   "given_name": "Jane",
   "family_name": "Doe",
   "birthdate": "0000-03-22",
   "eye_color": "blue",
   "email": "janedoe@example.com",
   "_claim_names": {
     "address": "src1",
     "phone_number": "src1"
   },
   "_claim_sources": {
     "src1": {"JWT": "jwt_header.jwt_part2.jwt_part3"}
   }
  }
]]></artwork>
              </figure>
            </t>

          </section>

          <section anchor="DistributedExample" title="Example of Distributed Claims">

            <t>
              以下の例では, OpenID Provider は Claims Provider B と C が保有する Claim を Normal Claims と合わせて返却する.
              B と C が保有する Claim は Distributed Claims として参照を含めた形で提供される.
            </t>
            <!--
            <t>
              In this non-normative example, the OpenID Provider combines
              Normal Claims that it holds with references to Claims held by
              two different Claims Providers, B and C, incorporating references
              to some of the Claims held by B and C as Distributed Claims.
            </t>
            -->
            <t>
              <figure>
                <preamble>
                  以下の Claim は Claims Provider B (Jane Doe's bank) が保持する Jane Doe についての Claims である:
                </preamble>
                <!--
                <preamble>
                  In this example, these Claims about Jane Doe are held by
                  Claims Provider B (Jane Doe's bank):
                </preamble>
                -->
                <artwork><![CDATA[
  {
   "shipping_address": {
     "street_address": "1234 Hollywood Blvd.",
     "locality": "Los Angeles",
     "region": "CA",
     "postal_code": "90210",
     "country": "US"},
   "payment_info": "Some_Card 1234 5678 9012 3456",
   "phone_number": "+1 (310) 123-4567"
  }
]]></artwork>
              </figure>
            </t>

            <t>
              <figure>
                <preamble>
                  また以下は, Claims Provider C (a credit agency) が保持する Jane Doe についての Claims である:
                </preamble>
                <!--
                <preamble>
                  Also in this example, this Claim about Jane Doe is held by
                  Claims Provider C (a credit agency):
                </preamble>
                -->
                <artwork><![CDATA[
  {
   "credit_score": 650
  }
]]></artwork>
              </figure>
            </t>

            <t>
              <figure>
                <preamble>
                  OpenID Provider は, Jane Doe の Claim を返却する際に, Claims Provider B および C に対する参照を添える.
                  この参照には Distributed Claims を取得するための Access Token と URL を含む.
                </preamble>
                <!--
                <preamble>
                  The OpenID Provider returns Jane Doe's Claims along with references
                  to the Distributed Claims from Claims Provider B and Claims Provider C
                  by sending the Access Tokens and URLs of locations from which the
                  Distributed Claims can be retrieved:
                </preamble>
                -->
                <artwork><![CDATA[
  {
   "name": "Jane Doe",
   "given_name": "Jane",
   "family_name": "Doe",
   "email": "janedoe@example.com",
   "birthdate": "0000-03-22",
   "eye_color": "blue",
   "_claim_names": {
     "payment_info": "src1",
     "shipping_address": "src1",
     "credit_score": "src2"
    },
   "_claim_sources": {
     "src1": {"endpoint":
                "https://bank.example.com/claim_source"},
     "src2": {"endpoint":
                "https://creditagency.example.com/claims_here",
              "access_token": "ksj3n283dke"}
   }
  }
]]></artwork>
              </figure>
            </t>
          </section>

        </section>
      </section>

      <section anchor="ClaimStability" title="Claim Stability and Uniqueness">

        <t>
          <xref target="IDToken"></xref> にあるように, <spanx style="verb">sub</spanx> (subject) Claim は特定の Issuer 内でローカルに一意かつ決して再割り当てされない値でなければならず (MUST), それにより <spanx style="verb">sub</spanx> (subject) と <spanx style="verb">iss</spanx> (issuer) の組み合わせは RP が End-User の安定的な識別子として依存できる唯一の Claim となる.
          よって特定の End-User に対する唯一の保証されたユニークな識別子は, <spanx style="verb">iss</spanx> Claim と <spanx style="verb">sub</spanx> Claim の組み合わせとなる.
        </t>
        <!--
        <t>
          The <spanx style="verb">sub</spanx> (subject) and
          <spanx style="verb">iss</spanx> (issuer) Claims, used together,
          are the only Claims that an RP
          can rely upon as a stable identifier for the End-User,
          since the <spanx style="verb">sub</spanx>
          Claim MUST be locally unique and never reassigned within the Issuer
          for a particular End-User, as described in <xref target="IDToken"></xref>.
          Therefore, the only guaranteed unique identifier for a given End-User is the
          combination of the <spanx style="verb">iss</spanx> Claim
          and the <spanx style="verb">sub</spanx> Claim.
        </t>
        -->
        <t>
          他の全ての Claims に関しては, 長期的な安定性やユーザー間の一意性に関して, 異なる Issuer をまたいで上記のような保証を行うことはできず, Issuer はローカルの制限やポリシーを適用することが許されている.
          例えば, Issuer は異なる時点で異なる End-Users 間で <spanx style="verb">email</spanx> Claim 値を再利用するかもしれず (MAY), 特定の End-User の <spanx style="verb">email</spanx> Claim は時間の経過とともに変わりうる (MAY).
          ゆえに, <spanx style="verb">email</spanx>, <spanx style="verb">phone_number</spanx>, <spanx style="verb">preferred_username</spanx> のような他の Claims は End-User の一意な識別子として使用してはいけない (MUST NOT).
        </t>
        <!--
        <t>
          All other Claims carry no such guarantees across different issuers in terms of
          stability over time or uniqueness across users, and Issuers are permitted to
          apply local restrictions and policies. For instance, an Issuer MAY re-use an
          <spanx style="verb">email</spanx> Claim Value across different
          End-Users at different points in time, and the claimed
          <spanx style="verb">email</spanx> address for a given End-User MAY change
          over time.
          Therefore, other Claims such as <spanx style="verb">email</spanx>,
          <spanx style="verb">phone_number</spanx>, and
          <spanx style="verb">preferred_username</spanx>
          and MUST NOT be used as unique identifiers for the End-User.
        </t>
        -->

      </section>

    </section>

    <section anchor="JWTRequests" title="Passing Request Parameters as JWTs">

      <t>
        OpenID Connect では, Authorization Request に署名および暗号化を可能にするため, 以下の Authorization Request パラメータを定義する.
        <!--
        OpenID Connect defines the following Authorization Request parameters
        to enable Authentication Requests to be signed and optionally encrypted:
        -->

        <list style="hanging">
          <t hangText="request">
            <vspace/>
            OPTIONAL.
            このパラメータにより, OpenID Connect リクエストを単一の self-contained なパラメータとすることができ, 任意で署名および暗号化を施せるようになる.
            パラメータ値は Request Object 値である (<xref target="RequestObject"/> 参照).
            Request Object は, 各 Claim がリクエストパラメータとなる JWT である.
            <!--
            OPTIONAL.
            This parameter enables
            OpenID Connect requests to be passed in a single,
            self-contained parameter and to be optionally signed and/or encrypted.
            The parameter value is a Request Object value,
            as specified in <xref target="RequestObject"/>.
            It represents the request as a JWT whose Claims
            are the request parameters.
            -->
          </t>
          <t hangText="request_uri">
            <vspace/>
            OPTIONAL.
            このパラメータにより, 値そのものではなく参照を送ることが可能になる.
            <spanx style="verb">request_uri</spanx> 値は <spanx style="verb">https</spanx> スキーマで始まる URL であり, Request Object 値を含むリソースへの参照となる.
            参照先の Request Object は, リクエストパラメータを含む JWT である.
            <!--
            OPTIONAL.
            This parameter enables
            OpenID Connect requests to be passed by reference, rather than by value.
            The <spanx style="verb">request_uri</spanx> value is a URL
            using the <spanx style="verb">https</spanx> scheme
            referencing a resource containing a Request Object value,
            which is a JWT containing the request parameters.
            -->
          </t>
        </list>
      </t>
      <t>
        これらのパラメータを利用したリクエストは JWT として表現され, その値もしくは参照が送信される.
        リクエストを参照渡しすることで, 長大なリクエストを扱いやすくなる.
        上記のパラメータのいずれかを利用する場合は, 同一リクエスト中で他方を利用してはならない (MUST NOT).
      </t>
      <!--
      <t>
        Requests using these parameters are represented as JWTs, which are respectively
        passed by value or by reference.
        The ability to pass requests by reference is particularly useful for large requests.
        If one of these parameters is used,
        the other MUST NOT be used in the same request.
      </t>
      -->

      <section title="Passing a Request Object by Value" anchor="RequestObject">

        <t>
          <spanx style="verb">request</spanx> Authorization Request パラメータにより, OpenID Connect リクエストを単一の self-contained なパラメータとすることができ, 任意で署名および暗号化を施せるようになる.
          このパラメータは, 各 Claim がリクエストパラメータとなる JWT である (<xref target="AuthorizationEndpoint"/> 参照).
          この JWT は Request Object と呼ばれる.
        </t>
        <!--
        <t>
          The <spanx style="verb">request</spanx> Authorization Request parameter
          enables OpenID Connect requests to be passed in a single,
          self-contained parameter and to be optionally signed and/or encrypted.
          It represents the request as a JWT whose Claims are the request parameters
          specified in <xref target="AuthorizationEndpoint"/>.
          This JWT is called a Request Object.
        </t>
        -->
        <t>
          <spanx style="verb">request</spanx> パラメータのサポートはオプションである (OPTIONAL).
          Discovery 結果の <spanx style="verb">request_parameter_supported</spanx> により, OP がこのパラメータをサポートしていることを知ることができる.
          OP がこのパラメータをサポートしていないにも関わらず RP がこれを利用する場合, OP は <spanx style="verb">request_not_supported</spanx> エラーを返すこと (MUST).
        </t>
        <!--
        <t>
          Support for the <spanx style="verb">request</spanx> parameter is OPTIONAL.
          The <spanx style="verb">request_parameter_supported</spanx>
          Discovery result indicates whether the OP supports this parameter.
          Should an OP not support this parameter and an RP uses it,
          the OP MUST return the <spanx style="verb">request_not_supported</spanx>
          error.
        </t>
        -->
        <t>
          <spanx style="verb">request</spanx> を利用する際には, JWT に含まれる OpenID Connect パラメータ値が OAuth 2.0 リクエストシンタックスで送信されるパラメータに取って代わる.
          しかしながら, Request Object を利用する場合にでも, パラメータを OAuth 2.0 リクエストシンタックスでも送信することができる (MAY).
          こうすることで, キャッシュ可能で署名済 (および暗号化済) の Request Object 値に静的なリクエストパラメータを含め, リクエストごとに可変パラメータ (<spanx style="verb">state</spanx>, <spanx style="verb">nonce</spanx> 等) を OAuth 2.0 パラメータとして送信することなどが可能になる.
        </t>
        <!--
        <t>
          When the <spanx style="verb">request</spanx> parameter is used,
          the OpenID Connect request parameter values contained in the JWT
          supersede those passed using the OAuth 2.0 request syntax.
          However, parameters MAY also be passed using the OAuth 2.0 request syntax
          even when a Request Object is used;
          this would typically be done to enable a cached,
          pre-signed (and possibly pre-encrypted) Request Object value
          to be used containing the fixed request parameters, while parameters that
          can vary with each request, such as <spanx style="verb">state</spanx> and
          <spanx style="verb">nonce</spanx>, are passed as OAuth 2.0 parameters.
        </t>
        -->
        <t>
          リクエスト自体を有効な OAuth 2.0 Authorization Request とするため, <spanx style="verb">response_type</spanx> および <spanx style="verb">client_id</spanx> パラメータは OAuth 2.0 リクエストシンタックスでリクエストに含まねばならない (MUST).
          これは OAuth 2.0 で必須とされている (REQUIRED).
          もし Request Object にもこれらと同じパラメータが含まれている場合は, 2つのパラメータは一致しなければならない (MUST).
        </t>
        <!--
        <t>
          So that the request is a valid OAuth 2.0 Authorization Request,
          values for the <spanx style="verb">response_type</spanx> and
          <spanx style="verb">client_id</spanx> parameters MUST be included
          using the OAuth 2.0 request syntax, since they are REQUIRED by OAuth 2.0.
          The values for these parameters MUST match those in the Request Object,
          if present.
        </t>
        -->
        <t>
          <spanx style="verb">scope</spanx> パラメータが Request Object に含まれる場合でも, <spanx style="verb">scope</spanx> パラメータは OAuth 2.0 リクエストシンタックスで <spanx style="verb">openid</spanx> scope を含んだ形で送信しなければならない (MUST).
          これにより下位レイヤーの OAuth 2.0 処理系に, 当該リクエストが OpenID Connect リクエストであることを明示することができる.
        </t>
        <!--
        <t>
          Even if a <spanx style="verb">scope</spanx> parameter
          is present in the Request Object value,
          a <spanx style="verb">scope</spanx> parameter MUST always be passed using
          the OAuth 2.0 request syntax containing the
          <spanx style="verb">openid</spanx> scope value to indicate to the
          underlying OAuth 2.0 logic that this is an OpenID Connect request.
        </t>
        -->
        <t>
          Request Object は, 署名付きでも良いし, 署名無しの平文でも良い.
          平文の場合, JWS ヘッダーに <spanx style="verb">none</spanx> アルゴリズム (<xref target="JWA" /> 参照) を指定すること.
          署名付きの場合, Request Object は <spanx style="verb">iss</spanx> (issuer) および <spanx style="verb">aud</spanx> (audience) を含むべきである (SHOULD).
          RP 以外の主体に署名されているのでない限り, <spanx style="verb">iss</spanx> 値は RP の Client ID とすべきである (SHOULD).
          <spanx style="verb">aud</spanx> 値には OP の Issuer Identifier URL を含めるべきである (SHOULD).
        </t>
        <!--
        <t>
          The Request Object MAY be signed or unsigned (plaintext).
          When it is plaintext, this is indicated by use of the
          <spanx style="verb">none</spanx> algorithm <xref target="JWA" />
          in the JOSE Header.  If signed, the Request Object
          SHOULD contain the Claims
          <spanx style="verb">iss</spanx> (issuer)
          and <spanx style="verb">aud</spanx> (audience) as members.
          The <spanx style="verb">iss</spanx> value SHOULD be the Client ID of the RP,
          unless it was signed by a different party than the RP.
          The <spanx style="verb">aud</spanx> value SHOULD be or include
          the OP's Issuer Identifier URL.
        </t>
        -->
        <t>
          Request Object は <xref target="JWE">JWE</xref> を用いて暗号化することもできる (MAY).
          また署名無しで暗号化のみを適用することもできる (MAY).
          署名と暗号化を同時に利用する場合は, 署名後に暗号化すること (MUST).
          これは Nested JWT となる (<xref target="JWT"/> 参照).
        </t>
        <!--
        <t>
          The Request Object MAY also be encrypted using <xref target="JWE">JWE</xref>
          and MAY be encrypted without also being signed.
          If both signing and encryption are performed, it MUST be signed then encrypted,
          with the result being a Nested JWT, as defined in <xref target="JWT"/>.
        </t>
        -->
        <t>
          <spanx style="verb">request</spanx> および <spanx style="verb">request_uri</spanx> パラメータは, Request Object 中に含んではならない (MUST NOT).
        </t>
        <!--
        <t>
          <spanx style="verb">request</spanx> and
          <spanx style="verb">request_uri</spanx> parameters
          MUST NOT be included in Request Objects.
        </t>
        -->

        <t>
          <figure>
            <preamble>
              以下は base64url エンコードと署名を施す前段階の, Request Object 中の Claim の例である.
            </preamble>
            <!--
            <preamble>
              The following is a non-normative example of the Claims in
              a Request Object before base64url encoding and signing:
            </preamble>
            -->

            <artwork><![CDATA[
  {
   "iss": "s6BhdRkqt3",
   "aud": "https://server.example.com",
   "response_type": "code id_token",
   "client_id": "s6BhdRkqt3",
   "redirect_uri": "https://client.example.org/cb",
   "scope": "openid",
   "state": "af0ifjsldkj",
   "nonce": "n-0S6_WzA2Mj",
   "max_age": 86400,
   "claims":
    {
     "userinfo":
      {
       "given_name": {"essential": true},
       "nickname": null,
       "email": {"essential": true},
       "email_verified": {"essential": true},
       "picture": null
      },
     "id_token":
      {
       "gender": null,
       "birthdate": {"essential": true},
       "acr": {"values": ["urn:mace:incommon:iap:silver"]}
      }
    }
  }
]]></artwork>
          </figure>
          <figure>
            <preamble>
              <spanx style="verb">RS256</spanx> アルゴリズムで上記 Request Object に署名した結果の Request Object 値は以下のようになる.
              (改行は掲載上の都合による)
            </preamble>
            <!--
            <preamble>
              Signing it with the <spanx style="verb">RS256</spanx> algorithm
              results in this Request Object value
              (with line wraps within values for display purposes only):
            </preamble>
            -->

            <artwork><![CDATA[
  eyJhbGciOiJSUzI1NiIsImtpZCI6ImsyYmRjIn0.ew0KICJpc3MiOiAiczZCaGRSa3
  F0MyIsDQogImF1ZCI6ICJodHRwczovL3NlcnZlci5leGFtcGxlLmNvbSIsDQogInJl
  c3BvbnNlX3R5cGUiOiAiY29kZSBpZF90b2tlbiIsDQogImNsaWVudF9pZCI6ICJzNk
  JoZFJrcXQzIiwNCiAicmVkaXJlY3RfdXJpIjogImh0dHBzOi8vY2xpZW50LmV4YW1w
  bGUub3JnL2NiIiwNCiAic2NvcGUiOiAib3BlbmlkIiwNCiAic3RhdGUiOiAiYWYwaW
  Zqc2xka2oiLA0KICJub25jZSI6ICJuLTBTNl9XekEyTWoiLA0KICJtYXhfYWdlIjog
  ODY0MDAsDQogImNsYWltcyI6IA0KICB7DQogICAidXNlcmluZm8iOiANCiAgICB7DQ
  ogICAgICJnaXZlbl9uYW1lIjogeyJlc3NlbnRpYWwiOiB0cnVlfSwNCiAgICAgIm5p
  Y2tuYW1lIjogbnVsbCwNCiAgICAgImVtYWlsIjogeyJlc3NlbnRpYWwiOiB0cnVlfS
  wNCiAgICAgImVtYWlsX3ZlcmlmaWVkIjogeyJlc3NlbnRpYWwiOiB0cnVlfSwNCiAg
  ICAgInBpY3R1cmUiOiBudWxsDQogICAgfSwNCiAgICJpZF90b2tlbiI6IA0KICAgIH
  sNCiAgICAgImdlbmRlciI6IG51bGwsDQogICAgICJiaXJ0aGRhdGUiOiB7ImVzc2Vu
  dGlhbCI6IHRydWV9LA0KICAgICAiYWNyIjogeyJ2YWx1ZXMiOiBbInVybjptYWNlOm
  luY29tbW9uOmlhcDpzaWx2ZXIiXX0NCiAgICB9DQogIH0NCn0.nwwnNsk1-Zkbmnvs
  F6zTHm8CHERFMGQPhos-EJcaH4Hh-sMgk8ePrGhw_trPYs8KQxsn6R9Emo_wHwajyF
  KzuMXZFSZ3p6Mb8dkxtVyjoy2GIzvuJT_u7PkY2t8QU9hjBcHs68PkgjDVTrG1uRTx
  0GxFbuPbj96tVuj11pTnmFCUR6IEOXKYr7iGOCRB3btfJhM0_AKQUfqKnRlrRscc8K
  ol-cSLWoYE9l5QqholImzjT_cMnNIznW9E7CDyWXTsO70xnB4SkG6pXfLSjLLlxmPG
  iyon_-Te111V8uE83IlzCYIb_NMXvtTIVc1jpspnTSD7xMbpL-2QgwUsAlMGzw
]]></artwork>
          </figure>
          <figure>
            <preamble>
              以下の JWK フォーマットで表現された RSA 公開鍵で, 上記 Request Object の署名検証を行える.
              以降の Request Object 署名例でも, 同じ鍵を用いる.
              (改行は掲載上の都合による)
            </preamble>
            <!--
            <preamble>
              The following RSA public key, represented in JWK format, can be used to
              validate the Request Object signature in this
              and subsequent Request Object examples
              (with line wraps within values for display purposes only):
            </preamble>
            -->

            <artwork><![CDATA[
  {
   "kty":"RSA",
   "kid":"k2bdc",
   "n":"y9Lqv4fCp6Ei-u2-ZCKq83YvbFEk6JMs_pSj76eMkddWRuWX2aBKGHAtKlE5P
        7_vn__PCKZWePt3vGkB6ePgzAFu08NmKemwE5bQI0e6kIChtt_6KzT5OaaXDF
        I6qCLJmk51Cc4VYFaxgqevMncYrzaW_50mZ1yGSFIQzLYP8bijAHGVjdEFgZa
        ZEN9lsn_GdWLaJpHrB3ROlS50E45wxrlg9xMncVb8qDPuXZarvghLL0HzOuYR
        adBJVoWZowDNTpKpk2RklZ7QaBO7XDv3uR7s_sf2g-bAjSYxYUGsqkNA9b3xV
        W53am_UZZ3tZbFTIh557JICWKHlWj5uzeJXaw",
   "e":"AQAB"
  }
]]></artwork>
          </figure>
<!-- The private key is archived here, but is not included in the specification output.
          <figure>
            <preamble>
              The following is the RSA private key, represented in JWK format,
              that was used to sign the Request Object in this
              and subsequent Request Object examples
              (with line wraps within values for display purposes only):
            </preamble>

            <artwork><![CDATA[
  {
   "kty": "RSA",
   "kid":"k2bdc",
   "n": "y9Lqv4fCp6Ei-u2-ZCKq83YvbFEk6JMs_pSj76eMkddWRuWX2aBKGHAtKlE
         5P7_vn__PCKZWePt3vGkB6ePgzAFu08NmKemwE5bQI0e6kIChtt_6KzT5Oa
         aXDFI6qCLJmk51Cc4VYFaxgqevMncYrzaW_50mZ1yGSFIQzLYP8bijAHGVj
         dEFgZaZEN9lsn_GdWLaJpHrB3ROlS50E45wxrlg9xMncVb8qDPuXZarvghL
         L0HzOuYRadBJVoWZowDNTpKpk2RklZ7QaBO7XDv3uR7s_sf2g-bAjSYxYUG
         sqkNA9b3xVW53am_UZZ3tZbFTIh557JICWKHlWj5uzeJXaw",
   "e": "AQAB",
   "d": "LNwG_pCKrwowALpCpRdcOKlSVqylSurZhE6CpkRiE9cpDgGKIkO9CxPlXOL
         zjqxXuQc8MdMqRQZTnAwgd7HH0B6gncrruV3NewI-XQV0ckldTjqNfOTz1V
         Rs-jE-57KAXI3YBIhu-_0YpIDzdk_wBuAk661Svn0GsPQe7m9DoxdzenQu9
         O_soewUhlPzRrTH0EeIqYI715rwI3TYaSzoWBmEPD2fICyj18FF0MPy_SQz
         k3noVUUIzfzLnnJiWy_p63QBCMqjRoSHHdMnI4z9iVpIwJWQ3jO5n_2lC2-
         cSgwjmKsFzDBbQNJc7qMG1N6EssJUwgGJxz1eAUFf0w4YAQ",
   "qi": "J-mG0swR4FTy3atrcQ7dd0hhYn1E9QndN-
         -sDG4EQO0RnFj6wIefCvwIc4
         7hCtVeFnCTPYJNc_JyV-mU-9vlzS5GSNuyR5qdpsMZXUMpEvQcwKt23ffPZ
         YGaqfKyEesmf_Wi8fFcE68H9REQjnniKrXm7w2-IuG_IrVJA9Ox-uU",
   "q": "4hlMYAGa0dvogdK1jnxQ7J_Lqpqi99e-AeoFvoYpMPhthChTzwFZO9lQmUo
         BpMqVQTws_s7vWGmt7ZAB3ywkurf0pV7BD0fweJiUzrWk4KJjxtmP_auuxr
         jvm3s2FUGn6f0wRY9Z8Hj9A7C72DnYCjuZiJQMYCWDsZ8-d-L1a-s",
   "p": "5sd9Er3I2FFT9R-gy84_oakEyCmgw036B_nfYEEOCwpSvi2z7UcIVK3bSEL
         5WCW6BNgB3HDWhq8aYPirwQnqm0K9mX1E-4xM10WWZ-rP3XjYpQeS0Snru5
         LFVWsAzi-FX7BOqBibSAXLdEGXcXa44l08iec_bPD3xduq5V_1YoE",
   "dq": "Nz2PF3XM6bEc4XsluKZO70ErdYdKgdtIJReUR7Rno_tOZpejwlPGBYVW19
         zpAeYtCT82jxroB2XqhLxGeMxEPQpsz2qTKLSe4BgHY2ml2uxSDGdjcsrbb
         NoKUKaN1CuyZszhWl1n0AT_bENl4bJgQj_Fh0UEsQj5YBBUJt5gr_k",
   "dp": "Zc877jirkkLOtyTs2vxyNe9KnMNAmOidlUc2tE_-0gAL4Lpo1hSwKCtKwe
         ZJ-gkqt1hT-dwNx_0Xtg_-NXsadMRMwJnzBMYwYAfjApUkfqABc0yUCJJl3
         KozRCugf1WXkU9GZAH2_x8PUopdNUEa70ISowPRh04HANKX4fkjWAE"
  }
]]></artwork>
          </figure>
-->
        </t>

        <section anchor="RequestParameter"
                 title='Request using the "request" Request Parameter'>
          <t>
            Client は Authorization Request を Authorization Endpoint に送信する.
          </t>
          <!--
          <t>The Client sends the Authorization Request to the
          Authorization Endpoint.</t>
          -->

          <t>
            <figure>
              <preamble>
                以下は <spanx style='verb'>request</spanx> パラメータを使った Authorization Request の例である.
                (改行は掲載上の都合による)
              </preamble>
              <!--
              <preamble>The following is a non-normative example of an
              Authorization Request using the <spanx style='verb'>request</spanx>
              parameter
              (with line wraps within values for display purposes only):
              </preamble>
              -->

              <artwork><![CDATA[
  https://server.example.com/authorize?
    response_type=code%20id_token
    &client_id=s6BhdRkqt3
    &redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb
    &scope=openid
    &state=af0ifjsldkj
    &nonce=n-0S6_WzA2Mj
    &request=eyJhbGciOiJSUzI1NiIsImtpZCI6ImsyYmRjIn0.ew0KICJpc3MiOiA
    iczZCaGRSa3F0MyIsDQogImF1ZCI6ICJodHRwczovL3NlcnZlci5leGFtcGxlLmN
    vbSIsDQogInJlc3BvbnNlX3R5cGUiOiAiY29kZSBpZF90b2tlbiIsDQogImNsaWV
    udF9pZCI6ICJzNkJoZFJrcXQzIiwNCiAicmVkaXJlY3RfdXJpIjogImh0dHBzOi8
    vY2xpZW50LmV4YW1wbGUub3JnL2NiIiwNCiAic2NvcGUiOiAib3BlbmlkIiwNCiA
    ic3RhdGUiOiAiYWYwaWZqc2xka2oiLA0KICJub25jZSI6ICJuLTBTNl9XekEyTWo
    iLA0KICJtYXhfYWdlIjogODY0MDAsDQogImNsYWltcyI6IA0KICB7DQogICAidXN
    lcmluZm8iOiANCiAgICB7DQogICAgICJnaXZlbl9uYW1lIjogeyJlc3NlbnRpYWw
    iOiB0cnVlfSwNCiAgICAgIm5pY2tuYW1lIjogbnVsbCwNCiAgICAgImVtYWlsIjo
    geyJlc3NlbnRpYWwiOiB0cnVlfSwNCiAgICAgImVtYWlsX3ZlcmlmaWVkIjogeyJ
    lc3NlbnRpYWwiOiB0cnVlfSwNCiAgICAgInBpY3R1cmUiOiBudWxsDQogICAgfSw
    NCiAgICJpZF90b2tlbiI6IA0KICAgIHsNCiAgICAgImdlbmRlciI6IG51bGwsDQo
    gICAgICJiaXJ0aGRhdGUiOiB7ImVzc2VudGlhbCI6IHRydWV9LA0KICAgICAiYWN
    yIjogeyJ2YWx1ZXMiOiBbInVybjptYWNlOmluY29tbW9uOmlhcDpzaWx2ZXIiXX0
    NCiAgICB9DQogIH0NCn0.nwwnNsk1-ZkbmnvsF6zTHm8CHERFMGQPhos-EJcaH4H
    h-sMgk8ePrGhw_trPYs8KQxsn6R9Emo_wHwajyFKzuMXZFSZ3p6Mb8dkxtVyjoy2
    GIzvuJT_u7PkY2t8QU9hjBcHs68PkgjDVTrG1uRTx0GxFbuPbj96tVuj11pTnmFC
    UR6IEOXKYr7iGOCRB3btfJhM0_AKQUfqKnRlrRscc8Kol-cSLWoYE9l5QqholImz
    jT_cMnNIznW9E7CDyWXTsO70xnB4SkG6pXfLSjLLlxmPGiyon_-Te111V8uE83Il
    zCYIb_NMXvtTIVc1jpspnTSD7xMbpL-2QgwUsAlMGzw
]]></artwork>
            </figure>
          </t>
        </section>
      </section>

      <section anchor="RequestUriParameter" title="Passing a Request Object by Reference">
        <t>
          <spanx style="verb">request_uri</spanx> Authorization Request パラメータにより, OpenID Connect リクエストを参照渡し可能になる.
          このパラメータは, Request Object そのものが値として渡されるのではなく, Request Object が指定された URL から取得されるという点以外は, <spanx style="verb">request</spanx> パラメータと同等である.
        </t>
        <!--
        <t>
          The <spanx style="verb">request_uri</spanx> Authorization Request parameter enables
          OpenID Connect requests to be passed by reference, rather than by value.
          This parameter is used identically to the
          <spanx style="verb">request</spanx> parameter, other than that
          the Request Object value is retrieved from the resource at the specified URL,
          rather than passed by value.
        </t>
        -->
        <t>
          Discovery 結果の <spanx style="verb">request_uri_parameter_supported</spanx> により, OP がこのパラメータをサポートしていることを知ることができる.
          OP がこのパラメータをサポートしていないにも関わらず RP がこれを利用する場合, OP は <spanx style="verb">request_uri_not_supported</spanx> エラーを返すこと (MUST).
        </t>
        <!--
        <t>
          The <spanx style="verb">request_uri_parameter_supported</spanx>
          Discovery result indicates whether the OP supports this parameter.
          Should an OP not support this parameter and an RP uses it,
          the OP MUST return the <spanx style="verb">request_uri_not_supported</spanx>
          error.
        </t>
        -->
        <t>
          <spanx style="verb">request_uri</spanx> パラメータを利用する際には, 参照先の JWT に含まれる OpenID Connect パラメータ値が OAuth 2.0 リクエストシンタックスで送信されるパラメータに取って代わる.
          しかしながら, <spanx style="verb">request_uri</spanx> を利用する場合にでも, パラメータを OAuth 2.0 リクエストシンタックスでも送信することができる (MAY).
          こうすることで, キャッシュ可能で署名済 (および暗号化済) の Request Object 値に静的なリクエストパラメータを含め, リクエストごとに可変パラメータ (<spanx style="verb">state</spanx> , <spanx style="verb">nonce</spanx> 等) を OAuth 2.0 パラメータとして送信することなどが可能になる.
        </t>
        <!--
        <t>
          When the <spanx style="verb">request_uri</spanx> parameter is used,
          the OpenID Connect request parameter values contained in the referenced JWT
          supersede those passed using the OAuth 2.0 request syntax.
          However, parameters MAY also be passed using the OAuth 2.0 request syntax
          even when a <spanx style="verb">request_uri</spanx> is used;
          this would typically be done to enable a cached,
          pre-signed (and possibly pre-encrypted) Request Object value
          to be used containing the fixed request parameters, while parameters that
          can vary with each request, such as <spanx style="verb">state</spanx> and
          <spanx style="verb">nonce</spanx>, are passed as OAuth 2.0 parameters.
        </t>
        -->
        <t>
          リクエスト自体を有効な OAuth 2.0 Authorization Request とするため, <spanx style="verb">response_type</spanx> および <spanx style="verb">client_id</spanx> パラメータは OAuth 2.0 リクエストシンタックスでリクエストに含まねばならない (MUST).
          これは OAuth 2.0 で必須とされている (REQUIRED).
          もし Request Object にもこれらと同じパラメータが含まれている場合は, 2つのパラメータは一致しなければならない (MUST).
        </t>
        <!--
        <t>
          So that the request is a valid OAuth 2.0 Authorization Request,
          values for the <spanx style="verb">response_type</spanx> and
          <spanx style="verb">client_id</spanx> parameters MUST be included
          using the OAuth 2.0 request syntax, since they are REQUIRED by OAuth 2.0.
          The values for these parameters MUST match those in the Request Object,
          if present.
        </t>
        -->
        <t>
          <spanx style="verb">scope</spanx> パラメータが Request Object に含まれる場合でも, <spanx style="verb">scope</spanx> パラメータは OAuth 2.0 リクエストシンタックスで <spanx style="verb">openid</spanx> scope を含んだ形で送信しなければならない (MUST).
          これにより下位レイヤーの OAuth 2.0 処理系に, 当該リクエストが OpenID Connect リクエストであることを明示することができる.
        </t>
        <!--
        <t>
          Even if a <spanx style="verb">scope</spanx> parameter
          is present in the referenced Request Object,
          a <spanx style="verb">scope</spanx> parameter MUST always be passed using
          the OAuth 2.0 request syntax containing the
          <spanx style="verb">openid</spanx> scope value to indicate to the
          underlying OAuth 2.0 logic that this is an OpenID Connect request.
        </t>
        -->
        <t>
          サーバーは Request URI 参照先のコンテンツをキャッシュしても良い (MAY).
          もし参照先のリソースが可変の場合は, URI フラグメントとしてコンテンツの SHA-256 ハッシュの Base64URL エンコード値を含めるべきである (SHOULD).
          もし URI フラグメント値が変わった場合は, 古いフラグメント値を含む URI に紐づいたキャッシュ値はもはや有効でない.
        </t>
        <!--
        <t>
          Servers MAY cache the contents of the resources referenced by Request URIs.
          If the contents of the referenced resource could ever change,
          the URI SHOULD include the base64url encoded SHA-256 hash of the
          referenced resource contents as the fragment component of the URI.
          If the fragment value used for a URI changes, that signals the server
          that any cached value for that URI with the old fragment value
          is no longer valid.
        </t>
        -->
        <t>
          Client が <xref target="OpenID.Registration">OpenID Connect Dynamic Client Registration 1.0</xref> Section 2.1 で定義される <spanx style="verb">request_uris</spanx> パラメータを用いて <spanx style="verb">request_uri</spanx> を事前登録することも可能である (MAY).
          OP は, 事前登録済の <spanx style="verb">request_uri</spanx> 値以外の利用を許可しないということを, <spanx style="verb">require_request_uri_registration</spanx> ディスカバリパラメータで示すことができる.
        </t>
        <!--
        <t>
          Note that Clients MAY pre-register
          <spanx style="verb">request_uri</spanx> values using the
          <spanx style="verb">request_uris</spanx> parameter defined in
          Section 2.1 of the
          <xref target="OpenID.Registration">OpenID Connect Dynamic Client Registration 1.0</xref>
          specification.
          OPs can require that <spanx style="verb">request_uri</spanx> values used
          be pre-registered with the <spanx style="verb">require_request_uri_registration</spanx>
          discovery parameter.
        </t>
        -->
        <t>
          Request URI は全体で 512 ASCII 文字を超えてはならない (MUST NOT).
        </t>
        <!--
        <t>
          The entire Request URI MUST NOT exceed 512 ASCII characters.
        </t>
        -->
        <t>
          URL 参照先のリソースは, Request Object でなければならない (MUST).
          Request Object が Authorization Server に検証可能な方法で署名されていない限り, <spanx style="verb">request_uri</spanx> のスキーマは <spanx style="verb">https</spanx> でなければならない (MUST).
          <spanx style="verb">request_uri</spanx> 値は Authorization Server が到達可能でなければならず (MUST), Client にも到達可能であるべきである (SHOULD).
        </t>
        <!--
        <t>
          The contents of the resource referenced by the URL MUST be a Request Object.
          The scheme used in the
          <spanx style="verb">request_uri</spanx> value MUST be <spanx style="verb">https</spanx>,
          unless the target Request Object is signed in a way that is verifiable by the
          Authorization Server.
          The <spanx style="verb">request_uri</spanx> value MUST be reachable by the
          Authorization Server, and SHOULD be reachable by the Client.
        </t>
        -->

        <t>
          <figure>
            <preamble>
              以下は <spanx style="verb">request_uri</spanx> 参照先の Request Object の例である.
              (改行は掲載上の都合による)
            </preamble>
            <!--
            <preamble>The following is a non-normative example of
            the contents of a Request Object resource that can be
            referenced by a <spanx style="verb">request_uri</spanx>
            (with line wraps within values for display purposes only):</preamble>
            -->

            <artwork><![CDATA[
  eyJhbGciOiJSUzI1NiIsImtpZCI6ImsyYmRjIn0.ew0KICJpc3MiOiAiczZCaGRSa3
  F0MyIsDQogImF1ZCI6ICJodHRwczovL3NlcnZlci5leGFtcGxlLmNvbSIsDQogInJl
  c3BvbnNlX3R5cGUiOiAiY29kZSBpZF90b2tlbiIsDQogImNsaWVudF9pZCI6ICJzNk
  JoZFJrcXQzIiwNCiAicmVkaXJlY3RfdXJpIjogImh0dHBzOi8vY2xpZW50LmV4YW1w
  bGUub3JnL2NiIiwNCiAic2NvcGUiOiAib3BlbmlkIiwNCiAic3RhdGUiOiAiYWYwaW
  Zqc2xka2oiLA0KICJub25jZSI6ICJuLTBTNl9XekEyTWoiLA0KICJtYXhfYWdlIjog
  ODY0MDAsDQogImNsYWltcyI6IA0KICB7DQogICAidXNlcmluZm8iOiANCiAgICB7DQ
  ogICAgICJnaXZlbl9uYW1lIjogeyJlc3NlbnRpYWwiOiB0cnVlfSwNCiAgICAgIm5p
  Y2tuYW1lIjogbnVsbCwNCiAgICAgImVtYWlsIjogeyJlc3NlbnRpYWwiOiB0cnVlfS
  wNCiAgICAgImVtYWlsX3ZlcmlmaWVkIjogeyJlc3NlbnRpYWwiOiB0cnVlfSwNCiAg
  ICAgInBpY3R1cmUiOiBudWxsDQogICAgfSwNCiAgICJpZF90b2tlbiI6IA0KICAgIH
  sNCiAgICAgImdlbmRlciI6IG51bGwsDQogICAgICJiaXJ0aGRhdGUiOiB7ImVzc2Vu
  dGlhbCI6IHRydWV9LA0KICAgICAiYWNyIjogeyJ2YWx1ZXMiOiBbInVybjptYWNlOm
  luY29tbW9uOmlhcDpzaWx2ZXIiXX0NCiAgICB9DQogIH0NCn0.nwwnNsk1-Zkbmnvs
  F6zTHm8CHERFMGQPhos-EJcaH4Hh-sMgk8ePrGhw_trPYs8KQxsn6R9Emo_wHwajyF
  KzuMXZFSZ3p6Mb8dkxtVyjoy2GIzvuJT_u7PkY2t8QU9hjBcHs68PkgjDVTrG1uRTx
  0GxFbuPbj96tVuj11pTnmFCUR6IEOXKYr7iGOCRB3btfJhM0_AKQUfqKnRlrRscc8K
  ol-cSLWoYE9l5QqholImzjT_cMnNIznW9E7CDyWXTsO70xnB4SkG6pXfLSjLLlxmPG
  iyon_-Te111V8uE83IlzCYIb_NMXvtTIVc1jpspnTSD7xMbpL-2QgwUsAlMGzw
  ]]></artwork>
          </figure>
        </t>

        <section anchor="CreateRequestUri"
                 title="URL Referencing the Request Object">
          <t>
            Client は Request Object をローカルもしくはリモートの Server にアクセス可能な URL に配置する.
            この URI が Request URI (<spanx style="verb">request_uri</spanx>) である.
          </t>
          <!--
          <t>
            The Client stores the Request Object resource either
            locally or remotely at a URL the Server can access.
            This URL is the Request URI, <spanx style="verb">request_uri</spanx>.
          </t>
          -->
          <t>
            Request Object が Claim リクエストを含む場合, その Request Object は Authorization Server 以外の何者にも知られてはならない (MUST NOT).
            例えば, <spanx style="verb">request_uri</spanx> はそのライフタイムに応じて適切なエントロピーを持っていなければならない (MUST).
            再び利用することの無いのが明らかな場合や適切なタイムアウト後には, そのコンテンツを削除することが推奨される (RECOMMENDED).
            ただしなんらかのアクセスコントロールが実施されている場合はその限りではない.
          </t>
          <!--
          <t>
            If the Request Object includes requested values for Claims,
            it MUST NOT be revealed to anybody but the Authorization Server.
            As such, the <spanx style="verb">request_uri</spanx> MUST have
            appropriate entropy for its lifetime.
            It is RECOMMENDED that it be removed
            if it is known that it will not be used again
            or after a reasonable timeout
            unless access control measures are taken.
          </t>
          -->
          <figure>
            <preamble>
              以下は Request URI 値の例である.
              (改行は掲載上の都合による)
            </preamble>
            <!--
            <preamble>The following is a non-normative example
            of a Request URI value
            (with line wraps within values for display purposes only):</preamble>
            -->

            <artwork><![CDATA[
  https://client.example.org/request.jwt#
    GkurKxf5T0Y-mnPFCHqWOMiZi4VS138cQO_V7PZHAdM
]]></artwork>
          </figure>

        </section>

        <section anchor="UseRequestUri"
                 title='Request using the "request_uri" Request Parameter'>
          <t>
            Client は Authorization Request を Authorization Endpoint に送信する.
          </t>
          <!--
          <t>The Client sends the Authorization Request to the
          Authorization Endpoint.</t>
          -->

          <figure>
            <preamble>
              以下は <spanx style="verb">request_uri</spanx> パラメータを使った Authorization Request の例である.
              (改行は掲載上の都合による)
            </preamble>
            <!--
            <preamble>The following is a non-normative example
            of an Authorization Request using the <spanx style="verb">request_uri</spanx> parameter
            (with line wraps within values for display purposes only):</preamble>
            -->

            <artwork><![CDATA[
  https://server.example.com/authorize?
    response_type=code%20id_token
    &client_id=s6BhdRkqt3
    &request_uri=https%3A%2F%2Fclient.example.org%2Frequest.jwt
    %23GkurKxf5T0Y-mnPFCHqWOMiZi4VS138cQO_V7PZHAdM
    &state=af0ifjsldkj&nonce=n-0S6_WzA2Mj
    &scope=openid
]]></artwork>
          </figure>
        </section>

        <section anchor="GetRequestUri" title="Authorization Server Fetches Request Object">
          <t>
            Request を受けると, Authorization Server は参照先の Request Object を取得するため, <spanx style="verb">request_uri</spanx> に HTTP <spanx style="verb">GET</spanx> リクエストを送らなければならない (MUST).
            ただし Request Object がキャッシュ済の場合を除く.
            Request Object を取得すると, Authorization Server は Authorization Request を取得するため Request Object をパースする.
          </t>
          <!--
          <t>Upon receipt of the Request, the Authorization Server MUST
          send an HTTP <spanx style="verb">GET</spanx> request to the <spanx style="verb">request_uri</spanx>
          to retrieve the referenced Request Object, unless it is already cached, and parse it
          to recreate the Authorization Request parameters.</t>
          -->

          <t>
            RP はリクエストごとに異なるパラメータを用いる場合は, リクエストごとにユニークな URI を用いるべきである (SHOULD).
            もしくは Authorization Server が <spanx style="verb">request_uri</spanx> 参照先のコンテンツをキャッシュするのを防ぐこと.
          </t>
          <!--
          <t>Note that the RP SHOULD use a unique URI for each
          request utilizing distinct parameters, or otherwise
          prevent the Authorization Server from caching the <spanx style="verb">request_uri</spanx>.
          </t>
          -->

          <figure>
            <preamble>
              以下は Request Object フェッチ例である.
            </preamble>
            <!--
            <preamble>The following is a non-normative example of this fetch
            process:</preamble>
            -->

            <artwork><![CDATA[
  GET /request.jwt HTTP/1.1
  Host: client.example.org
]]></artwork>
          </figure>
        </section>

        <section anchor="RequestUriRationale" title="&quot;request_uri&quot; Rationale">
          <t>
            <spanx style="verb">request_uri</spanx> を利用する理由はいくつか挙げられる.
          </t>
          <!--
          <t>
            There are several reasons that one might choose to use the
            <spanx style="verb">request_uri</spanx> parameter:
          </t>
          -->
          <t>
            <list style="numbers">
              <t>
                リクエストパラメータセットが長大になり, ブラウザの URI 長制限を超える.
                リクエストパラメータを参照渡しすることで, この問題を回避できる.
              </t>
              <!--
              <t>
                The set of request parameters can become large, and can exceed browser
                URI size limitations.  Passing the request parameters by reference
                can solve this problem.
              </t>
              -->
              <t>
                リクエスト全体を値として渡すより, <spanx style="verb">request_uri</spanx> を渡す方がリクエストレイテンシを抑えることができる.
              </t>
              <!--
              <t>
                Passing a <spanx style="verb">request_uri</spanx> value, rather than
                a complete request by value, can reduce request latency.
              </t>
              -->
              <t>
                RP が送ってくる Claim は, 基本的に不変である.
                <spanx style="verb">request_uri</spanx> は, 事前に不変のリクエストパラメータセットを用意しておき, 時には事前に署名や暗号化を施しておくことを可能にする.
                (<spanx style="verb">request_uri</spanx> 値は, 特定の不変なリクエストパラメータに対する "artifact" となる)
              </t>
              <!--
              <t>
                Most requests for Claims from an RP are constant.
                The <spanx style="verb">request_uri</spanx> is a way of creating
                and sometimes also signing and encrypting a constant set of
                request parameters in advance.
                (The <spanx style="verb">request_uri</spanx> value becomes an "artifact"
                representing a particular fixed set of request parameters.)
              </t>
              -->
              <t>
                Registration 時に不変なリクエストパラメータを事前登録しておくことで, OP は Registration 時にリクエストパラメータを事前に検証済にした状態でキャッシュすることができる.
                これにより, OP はリクエストを受け取った際にコンテンツを取得しにいく必要がなくなる.
              </t>
              <!--
              <t>
                Pre-registering a fixed set of request parameters at Registration time
                enables OPs to cache and pre-validate the request parameters at
                Registration time, meaning they need not be retrieved at request time.
              </t>
              -->
              <t>
                Registration 時に不変なリクエストパラメータを事前登録しておくことで, OP は顧客保護などの視点から送られてくるであろうリクエストの事前審査を行うことができる.
                事前審査を行う主体は, OP 自身なこともあれば, サードパーティであることもあろう.
              </t>
              <!--
              <t>
                Pre-registering a fixed set of request parameters at
                Registration time enables OPs to vet the contents of
                the request from consumer protection and other points
                of views, either itself or by utilizing a third party.
              </t>
              -->
            </list>
          </t>
        </section>
      </section>

      <section anchor="JWTRequestValidation" title="Validating JWT-Based Requests">

        <t>
          <spanx style="verb">request</spanx> ないしは <spanx style="verb">request_uri</spanx> Authorization Request パラメータを利用する場合, Authentication Request の検証には <xref target="AuthRequestValidation" format="counter"/>, <xref target="ImplicitValidation" format="counter"/> および <xref target="HybridValidation" format="counter"/> に加えて更なるステップが必要となる.
          このステップとは, Request Object を含む JWT の検証と, Request Object 自体の検証である.
        </t>
        <!--
        <t>
          When the <spanx style="verb">request</spanx> or
          <spanx style="verb">request_uri</spanx> Authorization Request parameters
          are used, additional steps must be performed to validate the
          Authentication Request beyond those specified in
          Sections <xref target="AuthRequestValidation" format="counter"/>,
          <xref target="ImplicitValidation" format="counter"/>, or
          <xref target="HybridValidation" format="counter"/>.
          These steps are to validate the JWT containing the Request Object
          and to validate the Request Object itself.
        </t>
        -->

        <section anchor="EncryptedRequestObject" title="Encrypted Request Object">

          <t>
            もし Authorization Server が Discovery ドキュメント <xref target="OpenID.Discovery"/> 中の <spanx style="verb">request_object_encryption_alg_values_supported</spanx> と <spanx style="verb">request_object_encryption_enc_values_supported</spanx> で JWE 暗号化アルゴリズムを公表している場合, またはその他の手段により暗号かアルゴリズムを明らかにしている場合, Client はそれらのアルゴリズムを利用して JWT を暗号化する.
          </t>
          <!--
          <t>
            If the Authorization Server has advertised JWE encryption algorithms
            in the <spanx style="verb">request_object_encryption_alg_values_supported</spanx> and
            <spanx style="verb">request_object_encryption_enc_values_supported</spanx> elements of its
            Discovery document <xref target="OpenID.Discovery"/>,
            or has supplied encryption algorithms by other means,
            these are used by the Client to encrypt the JWT.
          </t>
          -->

          <t>
            Authorization Server は <xref target="JWE">JSON Web Encryption</xref> の仕様に従って JWT を復号しなければならない (MUST).
            Request Object は署名されているかもしれず, 署名無しの平文かもしれない (MAY).
            前者の場合, 署名検証は <xref target="SignedRequestObject"/> に従うこと (MUST).
          </t>
          <!--
          <t>
            The Authorization Server MUST decrypt the JWT in accordance with
            the <xref target="JWE">JSON Web Encryption</xref> specification.
            The result MAY be either a signed or unsigned (plaintext) Request Object.
            In the former case, signature validation MUST be performed
            as defined in <xref target="SignedRequestObject"/>.
          </t>
          -->

          <t>
            復号に失敗した場合, Authorization Server はエラーを返さねばならない (MUST).
          </t>
          <!--
          <t>
            The Authorization Server MUST return an error if decryption fails.
          </t>
          -->
        </section>

        <section anchor="SignedRequestObject" title="Signed Request Object">

          <t>
            署名検証を行うには, JWS ヘッダーの <spanx style="verb">alg</spanx> パラメータが Client Registration 時の <spanx style="verb">request_object_signing_alg</spanx>, もしくはその他の手段により事前登録された値と一致しなければならない (MUST).
            署名は <spanx style="verb">client_id</spanx> とアルゴリズムに対して適切な鍵を用いて行わなければならない (MUST).
          </t>
          <!--
          <t>
            To perform Signature Validation,
            the <spanx style="verb">alg</spanx> Header Parameter in the JOSE Header MUST match the value
            of the <spanx style="verb">request_object_signing_alg</spanx> set during
            Client Registration <xref target="OpenID.Registration"/> or a value that was
            pre-registered by other means.
            The signature MUST be validated against the appropriate key
            for that <spanx style="verb">client_id</spanx>
            and algorithm.
          </t>
          -->

          <t>
            署名検証に失敗した場合, Authorization Server はエラーを返さねばならない (MUST).
          </t>
          <!--
          <t>
            The Authorization Server MUST return an error if signature validation fails.
          </t>
          -->
        </section>

        <section anchor="RequestParameterValidation" title="Request Parameter Assembly and Validation">

          <t>
            Authorization Server は, Request Object 値と OAuth 2.0 Authorization Request パラメータから (<spanx style="verb">request</spanx> と <spanx style="verb">request_uri</spanx> を除いて) Authorization Request パラメータを集約しなければならない (MUST).
            Request Object と OAuth Authorization Request パラメータに同じパラメータが含まれる場合, Request Object に含まれるパラメータを用いること.
            その後 Authorization Server は, 集約された Authorization Request パラメータを用いて, <xref target="AuthRequestValidation" format="counter"/>, <xref target="ImplicitValidation" format="counter"/> および <xref target="HybridValidation" format="counter"/> に従って, 利用されているフローに応じて通常通りリクエストを検証する.
          </t>
          <!--
          <t>
            The Authorization Server MUST assemble
            the set of Authorization Request parameters to be used
            from the Request Object value
            and the OAuth 2.0 Authorization Request parameters
            (minus the <spanx style="verb">request</spanx> or
            <spanx style="verb">request_uri</spanx> parameters).
            If the same parameter exists both in
            the Request Object and the OAuth Authorization Request parameters,
            the parameter in the Request Object is used.
            Using the assembled set of Authorization Request parameters,
            the Authorization Server then validates the request
            the normal manner for the flow being used, as specified in
            Sections <xref target="AuthRequestValidation" format="counter"/>,
            <xref target="ImplicitValidation" format="counter"/>, or
            <xref target="HybridValidation" format="counter"/>.
          </t>
          -->

        </section>
      </section>

    </section>

    <section anchor="SelfIssued" title="Self-Issued OpenID Provider">

      <t>
        OpenID Connect は Self-Issued OpenID Provider (私有の self-hosted な OpenID Provider であり, 自己署名つきの ID Token を発行するもの) をサポートしている.
        Self-Issued OP は <spanx style="verb">https://self-issued.me</spanx> という特別な Issuer 識別子を使用する.
      </t>
      <!--
      <t>
        OpenID Connect supports Self-Issued OpenID Providers -
        personal, self-hosted OPs that issue self-signed ID Tokens.
        Self-Issued OPs use the special Issuer Identifier
        <spanx style="verb">https://self-issued.me</spanx>.
      </t>
      -->
      <t>
        Self-Issued OP とのメッセージのやりとりは, 通常の OP の場合とほとんど同じである.
        ここでは Self-Issued のために追加されるパラメータ, およびパラメータ値を定義する.
      </t>
      <!--
      <t>
        The messages used to communicate with Self-Issued OPs are
        mostly the same as those used to communicate with other OPs.
        Specifications for the few additional parameters used and
        for the values of some parameters in the Self-Issued case
        are defined in this section.
      </t>
      -->

      <section anchor="SelfIssuedDiscovery" title="Self-Issued OpenID Provider Discovery">
        <t>
          Discovery Process で入力された識別子が self-issued.me ドメインを含んでいた場合,
          Dynamic Discovery は実行されない.
          その代わりに以下の静的な設定値が使用される.
        </t>
        <!--
        <t>
          If the input identifier for the discovery process
          contains the domain self-issued.me, dynamic discovery is not performed.
          Instead, then the following static configuration values are used:
        </t>
        -->
        <t>
          <figure>
            <artwork><![CDATA[
  {
   "authorization_endpoint":
     "openid:",
   "issuer":
     "https://self-issued.me",
   "scopes_supported":
     ["openid", "profile", "email", "address", "phone"],
   "response_types_supported":
     ["id_token"],
   "subject_types_supported":
     ["pairwise"],
   "id_token_signing_alg_values_supported":
     ["RS256"],
   "request_object_signing_alg_values_supported":
     ["none", "RS256"]
  }
]]></artwork>
          </figure>
        </t>
        <t>
          注記: OpenID ファウンデーションは
          <spanx style="verb">https://self-issued.me/</spanx>
          という OpenID Provider サイトを提供することを計画している.
          その場合は WebFinger サービスも提供され, ディスカバリを実行すると上記の静的なディスカバリ情報を返すため, RP は Self-Issued OP のディスカバリのために特別な処理を行う必要はない.
          このサイトは実験的に提供される予定である.
          プロダクション環境を実装する際は, OpenID ファウンデーションが当該サイトをプロダクション用途を想定して提供するまでその環境に依存すべきではない.
        </t>
        <!--
        <t>
          NOTE:  The OpenID Foundation plans to host the OpenID Provider site
          <spanx style="verb">https://self-issued.me/</spanx>,
          including its WebFinger service, so that performing discovery on it
          returns the above static discovery information, enabling RPs
          to not need any special processing for discovery of the Self-Issued OP.
          This site will be hosted on an experimental basis.
          Production implementations should not take a dependency upon it
          without a subsequent commitment by the OpenID Foundation
          to host the site in a manner intended for production use.
        </t>
        -->
      </section>

      <section anchor="SelfIssuedRegistration" title="Self-Issued OpenID Provider Registration">
        <t>
          Self-Issued OP を使う際は登録は必要ない.
          Client は登録しなくても OP に登録したかのように振る舞い, 以下の Client Registration Response を得る.
        </t>
        <!--
        <t>
          When using a Self-Issued OP, registration is not required.
          The Client can proceed without registration as if it had
          registered with the OP and obtained the following
          Client Registration Response:
        </t>
        -->
        <t>
          <list style="hanging">
            <t hangText="client_id">
              <vspace/>
              Client の <spanx style="verb">redirect_uri</spanx> 値.
              <!--
              <spanx style="verb">redirect_uri</spanx> value of the Client.
              -->
            </t>
            <t hangText="client_secret_expires_at">
              <vspace/>
              0
            </t>
          </list>
        </t>
        <t>
          注記: OpenID ファウンデーションは
          <spanx style="verb">https://self-issued.me/registration/1.0/</spanx>
          という (ステートレスな) エンドポイントを提供することを計画しており, そのエンドポイントは上記レスポンスを返すため, RP は Self-Issued OP の登録のために特別な処理を行う必要はない.
          このサイトは実験的に提供される予定である.
          プロダクション環境を実装する際は, OpenID ファウンデーションが当該サイトをプロダクション用途を想定して提供するまでその環境に依存すべきではない.
        </t>
        <!--
        <t>
          NOTE:  The OpenID Foundation plans to host the (stateless) endpoint
          <spanx style="verb">https://self-issued.me/registration/1.0/</spanx>
          that returns the response above, enabling RPs to not need
          any special processing for registration with the Self-Issued OP.
          This site will be hosted on an experimental basis.
          Production implementations should not take a dependency upon it
          without a subsequent commitment by the OpenID Foundation
          to host the site in a manner intended for production use.
        </t>
        -->

        <section anchor="RegistrationParameter"
                 title='Providing Information with the "registration" Request Parameter'>

          <t>
            OpenID Connect は Client が Self-Issued OpenID Provider に追加の登録情報を提供することが出来るようにするために以下の認可リクエストパラメータを定義している.
            <!--
            OpenID Connect defines the following Authorization Request parameter
            to enable Clients to provide additional registration information to
            Self-Issued OpenID Providers:
            -->

            <list style="hanging">

              <t hangText="registration">
                <vspace/>
                OPTIONAL.
                このパラメータは通常, Dynamic Client Registration の間に Client が自身の情報を Self-Issued OP に提供する際に利用される.
                この値は <xref target="OpenID.Registration">OpenID Connect Dynamic Client Registration 1.0</xref> 仕様の Section 2.1 で定義されている Client メタデータの値を含む JSON オブジェクトである.
                <spanx style="verb">registration</spanx> パラメータは OP が Self-Issued OP ではないときは利用すべきではない (SHOULD NOT).
                <!--
                OPTIONAL.
                This parameter is used by the Client to provide information about itself
                to a Self-Issued OP that would normally be provided to an OP during
                Dynamic Client Registration.
                The value is a JSON object containing Client metadata values,
                as defined in Section 2.1 of the
                <xref target="OpenID.Registration">OpenID Connect Dynamic Client Registration 1.0</xref>
                specification.
                The <spanx style="verb">registration</spanx> parameter SHOULD NOT be used
                when the OP is not a Self-Issued OP.
                -->
              </t>
            </list>
          </t>
          <t>
            この情報の中で Self-Issued OP により必須 (REQUIRED) なものはなく, このパラメータの利用は任意 (OPTIONAL) である.
          </t>
          <!--
          <t>
            None of this information is REQUIRED by Self-Issued OPs,
            so the use of this parameter is OPTIONAL.
          </t>
          -->
          <t>
            <spanx style="verb">registration</spanx> パラメータの値は OAuth 2.0 リクエストの中で UTF-8 エンコードされた JSON として表わされる.
            (OAuth パラメータとして渡される際, form-urlencoded される).
            Request Object (<xref target="RequestObject"/> 参照) 内で利用される場合, <spanx style="verb">registration</spanx> メンバーの値として JSON オブジェクトを指定する.
          </t>
          <!--
          <t>
            The <spanx style="verb">registration</spanx> parameter value is represented
            in an OAuth 2.0 request as a UTF-8 encoded JSON object
            (which ends up being form-urlencoded when passed as an OAuth parameter).
            When used in a Request Object value, per <xref target="RequestObject"/>,
            the JSON object is used as the value of the
            <spanx style="verb">registration</spanx> member.
          </t>
          -->
          <t>
            Self-Issued OP へのリクエストの中で典型的に利用する登録パラメータは以下である.
            <spanx style="verb">policy_uri</spanx>,
            <spanx style="verb">tos_uri</spanx>, and
            <spanx style="verb">logo_uri</spanx>.
            Client が一つ以上の Redirection URI を使用する際, それらを登録するために
            <spanx style="verb">redirect_uris</spanx>
            パラメータを利用する.
            最後にもし Client が暗号化されたレスポンスをリクエストする場合は, 以下のパラメータを利用する.
            <spanx style="verb">jwks_uri</spanx>,
            <spanx style="verb">id_token_encrypted_response_alg</spanx>, and
            <spanx style="verb">id_token_encrypted_response_enc</spanx>.
          </t>
          <!--
          <t>
            The Registration parameters that would typically be used in requests
            to Self-Issued OPs are
            <spanx style="verb">policy_uri</spanx>,
            <spanx style="verb">tos_uri</spanx>, and
            <spanx style="verb">logo_uri</spanx>.
            If the Client uses more than one Redirection URI, the
            <spanx style="verb">redirect_uris</spanx>
            parameter would be used to register them.
            Finally, if the Client is requesting encrypted responses, it would typically use the
            <spanx style="verb">jwks_uri</spanx>,
            <spanx style="verb">id_token_encrypted_response_alg</spanx> and
            <spanx style="verb">id_token_encrypted_response_enc</spanx> parameters.
          </t>
          -->
        </section>
      </section>

      <section anchor="SelfIssuedRequest" title="Self-Issued OpenID Provider Request">
        <t>
          Client は Authorization Endpoint へ以下のパラメータを付けて Authentication Request を送信する.
        </t>
        <!--
        <t>The Client sends the Authentication Request to the Authorization Endpoint
        with the following parameters:</t>
        -->
        <t>
          <list style="hanging">
            <t hangText="scope">
              <vspace/>
              REQUIRED.
              <xref target="AuthorizationEndpoint"/> で定義されている <spanx style="verb">scope</spanx> パラメータの値.
              <!--
              REQUIRED.
              <spanx style="verb">scope</spanx> parameter value,
              as specified in <xref target="AuthorizationEndpoint"/>.
              -->
            </t>
            <t hangText="response_type">
              <vspace/>
              REQUIRED. 固定の文字列 <spanx style="verb">id_token</spanx>.
              <!--
              REQUIRED. Constant string value <spanx style="verb">id_token</spanx>.
              -->
            </t>
            <t hangText="client_id">
              <vspace/>
              REQUIRED.
              Client の Client ID, この場合は Client の
              <spanx style="verb">redirect_uri</spanx> の値を含む.
              Client の <spanx style="verb">redirect_uri</spanx> URI の値は Client ID として送信されるので, <spanx style="verb">redirect_uri</spanx> パラメータをリクエストの中に含む必要はない (NOT REQUIRED).
              <!--
              REQUIRED.
              Client ID value for the Client, which in this case contains the
              <spanx style="verb">redirect_uri</spanx> value of the Client.
              Since the Client's
              <spanx style="verb">redirect_uri</spanx> URI value is communicated
              as the Client ID,
              a <spanx style="verb">redirect_uri</spanx> parameter
              is NOT REQUIRED to also be included in the request.
              -->
            </t>
            <t hangText="id_token_hint">
              <vspace/>
              OPTIONAL.
              <xref target="AuthorizationEndpoint"/> で定義されている <spanx style="verb">id_token_hint</spanx> パラメータの値.
              Self-Issued OP に対して暗号化した ID Token を送信する場合, 署名付き ID Token の <spanx style="verb">sub</spanx> (subject) を JWE の <spanx style="verb">kid</spanx> (Key ID) として指定しなければならない (MUST).
              現状 Self-Issued OP に対して暗号化したコンテンツを送信できるのは, OP の JWK 鍵タイプが <spanx style="verb">RSA</spanx> であり, かつ暗号化アルゴリズムが <spanx style="verb">RSA1_5</spanx> である場合に限る.
              <!--
              OPTIONAL.
              <spanx style="verb">id_token_hint</spanx> parameter value,
              as specified in <xref target="AuthorizationEndpoint"/>.
              If the ID Token is encrypted to the Self-Issued OP,
              the <spanx style="verb">sub</spanx> (subject)
              of the signed ID Token MUST be sent as the
              <spanx style="verb">kid</spanx> (Key ID) of the JWE.
              Encrypting content to Self-Issued OPs is currently only supported when
              the OP's JWK key type is <spanx style="verb">RSA</spanx> and the encryption
              algorithm used is <spanx style="verb">RSA1_5</spanx>.
              -->
            </t>
            <t hangText="claims">
              <vspace/>
              OPTIONAL.
              <xref target="ClaimsParameter"/> で定義されている <spanx style="verb">claims</spanx> パラメータの値.
              <!--
              OPTIONAL.
              <spanx style="verb">claims</spanx> parameter value,
              as specified in <xref target="ClaimsParameter"/>.
              -->
            </t>
            <t hangText="registration">
              <vspace/>
              OPTIONAL.
              このパラメータは, 通常 Dynamic Client Registration (<xref target="RegistrationParameter"/> 参照) を通じて提供される Client 自身に関する情報を, Client が Self-Issued OP に提供する際に利用される.
              <!--
              OPTIONAL.
              This parameter is used by the Client to provide information about itself
              to a Self-Issued OP that would normally be provided to an OP during
              Dynamic Client Registration,
              as specified in <xref target="RegistrationParameter"/>.
              -->
            </t>
            <t hangText="request">
              <vspace/>
              OPTIONAL.
              <xref target="RequestObject"/> で定義されている Request Object 値.
              Client は, 暗号化した Request Object を Self-Issued OP に送信することもできる (MAY).
              その場合, その Client に対して既に発行済の ID Token の <spanx style="verb">sub</spanx> (subject) を JWE の <spanx style="verb">kid</spanx> (Key ID) として指定しなければならない (MUST).
              現状 Self-Issued OP に対して暗号化したコンテンツを送信できるのは, OP の JWK 鍵タイプが <spanx style="verb">RSA</spanx> であり, かつ暗号化アルゴリズムが <spanx style="verb">RSA1_5</spanx> である場合に限る.
              <!--
              OPTIONAL.
              Request Object value, as specified in <xref target="RequestObject"/>.
              The Request Object MAY be encrypted to the Self-Issued OP by the Client.
              In this case, the <spanx style="verb">sub</spanx> (subject) of
              a previously issued ID Token for this Client
              MUST be sent as the <spanx style="verb">kid</spanx> (Key ID) of the JWE.
              Encrypting content to Self-Issued OPs is currently only supported when
              the OP's JWK key type is <spanx style="verb">RSA</spanx> and the encryption
              algorithm used is <spanx style="verb">RSA1_5</spanx>.
              -->
            </t>
          </list>
        </t>
        <t>
          他のパラメータも送ってもよい (MAY).
          すべての Claim は ID Token の中で返されることに留意すること.
        </t>
        <!--
        <t>
          Other parameters MAY be sent.
          Note that all Claims are returned in the ID Token.
        </t>
        -->
        <t>全体 URL 長は ASCII で 2048 文字を超えてはならない (MUST NOT).</t>
        <!--
        <t>The entire URL MUST NOT exceed 2048 ASCII characters.</t>
        -->
        <figure>
          <preamble>
            以下は, User Agent が Self-Issued OpenID Provider に対して Authentication Request を生成するためのトリガーとなる, Client による HTTP 302 リダイレクトレスポンスの参考例である.
            (改行は掲載上の都合による)
          </preamble>
          <!--
          <preamble>
            The following is a non-normative example
            HTTP 302 redirect response by the Client, which triggers
            the User Agent to make an Authentication Request
            to the Self-Issued OpenID Provider
            (with line wraps within values for display purposes only):
          </preamble>
          -->
          <artwork><![CDATA[
  HTTP/1.1 302 Found
  Location: openid://?
    response_type=id_token
    &client_id=https%3A%2F%2Fclient.example.org%2Fcb
    &scope=openid%20profile
    &state=af0ifjsldkj
    &nonce=n-0S6_WzA2Mj
    &registration=%7B%22logo_uri%22%3A%22https%3A%2F%2F
      client.example.org%2Flogo.png%22%7D
]]></artwork>
        </figure>
      </section>

      <section anchor="SelfIssuedResponse" title="Self-Issued OpenID Provider Response">

        <t>
          OpenID Connect では Self-Issued OpenID Provider Responses で使うために以下の Claim を定義する.
          <!--
          OpenID Connect defines the following Claim
          for use in Self-Issued OpenID Provider Responses:
          -->

          <list style="hanging">

            <t hangText="sub_jwk">
              <vspace/>
              REQUIRED.
              <xref target="SelfIssued"/> で定義されるとおり, Self-Issued OpenID Provider から発行された ID Token の署名検証に使われる公開鍵.
              鍵は <xref target="JWK"/> フォーマットのベア鍵である (X.509 証明書ではない).
              <spanx style="verb">sub_jwk</spanx> 値は JSON オブジェクトである.
              OP が Self-Issued でない場合はこの Claim の利用を推奨しない (NOT RECOMMENDED).
              <!--
              REQUIRED.
              Public key used to check the signature of an ID Token
              issued by a Self-Issued OpenID Provider,
              as specified in <xref target="SelfIssued"/>.
              The key is a bare key in JWK <xref target="JWK"/> format
              (not an X.509 certificate value).
              The <spanx style="verb">sub_jwk</spanx> value is a JSON object.
              Use of the <spanx style="verb">sub_jwk</spanx> Claim
              is NOT RECOMMENDED when the OP is not Self-Issued.
              -->
            </t>
          </list>
        </t>

        <t>
          Self-Issued OpenID Provider のレスポンスは, 通常の Implicit Flow のレスポンスに以下の改変をしたものと同じである.
          Implicit Flow のレスポンスなので, 異なる Response Mode が指定されていない限り, レスポンスパラメータは URL フラグメントコンポーネントの中で返される.
        </t>
        <!--
        <t>
          The Self-Issued OpenID Provider response is the same as the normal Implicit Flow
          response with the following refinements.  Since it is an Implicit Flow
          response, the response parameters will be returned in the URL fragment component,
          unless a different Response Mode was specified.
        </t>
        -->
        <t>
          <list style="numbers">
            <t>
              <spanx style="verb">iss</spanx> (issuer) Claim Value が
              <spanx style="verb">https://self-issued.me</spanx> である.
            </t>
            <!--
            <t>
              The <spanx style="verb">iss</spanx> (issuer) Claim Value is
              <spanx style="verb">https://self-issued.me</spanx>.
            </t>
            -->
            <t>
              <spanx style="verb">sub_jwk</spanx> Claim が存在し, その値が ID Token の署名を検証するための公開鍵となっている.
            </t>
            <!--
            <t>
              A <spanx style="verb">sub_jwk</spanx> Claim is present, with its value being
              the public key used to check the signature of the ID Token.
            </t>
            -->
            <t>
              <spanx style="verb">sub</spanx> (subject) Claim の値は
              <spanx style="verb">sub_jwk</spanx> Claim に含まれる鍵の thumbprint を base64url エンコードした値である.
              この Thumbprint は, JWK のメンバーのうち REQUIRED なもののみをそのメンバー名の辞書順にソートし, 空白や改行なしで結合した UTF-8 表現のオクテットを生成し, その SHA-256 ハッシュを計算することで求める.
              <spanx style="verb">kty</spanx> の値が
              <spanx style="verb">RSA</spanx> である時, キーの値は
              <spanx style="verb">n</spanx> と,
              <spanx style="verb">e</spanx> が順に結合されたものである.
              <spanx style="verb">kty</spanx> の値が
              <spanx style="verb">EC</spanx> である時, キーの値は
              <spanx style="verb">crv</spanx> と,
              <spanx style="verb">x</spanx> と,
              <spanx style="verb">y</spanx> が順に結合されたものである.
              これは JWK Thumbprint <xref target="JWK.Thumbprint"/> に定義されている.
            </t>
            <!--
            <t>
              The <spanx style="verb">sub</spanx> (subject) Claim
              value is the base64url encoded representation of
              the thumbprint of
              the key in the <spanx style="verb">sub_jwk</spanx> Claim.
              This thumbprint value is computed as
              the SHA-256 hash of
              the octets of the UTF-8 representation of
              a JWK constructed containing only the REQUIRED members to represent the key,
              with the member names sorted into lexicographic order,
              and with no white space or line breaks.
              For instance,
              when the <spanx style="verb">kty</spanx> value is
              <spanx style="verb">RSA</spanx>, the member names
              <spanx style="verb">e</spanx>,
              <spanx style="verb">kty</spanx>, and
              <spanx style="verb">n</spanx>
              are the ones present in the constructed JWK used
              in the thumbprint computation and appear in that order;
              when the <spanx style="verb">kty</spanx> value is
              <spanx style="verb">EC</spanx>, the member names
              <spanx style="verb">crv</spanx>,
              <spanx style="verb">kty</spanx>,
              <spanx style="verb">x</spanx>, and
              <spanx style="verb">y</spanx>
              are present in that order.
              Note that this thumbprint calculation is the same as that defined in
              the JWK Thumbprint <xref target="JWK.Thumbprint"/> specification.
            </t>
            -->
            <t>
              UserInfo エンドポイントへアクセスするための Access Token は返されないため,
              すべての Claim は ID Token の中で返されなければならない (MUST).
            </t>
            <!--
            <t>
              No Access Token is returned for accessing a UserInfo Endpoint,
              so all Claims returned MUST be in the ID Token.
            </t>
            -->
          </list>
        </t>
      </section>

      <section anchor="SelfIssuedValidation" title="Self-Issued ID Token Validation">

        <t>
          返された ID Token の検証を行うため, Client は以下のことを実施しなくてはならない (MUST).
        </t>
        <!--
        <t>
          To validate the ID Token received, the Client MUST do the following:
        </t>
        -->
        <t>
          <list style="numbers">
            <t>
              Client は, <spanx style="verb">iss</spanx> (issuer) Claim の値が <spanx style="verb">https://self-isued.me</spanx> であることを検証しなければならない (MUST).
              もし <spanx style="verb">iss</spanx> が別の値を含んでいた場合,
              その ID Token は Self-Issued ではないので,
              <xref target="IDTokenValidation"/>
              に沿って検証されなければならない (MUST).
            </t>
            <!--
            <t>
              The Client MUST validate that the value of the <spanx style="verb">iss</spanx> (issuer) Claim is <spanx style="verb">https://self-isued.me</spanx>.
              If <spanx style="verb">iss</spanx> contains a different value,
              the ID Token is not Self-Issued, and instead
              it MUST be validated according to
              <xref target="IDTokenValidation"/>.
            </t>
            -->
            <t>
              Client は, Client がAuthentication Request で送信した <spanx style="verb">redirect_uri</spanx> の値が, <spanx style="verb">aud</spanx> Claim にオーディエンスとして含まれていることを検証しなければならない (MUST).
            </t>
            <!--
            <t>
              The Client MUST validate that the
              <spanx style="verb">aud</spanx> (audience) Claim
              contains the value of the <spanx style="verb">redirect_uri</spanx>
              that the Client sent in the Authentication Request as an audience.
            </t>
            -->
            <t>
              Client は, JOSE Header の <spanx style="verb">alg</spanx> Header Parameter に指定されたアルゴリズムを使い <xref target="JWS">JWS</xref> に沿って ID Token の署名を検証しなければならない (MUST).
              その際, <spanx style="verb">sub_jwk</spanx> Claim の中の鍵を使用する;
              鍵は JWK フォーマットの鍵である (X.509 証明書ではない).
            </t>
            <!--
            <t>
              The Client MUST validate the signature of the ID Token according to
              <xref target="JWS">JWS</xref> using the algorithm specified in the
              <spanx style="verb">alg</spanx> Header Parameter of the JOSE Header,
              using the key in the <spanx style="verb">sub_jwk</spanx> Claim;
              the key is a bare key in JWK format
              (not an X.509 certificate value).
            </t>
            -->
            <t>
              <spanx style="verb">alg</spanx> の値はデフォルトとしては <spanx style="verb">RS256</spanx> であるべきである (SHOULD).
              この値は <spanx style="verb">ES256</spanx> であってもよい (MAY).
            </t>
            <!--
            <t>
              The <spanx style="verb">alg</spanx> value SHOULD be the default of
              <spanx style="verb">RS256</spanx>.
              It MAY also be <spanx style="verb">ES256</spanx>.
            </t>
            -->
            <t>
              Client は <spanx style="verb">sub</spanx> Claim が <spanx style="verb">sub_jwk</spanx> Claim に含まれる鍵の Thumbprint の base64url エンコード値であることを検証しなければならない (MUST).
              <xref target="SelfIssuedResponse"/> 参照.
            </t>
            <!--
            <t>
              The Client MUST validate that the <spanx style="verb">sub</spanx> Claim
              value is the base64url encoded representation of
              the thumbprint of
              the key in the <spanx style="verb">sub_jwk</spanx> Claim,
              as specified in <xref target="SelfIssuedResponse"/>.
            </t>
            -->
            <t>
              現在時刻が <spanx style="verb">exp</spanx> Claim より前でなければならない (MUST).
              (時計のズレを考慮した多少の猶予は許容される)
            </t>
            <!--
            <t>
              The current time MUST be before the time represented by the
              <spanx style="verb">exp</spanx> Claim
              (possibly allowing for some small leeway to account for clock skew).
            </t>
            -->
            <t>
              <spanx style="verb">iat</spanx> Claim が現在時刻からあまりにかけ離れている場合は, そのトークンを拒絶してもよい.
              これにより nonce の保存期間を制限することができる.
              適切な閾値は, Client ごとにことなる.
            </t>
            <!--
            <t>
              The <spanx style="verb">iat</spanx> Claim can be used to reject tokens that
              were issued too far away from the current time, limiting the amount of
              time that nonces need to be stored to prevent attacks.
              The acceptable range is Client specific.
            </t>
            -->
            <t>
              nonce が Authentication Request で送られた場合,
              <spanx style="verb">nonce</spanx> Claim が存在し,
              その値は Authentication Request で送られたものと同じ値であることを検証されなくてはならない (MUST).
              Client はリプレイアタックを防ぐため <spanx style="verb">nonce</spanx> の値を検証すべきである (SHOULD).
              リプレイアタックを検知するための詳細は方法は Client ごとに固有である.
            </t>
            <!--
            <t>
              If a nonce value was sent in the Authentication Request,
              a <spanx style="verb">nonce</spanx> Claim MUST be present
              and its value checked to verify that
              it is the same value as the one that was sent in the Authentication Request.
              The Client SHOULD check the <spanx style="verb">nonce</spanx> value
              for replay attacks.
              The precise method for detecting replay attacks is Client specific.
            </t>
            -->
          </list>
        </t>
        <figure>
          <preamble>以下は Self-Issued ID Token を base64url デコードした参考例である.
          (改行は掲載上の都合による)</preamble>
          <!--
          <preamble>The following is a non-normative example of a base64url decoded
          Self-Issued ID Token
          (with line wraps within values for display purposes only):</preamble>
          -->

          <artwork><![CDATA[
  {
   "iss": "https://self-issued.me",
   "sub": "wBy8QvHbPzUnL0x63h13QqvUYcOur1X0cbQpPVRqX5k",
   "aud": "https://client.example.org/cb",
   "nonce": "n-0S6_WzA2Mj",
   "exp": 1311281970,
   "iat": 1311280970,
   "sub_jwk": {
     "kty":"RSA",
     "n": "0vx7agoebGcQSuuPiLJXZptN9nndrQmbXEps2aiAFbWhM78LhWx
     4cbbfAAtVT86zwu1RK7aPFFxuhDR1L6tSoc_BJECPebWKRXjBZCiFV4n3oknjhMs
     tn64tZ_2W-5JsGY4Hc5n9yBXArwl93lqt7_RN5w6Cf0h4QyQ5v-65YGjQR0_FDW2
     QvzqY368QQMicAtaSqzs8KJZgnYb9c7d0zgdAZHzu6qMQvRL5hajrn1n91CbOpbI
     SD08qNLyrdkt-bFTWhAI4vMQFh6WeZu0fM4lFd2NcRwr3XPksINHaQ-G_xBniIqb
     w0Ls1jF44-csFCur-kEgU8awapJzKnqDKgw",
     "e":"AQAB"
    }
  }
]]></artwork>
        </figure>

      </section>
    </section>

    <section anchor="SubjectIDTypes" title="Subject Identifier Types">
      <t>
        Subject Identifier は,
        Client によって利用されることを意図している,
        Issuer 内で一意な再割り当てされない End-User の識別子である.
        当仕様では, 2つの Subject Identifier タイプを定義している:
        <!--
        A Subject Identifier is a locally unique and never
        reassigned identifier within the Issuer for the End-User,
        which is intended to be consumed by the Client.
        Two Subject Identifier types are defined by this specification:
        -->

        <list style="hanging">
          <t hangText="public">
            <vspace/>
            全ての Client に対し同一の <spanx style="verb">sub</spanx> (subject) 値を提供する.
            これはプロバイダのディスカバリドキュメント内の
            <spanx style="verb">subject_types_supported</spanx> 要素が
            存在しない場合のデフォルトである.
            <!--
            This provides the same <spanx style="verb">sub</spanx> (subject) value to all Clients.
            It is the default if the provider has no <spanx style="verb">subject_types_supported</spanx>
            element in its discovery document.
            -->
          </t>
          <t hangText="pairwise">
            <vspace/>
            各々の Client に対し異なる <spanx style="verb">sub</spanx> 値を提供する.
            そのためClient は, 許可なくして End-User の行動を集約して関連づけることが不可能となる.
            <!--
            This provides a different <spanx style="verb">sub</spanx>
            value to each Client, so as not to enable Clients to correlate
            the End-User's activities without permission.
            -->
          </t>
        </list>
      </t>
      <t>
        OpenID Provider の Discovery ドキュメントには,
        サポートしている Subject Identifier のタイプのリストが
        <spanx style="verb">subject_types_supported</spanx>
        要素に記載されているべきである (SHOULD).
        一つ以上のタイプがリストされている場合,
        Client は Registration 時に
        <spanx style="verb">subject_type</spanx> パラメータを用いて,
        任意のタイプを選択してもよい (MAY).
      </t>
      <!--
      <t>
        The OpenID Provider's Discovery document SHOULD list
        its supported Subject Identifier types in the
        <spanx style="verb">subject_types_supported</spanx> element.
        If there is more than one type listed in the array, the Client MAY elect to
        provide its preferred identifier type using the
        <spanx style="verb">subject_type</spanx> parameter during Registration.
      </t>
      -->

      <section anchor="PairwiseAlg" title="Pairwise Identifier Algorithm">

        <t>
          pairwise Subject Identifier を使用する際,
          OpenID Provider は, 各々の Sector Identifier 毎に一意な
          <spanx style="verb">sub</spanx> (subject) 値を計算しなければならない (MUST).
          Subject Identifier 値は, OpenID Provider 以外の Party にとって,
          可逆であってはならない (MUST NOT).
        </t>
        <!--
        <t>
          When pairwise Subject Identifiers are used,
          the OpenID Provider MUST calculate a unique
          <spanx style="verb">sub</spanx> (subject) value for each
          Sector Identifier.  The Subject Identifier value MUST NOT be reversible
          by any party other than the OpenID Provider.
        </t>
        -->

        <t>
          pairwise <spanx style="verb">sub</spanx> 値を使用し,
          かつ <xref target="OpenID.Registration">Dynamic Client Registration</xref>
          をサポートする Provider は,
          <spanx style="verb">sector_identifier_uri</spanx> パラメータを使用すべきである (SHOULD).
          これは, 共通の管理下にあるウェブサイト群に対し,
          個々のドメイン名とは独立して pairwise <spanx style="verb">sub</spanx> 値の
          一貫性を保持する手段を提供する.
          また, Client に対し,
          全ユーザを再登録させることなしに <spanx style="verb">redirect_uri</spanx> を変更する手段も提供する.
        </t>
        <!--
        <t>
          Providers that use pairwise <spanx style="verb">sub</spanx> values
          and support
          <xref target="OpenID.Registration">Dynamic Client Registration</xref>
          SHOULD use the <spanx style="verb">sector_identifier_uri</spanx> parameter.
          It provides a way for a group of websites under common administrative
          control to have consistent pairwise <spanx style="verb">sub</spanx>
          values independent of the individual domain names.
          It also provides a way for Clients to change
          <spanx style="verb">redirect_uri</spanx> domains without having to
          reregister all of their users.
        </t>
        -->

        <t>
          Client が <xref target="OpenID.Registration">Dynamic Client Registration</xref> で
          <spanx style="verb">sector_identifier_uri</spanx> の値を提供しなかった場合,
          pairwise identifier の計算に用いる Sector Identifier は,
          登録された <spanx style="verb">redirect_uri</spanx> のホスト部である.
          登録された <spanx style="verb">redirect_uris</spanx> に複数のホスト名が存在した場合,
          Client は <spanx style="verb">sector_identifier_uri</spanx> を登録しなければならない (MUST).
        </t>
        <!--
        <t>If the Client has not provided a value for
        <spanx style="verb">sector_identifier_uri</spanx> in
        <xref target="OpenID.Registration">Dynamic Client Registration</xref>,
        the Sector Identifier
        used for pairwise identifier calculation is the host component
        of the registered <spanx style="verb">redirect_uri</spanx>.
        If there are multiple hostnames in the registered
        <spanx style="verb">redirect_uris</spanx>, the Client MUST register a
        <spanx style="verb">sector_identifier_uri</spanx>.</t>
        -->

        <t>
          <spanx style="verb">sector_identifier_uri</spanx> が提供された場合,
          URL のホスト部が pairwise identifier の計算に用いる Sector Identifier として使用される.
          <spanx style="verb">sector_identifier_uri</spanx> の値は,
          <spanx style="verb">redirect_uri</spanx> 値の配列を含んだ JSON ファイルを示す <spanx style="verb">https</spanx> スキームの URL でなければならない (MUST).
          登録された <spanx style="verb">redirect_uris</spanx> の値は,
          配列の要素に含まれていなければならない (MUST).
        </t>
        <!--
        <t>When a <spanx style="verb">sector_identifier_uri</spanx>
        is provided, the host component of that URL is used as
        the Sector Identifier for the pairwise identifier calculation.
        The value of the <spanx style="verb">sector_identifier_uri</spanx>
        MUST be a URL using the <spanx style="verb">https</spanx> scheme that points to
        a JSON file containing an array of
        <spanx style="verb">redirect_uri</spanx> values.
        The values of the registered <spanx style="verb">redirect_uris</spanx>
        MUST be included in the elements of the array.
        </t>
        -->

        <t>
          OpenID Provider による pairwise Subject identifier の計算には,
          以下の特性を持つ任意のアルゴリズムを用いることが出来る:
          <!--
          Any algorithm with the following properties
          can be used by OpenID Providers to
          calculate pairwise Subject Identifiers:
          -->

          <list style="symbols">
            <t>
              Subject Identifier 値が, OpenID Provider 以外の Party にとって,
              可逆であってはならない (MUST NOT).
            </t>
            <t>
              異なる Sector Identifier 値は,
              異なる Subject Identifier 値にならなければならない (MUST).
            </t>
            <t>
              同じ入力に対して必ず同じ結果となる決定的アルゴリズムでなければならない (MUST).
            </t>
          </list>
          <!--
          <list style="symbols">
            <t>
              The Subject Identifier value MUST NOT be reversible
              by any party other than the OpenID Provider.
            </t>
            <t>
              Distinct Sector Identifier values MUST result in
              distinct Subject Identifier values.
            </t>
            <t>
              The algorithm MUST be deterministic.
            </t>
          </list>
          -->
        </t>
        <t>
          3つの手法例を以下に示す:
          <!--
          Three example methods are:
          -->

          <list style="numbers">

            <t>
              Sector Identifierを, ローカルアカウントIDおよび Provider によって秘密にされているソルト値と連結する.
              そして連結した文字列を適切なアルゴリズムによってハッシュ化する.
              <vspace blankLines="1"/>
              <spanx style="verb">sub</spanx> = SHA-256 ( sector_identifier || local_account_id || salt ) を計算する.
              <vspace blankLines="1"/>
            </t>
            <!--
            <t>
              The Sector Identifier can be concatenated with a local account ID and a salt
              value that is kept secret by the Provider. The concatenated string is then
              hashed using an appropriate algorithm.
              <vspace blankLines="1"/>
              Calculate <spanx style="verb">sub</spanx> = SHA-256 ( sector_identifier || local_account_id || salt ).
              <vspace blankLines="1"/>
            </t>
            -->

            <t>
              Sector Identifierを, ローカルアカウントIDおよび Provider によって秘密にされているソルト値と連結する.
              そして連結した文字列を適切なアルゴリズムによって暗号化する.
              <vspace blankLines="1"/>
              <spanx style="verb">sub</spanx> = AES-128 ( sector_identifier || local_account_id || salt ) を計算する.
              <vspace blankLines="1"/>
            </t>
            <!--
            <t>
              The Sector Identifier can be concatenated with a local account ID and a salt
              value that is kept secret by the Provider. The concatenated string is then
              encrypted using an appropriate algorithm.
              <vspace blankLines="1"/>
              Calculate <spanx style="verb">sub</spanx> = AES-128 ( sector_identifier || local_account_id || salt ).
              <vspace blankLines="1"/>
            </t>
            -->

            <t>
              Issuer は, Sector Identifier とローカルアカウントIDのペアに対し, Globally Unique Identifier (GUID) を作成する.
            </t>
            <!--
            <t>
              The Issuer creates a Globally Unique Identifier (GUID) for the pair of
              Sector Identifier and local account ID and stores this value.
            </t>
            -->

          </list>
        </t>

      </section>
    </section>

    <section anchor="ClientAuthentication" title="Client Authentication">

      <t>
        ここでは, Client が Token Endpoint にアクセスする際に, Authorization Server に対して自身を認証する Client Authentication 方法を定義する.
        Client Registration で RP (Client) は Client Authentication 方法を登録できる (MAY).
        もし認証方法が登録されていない場合, デフォルトで <spanx style="verb">client_secret_basic</spanx> を用いる.
      </t>
      <!--
      <t>
        This section defines a set of Client Authentication methods
        that are used by Clients to authenticate to the Authorization Server
        when using the Token Endpoint.
        During Client Registration, the RP (Client) MAY register a Client Authentication method.
        If no method is registered, the default method is <spanx style="verb">client_secret_basic</spanx>.
      </t>
      -->
      <t>
        Client Authentication 方法は以下の通りである.
      </t>
      <!--
      <t>These Client Authentication methods are:</t>
      -->

      <t>
        <list style="hanging">

          <t hangText="client_secret_basic">
            <vspace/>
            Authorization Server から <spanx style='verb'>client_secret</spanx> 値を受け取った Client は, <xref target="RFC6749">OAuth 2.0</xref> Section 3.2.1 に従い, HTTP Basic 認証スキーマを利用して Authorization Server に対して自身を認証する.
            <!--
            Clients that have received a <spanx style='verb'>client_secret</spanx> value
            from the Authorization Server authenticate with the Authorization Server
            in accordance with Section 2.3.1 of <xref
            target="RFC6749">OAuth 2.0</xref> using the HTTP Basic authentication scheme.
            -->
          </t>

          <t hangText="client_secret_post">
            <vspace/>
            Authorization Server から <spanx style='verb'>client_secret</spanx> 値を受け取った Client は, <xref target="RFC6749">OAuth 2.0</xref> Section 3.2.1 に従い, Client Credential をリクエストボディに含めて Authorization Server に対して自身を認証する.
            <!--
            Clients that have received a <spanx style='verb'>client_secret</spanx> value
            from the Authorization Server, authenticate with the Authorization Server
            in accordance with Section 2.3.1 of <xref
            target="RFC6749">OAuth 2.0</xref> by including the Client Credentials in the request body.
            -->
          </t>

          <t hangText="client_secret_jwt">
            <vspace/>
            Authorization Server から <spanx style='verb'>client_secret</spanx> 値を受け取った Client は, HMAC SHA-256 等の HMAC SHA アルゴリズムを利用して JWT を生成する.
            HMAC (Hash-based Message Authentication Code) は, <spanx style='verb'>client_secret</spanx> の UTF-8 オクテットを共通鍵として利用して計算される.
            <!--
            Clients that have received a <spanx style='verb'>client_secret</spanx> value
            from the Authorization Server create a JWT using an
            HMAC SHA algorithm, such as HMAC SHA-256.
            The HMAC (Hash-based Message Authentication Code) is calculated using
            the octets of the UTF-8 representation of
            the <spanx style='verb'>client_secret</spanx> as the shared key.
            -->
          </t>
          <t>
            Client は <xref target="OAuth.JWT">JSON Web Token (JWT) Profile for OAuth 2.0 Client Authentication and Authorization Grants</xref> および <xref target="OAuth.Assertions">Assertion Framework for OAuth 2.0 Client Authentication and Authorization Grants</xref> に従い認証を行う.
            JWT は以下の必須 (REQUIRED) の Claim Value を含まねばならず (MUST), 任意 (OPTIONAL) な Claim Value を含んでもよい (MAY).
            <!--
            The Client authenticates in accordance with <!-- --><!-- Section 2.2 of --><!-- <xref
            target="OAuth.JWT">JSON Web Token (JWT) Profile for OAuth 2.0 Client Authentication and Authorization Grants</xref> and
            <xref target="OAuth.Assertions">Assertion Framework for OAuth 2.0 Client Authentication and Authorization Grants</xref>.
            The JWT MUST contain the following REQUIRED Claim Values and
            MAY contain the following OPTIONAL Claim Values:
            -->
          </t>

          <t>
            <list style="hanging">
              <t hangText="iss">
                <vspace/>
                REQUIRED.
                Issuer.
                OAuth Client の <spanx style="verb">client_id</spanx> を含まねばならない (MUST).
                <!--
                REQUIRED.
                Issuer.
                This MUST contain the <spanx style="verb">client_id</spanx> of the OAuth Client.
                -->
              </t>

              <t hangText="sub">
                <vspace/>
                REQUIRED.
                Subject.
                OAuth Client の <spanx style="verb">client_id</spanx> を含まねばならない (MUST).
                <!--
                REQUIRED.
                Subject.
                This MUST contain the <spanx style="verb">client_id</spanx> of the OAuth Client.
                -->
              </t>

              <t hangText="aud">
                <vspace/>
                REQUIRED.
                Audience.
                <spanx style="verb">aud</spanx> (audience) Claim.
                Authorization Server をオーディエンスとして指定する.
                Authorization Server は自身がオーディエンスに含まれることを検証しなければならない (MUST).
                Audience は Authorization Server の Token Endpoint URL にすべきである (SHOULD).
                <!--
                REQUIRED.
                Audience.
                The <spanx style="verb">aud</spanx> (audience) Claim.
                Value that identifies the Authorization Server as an intended audience.
                The Authorization Server MUST verify that it is an intended audience
                for the token.
                The Audience SHOULD be the URL of the
                Authorization Server's Token Endpoint.
                -->
              </t>

              <t hangText="jti">
                <vspace/>
                REQUIRED.
                JWT ID.
                トークンごとにユニークな識別子.
                トークンの再利用を防ぐために利用される.
                これらのトークンは, 再利用条件について関係者での合意を得られていない限り, 2度以上利用しないようにしなければならない (MUST).
                そのような合意の詳細については本仕様の定めるところではない.
                <!--
                REQUIRED.
                JWT ID.
                A unique identifier for the token,
                which can be used to prevent reuse of the token.
                These tokens MUST only be used once,
                unless conditions for reuse were negotiated between the parties;
                any such negotiation is beyond the scope of this specification.
                -->
              </t>

              <t hangText="exp">
                <vspace/>
                REQUIRED.
                ID Token の有効期限.
                この時刻を超えて当該 ID Token を受理してはならない (MUST NOT).
                <!--
                REQUIRED.
                Expiration time on or after which the ID Token MUST NOT be
                accepted for processing.
                -->
              </t>

              <t hangText="iat">
                <vspace/>
                OPTIONAL.
                JWT 発行時刻.
                <!--
                OPTIONAL.
                Time at which the JWT was issued.
                -->
              </t>
            </list>
          </t>

          <t>
            この JWT には, 他の Claim を含めても良い (MAY).
            理解できない Claim は無視すること (MUST).
          </t>
          <!--
          <t>
            The JWT MAY contain other Claims.
            Any Claims used that are not understood MUST be ignored.
          </t>
          -->

          <t>
            認証トークンは <xref target="OAuth.Assertions"/> の <spanx style='verb'>client_assertion</spanx> パラメータとして送信すること (MUST).
          </t>
          <!--
          <t>The authentication token MUST be sent as the value of the
          <xref target="OAuth.Assertions"/>
          <spanx style='verb'>client_assertion</spanx> parameter.</t>
          -->

          <t>
            <xref target="OAuth.Assertions"/> の <spanx style='verb'>client_assertion_type</spanx> パラメータには, <xref target="OAuth.JWT"/> の通りに "urn:ietf:params:oauth:client-assertion-type:jwt-bearer" とすること.
          </t>
          <!--
          <t>The value of the
          <xref target="OAuth.Assertions"/>
          <spanx style='verb'>client_assertion_type</spanx> parameter
          MUST be "urn:ietf:params:oauth:client-assertion-type:jwt-bearer",
          per <xref target="OAuth.JWT"/>.</t>
          -->

          <t hangText="private_key_jwt">
            <vspace/>
            公開鍵を登録済の Client は, そのペアとなる秘密鍵で JWT に署名を行っても良い.
            Client は <xref target="OAuth.JWT">JSON Web Token (JWT) Profile for OAuth 2.0 Client Authentication and Authorization Grants</xref> および <xref target="OAuth.Assertions">Assertion Framework for OAuth 2.0 Client Authentication and Authorization Grants</xref> に従い認証すること.
            JWT は以下の必須 (REQUIRED) の Claim Value を含まねばならず (MUST), 任意 (OPTIONAL) な Claim Value を含んでもよい (MAY).
            <!--
            Clients that have registered a public key sign a JWT using
            that key.
            The Client authenticates in accordance with < !-- Section 2.2 of -- > <xref
            target="OAuth.JWT">JSON Web Token (JWT) Profile for OAuth 2.0 Client Authentication and Authorization Grants</xref> and
            <xref target="OAuth.Assertions">Assertion Framework for OAuth 2.0 Client Authentication and Authorization Grants</xref>.
            The JWT MUST contain the following REQUIRED Claim Values and
            MAY contain the following OPTIONAL Claim Values:
            -->
          </t>

          <t>
            <list style="hanging">
              <t hangText="iss">
                <vspace/>
                REQUIRED.
                Issuer.
                OAuth Client の <spanx style="verb">client_id</spanx> を含まねばならない (MUST).
                <!--
                REQUIRED.
                Issuer.
                This MUST contain the <spanx style="verb">client_id</spanx> of the OAuth Client.
                -->
              </t>

              <t hangText="sub">
                <vspace/>
                REQUIRED.
                Subject.
                OAuth Client の <spanx style="verb">client_id</spanx> を含まねばならない (MUST).
                <!--
                REQUIRED.
                Subject.
                This MUST contain the <spanx style="verb">client_id</spanx> of the OAuth Client.
                -->
              </t>

              <t hangText="aud">
                <vspace/>
                REQUIRED.
                Audience.
                <spanx style="verb">aud</spanx> (audience) Claim.
                Authorization Serve をオーディエンスとして指定する.
                Authorization Server は自身がオーディエンスに含まれることを検証しなければならない (MUST).
                Audience は Authorization Server の Token Endpoint URL にすべきである (SHOULD).
                <!--
                REQUIRED.
                Audience.
                The <spanx style="verb">aud</spanx> (audience) Claim.
                Value that identifies the Authorization Server as an intended audience.
                The Authorization Server MUST verify that it is an intended audience
                for the token.
                The Audience SHOULD be the URL of the
                Authorization Server's Token Endpoint.
                -->
              </t>

              <t hangText="jti">
                <vspace/>
                REQUIRED.
                JWT ID.
                トークンごとにユニークな識別子.
                トークンの再利用を防ぐために利用される.
                これらのトークンは, 再利用条件について関係者での合意を得られていない限り, 2度以上利用しないようにしなければならない (MUST).
                そのような合意の詳細については本仕様の定めるところではない.
                <!--
                REQUIRED.
                JWT ID.
                A unique identifier for the token,
                which can be used to prevent reuse of the token.
                These tokens MUST only be used once,
                unless conditions for reuse were negotiated between the parties;
                any such negotiation is beyond the scope of this specification.
                -->
              </t>

              <t hangText="exp">
                <vspace/>
                REQUIRED.
                ID Token の有効期限.
                この時刻を超えて当該 ID Token を受理してはならない (MUST NOT).
                <!--
                REQUIRED.
                Expiration time on or after which the ID Token MUST NOT be
                accepted for processing.
                -->
              </t>

              <t hangText="iat">
                <vspace/>
                OPTIONAL.
                JWT 発行時刻.
                <!--
                OPTIONAL.
                Time at which the JWT was issued.
                -->
              </t>
            </list>
          </t>

          <t>
            この JWT には, 他の Claim を含めても良い (MAY).
            理解できない Claim は無視すること (MUST).
          </t>
          <!--
          <t>
            The JWT MAY contain other Claims.
            Any Claims used that are not understood MUST be ignored.
          </t>
          -->

          <t>
            認証トークンは <xref target="OAuth.Assertions"/> の <spanx style='verb'>client_assertion</spanx> パラメータとして送信すること (MUST).
          </t>
          <!--
          <t>The authentication token MUST be sent as the value of the
          <xref target="OAuth.Assertions"/>
          <spanx style='verb'>client_assertion</spanx> parameter.</t>
          -->

          <t>
            <xref target="OAuth.Assertions"/> の <spanx style='verb'>client_assertion_type</spanx> パラメータには, <xref target="OAuth.JWT"/> の通りに "urn:ietf:params:oauth:client-assertion-type:jwt-bearer" とすること.
          </t>
          <!--
          <t>The value of the
          <xref target="OAuth.Assertions"/>
          <spanx style='verb'>client_assertion_type</spanx> parameter
          MUST be "urn:ietf:params:oauth:client-assertion-type:jwt-bearer",
          per <xref target="OAuth.JWT"/>.</t>
          -->

          <t>
            <figure>
              <preamble>
                以下に例を示す.
                (改行は掲載上の都合による)
              </preamble>
              <!--
              <preamble>
                For example
                (with line wraps within values for display purposes only):
              </preamble>
              -->
              <artwork><![CDATA[
  POST /token HTTP/1.1
  Host: server.example.com
  Content-Type: application/x-www-form-urlencoded

  grant_type=authorization_code&
    code=i1WsRn1uB1&
    client_id=s6BhdRkqt3&
    client_assertion_type=
    urn%3Aietf%3Aparams%3Aoauth%3Aclient-assertion-type%3Ajwt-bearer&
    client_assertion=PHNhbWxwOl ... ZT
]]></artwork>
            </figure>
          </t>

          <t hangText="none">
            <vspace/>
            Client は Token Endpoint での認証を行わない.
            これには, Implicit Flow を使う (よって Token Endpoint 自体を利用しない) 場合と, Token Endpoint は利用するが Client Secret を持たない Public Client である場合, およびその他の何らかの認証手段を用いる場合がある.
            <!--
            The Client does not authenticate itself at the Token Endpoint,
            either because it uses only the Implicit Flow (and so does not use the Token Endpoint)
            or because it is a Public Client with no Client Secret or other authentication mechanism.
            -->
          </t>
        </list>
      </t>

    </section>

    <section anchor="SigEnc" title="Signatures and Encryption">
      <t>
        メッセージ送信経路によって, メッセージの完全性は保証されないこともあり, メッセージ送信者の認証も行われないこともある.
        これらのリスクを軽減するため, ID Token, UserInfo Response, Request Object および Client Authentication JWT は <xref target="JWS">JSON Web Signature (JWS)</xref> によってそのコンテンツに対して署名することができる.
        メッセージ秘匿性を得るには, <xref target="JWE">JSON Web Encryption (JWE)</xref> を用いてコンテンツを暗号化する.
      </t>
      <!--
      <t>
        Depending on the transport through which the messages are sent, the
        integrity of the message might not be guaranteed and the originator of the
        message might not be authenticated. To mitigate these risks,
        ID Token, UserInfo Response, Request Object,
        and Client Authentication JWT values can utilize
        <xref target="JWS">JSON Web Signature (JWS)</xref> to sign their contents.
        To achieve message confidentiality, these values can also use
        <xref target="JWE">JSON Web Encryption (JWE)</xref> to encrypt their contents.
      </t>
      -->
      <t>
        メッセージに署名と暗号化双方を適用する場合, <xref target="SigningOrder"/> に従い, まず先に署名を行いその後暗号化すること (MUST).
        結果はネストした JWT になる (<xref target="JWT"/> 参照).
        JWE の暗号手法は全て完全性チェックを含むことに注意すること.
      </t>
      <!--
      <t>
        When the message is both signed and encrypted, it MUST be
        signed first and then encrypted, per <xref target="SigningOrder"/>,
        with the result being a Nested JWT, as specified in <xref target="JWT"/>.
        Note that all JWE encryption methods perform integrity checking.
      </t>
      -->
      <t>
        OP は自身がサポートする署名および暗号化アルゴリズムを Discovery ドキュメント中で示すか, その他の方法でそれらを告知しても良い.
        RP は自身が要求する署名および暗号化アルゴリズムを Dynamic Registration リクエスト中に指定するか, その他の方法でそれらを告知しても良い.
      </t>
      <!--
      <t>
        The OP advertises its supported signing and encryption algorithms
        in its Discovery document,
        or may supply this information by other means.
        The RP declares its required signing and encryption algorithms
        in its Dynamic Registration request,
        or may communicate this information by other means.
      </t>
      -->
      <t>
        OP は自身の公開鍵を Discovery ドキュメント中で示すか, その他の方法でそれを告知しても良い.
        RP は自身の公開鍵を Dynamic Registration リクエスト中に指定するか, その他の方法でそれを告知しても良い.
      </t>
      <!--
      <t>
        The OP advertises its public keys
        via its Discovery document,
        or may supply this information by other means.
        The RP declares its public keys
        via its Dynamic Registration request,
        or may communicate this information by other means.
      </t>
      -->

      <section anchor="Signing" title="Signing">
        <t>
          署名者は受信者がサポートするアルゴリズムを元に署名アルゴリズムを選択しなければならない (MUST).
        </t>
        <!--
        <t>
          The signing party MUST select a signature algorithm
          based on the algorithms supported by the recipient.
        </t>
        -->

        <t>
          <list style="hanging">
            <t hangText="Asymmetric Signatures">
              <vspace/>
              RSA および ECDSA 署名を利用する場合, JWS ヘッダーの <spanx style="verb">alg</spanx> パラメータ値には, <xref target="JWA">JSON Web Algorithms</xref> に従い適切な値を指定しなければならない (MUST).
              署名に使われた秘密鍵は, 署名検証に用いられる公開鍵と関連づいている必要があり, その公開鍵は署名者が JWK Set ドキュメントとして公開すること (MUST).
              JWK Set ドキュメントに複数の鍵が含まれる場合, JWS ヘッダーに <spanx style="verb">kid</spanx> 値を含まねばならない (MUST).
              鍵は署名に使えるものでなければならない (MUST).
              <!--
              When using RSA or ECDSA Signatures,
              the <spanx style="verb">alg</spanx> Header Parameter value
              of the JOSE Header MUST be set to an appropriate algorithm
              as defined in <xref target="JWA">JSON Web Algorithms</xref>.
              The private key used to sign the content MUST be associated with
              a public key used for signature verification published by the sender
              in its JWK Set document.
              If there are multiple keys in the referenced JWK Set document, a
              <spanx style="verb">kid</spanx> value MUST be provided in the JOSE Header.
              The key usage of the respective keys MUST support signing.
              -->
            </t>
            <t hangText="Symmetric Signatures">
              <vspace/>
              MAC ベースの署名を利用する場合, JWS ヘッダーの <spanx style="verb">alg</spanx> パラメータ値には, <xref target="JWA">JSON Web Algorithms</xref> に従い MAC アルゴリズムを指定しなければならない (MUST).
              MAC 鍵は <spanx style="verb">client_secret</spanx> の UTF-8 オクテットとする.
              <spanx style="verb">client_secret</spanx> のエントロピー要件に関しては <xref target="SymmetricKeyEntropy"/> を参照すること.
              共通鍵署名は Client Secret を持たない Public Client (Non-Confidential Client) には利用できない (MUST NOT).
              <!--
              When using MAC-based signatures,
              the <spanx style="verb">alg</spanx> Header Parameter value
              of the JOSE Header MUST be set to a MAC algorithm,
              as defined in <xref target="JWA">JSON Web Algorithms</xref>.
              The MAC key used is
              the octets of the UTF-8 representation of
              the <spanx style="verb">client_secret</spanx> value.
              See <xref target="SymmetricKeyEntropy"/> for a discussion of
              entropy requirements for <spanx style="verb">client_secret</spanx> values.
              Symmetric signatures MUST NOT be used by public (non-confidential) Clients
              because of their inability to keep secrets.
              -->
            </t>
          </list>
        </t>
        <t>
          署名付リクエストについての Security Considerations については <xref target="NeedForSignedRequests"/> を参照すること.
        </t>
        <!--
        <t>
          See <xref target="NeedForSignedRequests"/> for Security Considerations
          about the need for signed requests.
        </t>
        -->
        <section anchor="RotateSigKeys" title="Rotation of Asymmetric Signing Keys">
          <t>
            署名鍵のローテーションを行うには, 以下のアプローチに従うこと.
            署名者は <spanx style="verb">jwks_uri</spanx> で指定した場所に JWK Set を公開し, 各メッセージの JWS ヘッダーに <spanx style="verb">kid</spanx> を含める.
            <spanx style="verb">kid</spanx> によって, 検証者はどの鍵を署名検証に用いれば良いか知ることができる.
            ここで <spanx style="verb">jwks_uri</spanx> で公開された JWK Set に定期的に新たな鍵を追加していくことで, 鍵をロールオーバーすることができる.
            署名者は任意のタイミングで新しい鍵の利用を開始し, <spanx style="verb">kid</spanx> 値を用いて検証者に鍵が変わったことを知らせることができる.
            検証者は未知の <spanx style="verb">kid</spanx> を検知した場合は <spanx style="verb">jwks_uri</spanx> にアクセスし, 再び鍵を取得する.
            <spanx style="verb">jwks_uri</spanx> にある JWK Set ドキュメントは, 利用停止から適切な期間, 利用廃止された鍵を含んだままにすべきである (SHOULD).
            それにより鍵の移行がスムーズになる.
          </t>
          <!--
          <t>Rotation of signing keys can be accomplished with the following approach. The signer publishes
          its keys in a JWK Set at its <spanx style="verb">jwks_uri</spanx> location
          and includes the <spanx style="verb">kid</spanx> of the
          signing key in the JOSE Header of each message
          to indicate to the verifier which key is to be used to validate the signature. Keys can be rolled over
          by periodically adding new keys to the JWK Set at the <spanx style="verb">jwks_uri</spanx> location.
          The signer can begin using a new key at its
          discretion and signals the change to the verifier using the <spanx style="verb">kid</spanx> value.
          The verifier knows to go back to the <spanx style="verb">jwks_uri</spanx> location
          to re-retrieve the keys when it sees an unfamiliar
          <spanx style="verb">kid</spanx> value. The JWK Set document at the <spanx style="verb">jwks_uri</spanx>
          SHOULD retain recently decommissioned signing keys for a reasonable period of time to facilitate a
          smooth transition.
          </t>
          -->
        </section>

      </section>

      <section anchor="Encryption" title="Encryption">
        <t>
          暗号化を行う主体は, 受信者がサポートするアルゴリズムを元に, 暗号化アルゴリズムを選択しなければならない (MUST).
        </t>
        <!--
        <t>
          The encrypting party MUST select an encryption algorithm
          based on the algorithms supported by the recipient.
        </t>
        -->
        <t>
          <list style="hanging">

            <t hangText="Asymmetric Encryption: RSA">
              <vspace/>
              公開鍵の暗号化に使う公開鍵は, 受信者が公開する JWK Set ドキュメント中に含まれている公開鍵でなくてはならない (MUST).
              JWK Set ドキュメント中に複数の鍵がある場合は, JWE ヘッダー中に <spanx style="verb">kid</spanx> を含めなければならない (MUST).
              ランダムな Content Encryption Key によって署名付 JWT を暗号化し, その鍵をサポートされている RSA 暗号化アルゴリズムを用いて暗号化すること.
              鍵は暗号化に使えるものでなければならない (MUST).
              <!--
              The public key to which the content was encrypted MUST be
              a public key used for encryption published by the recipient
              in its JWK Set document.
              If there are multiple keys in the referenced JWK Set document, a
              <spanx style="verb">kid</spanx> value MUST be provided in the JOSE Header.
              Use the supported RSA encryption algorithm to encrypt a random
              Content Encryption Key to be used for encrypting
              the signed JWT.
              The key usage of the respective keys MUST include encryption.
              -->
            </t>
            <t hangText="Asymmetric Encryption: Elliptic Curve">
              <vspace/>
              JWE ヘッダーの <spanx style="verb">epk</spanx> に指定するには, 短命な Elliptic Curve 公開鍵を生成する.
              鍵交換に利用するその他の鍵については, 受信者が JWK Set ドキュメント中に公開すること (MUST).
              JWK Set に複数の鍵が含まれる場合は, JWE ヘッダーに <spanx style="verb">kid</spanx> を指定すること.
              署名済 JWT の暗号化に用いる Content Encryption Key の鍵交換には, ECDH-ES アルゴリズムを用いる.
              鍵は暗号化に使えるものでなければならない (MUST).
              <!--
              Create an ephemeral Elliptic Curve public key for the <spanx style="verb">epk</spanx>
              element of the JOSE Header.
              The other public key used for the key agreement computation MUST be
              a public key published by the recipient
              in its JWK Set document.
              If there are multiple keys in the referenced JWK Set document, a
              <spanx style="verb">kid</spanx> value MUST be provided in the JOSE Header.
              Use the ECDH-ES algorithm to agree upon a
              Content Encryption Key to be used for encrypting
              the signed JWT.
              The key usage of the respective keys MUST support encryption.
              -->
            </t>
            <t hangText="Symmetric Encryption">
              <vspace/>
              共通鍵暗号に用いる共通鍵は, <spanx style="verb">client_secret</spanx> UTF-8 オクテット SHA-2 ハッシュから左側を切り詰めたものとする.
              256ビット以下の鍵には SHA-256, 257-384ビットの鍵には SHA-384, 385-512ビットの鍵には SHA-512 を用いること.
              ハッシュ値は, 利用する AES 鍵ラップやその他の暗号化アルゴリズムによって適切な長さになるよう, 左側を切り詰めること.
              例えば <spanx style="verb">A128KW</spanx> を用いる場合は, SHA-256 ハッシュを切り詰めて128ビットを取り出す.
              512ビット以上の鍵が必要になった場合は, <spanx style="verb">client_secret</spanx> から鍵を導出する何らかの方法を, 拡張仕様として定義することになろう.
              共通鍵暗号は Client Secret を持たない Public Client (Non-Confidential Client) には利用できない (MUST NOT).
              <!--
              The symmetric encryption key is derived from the
              <spanx style="verb">client_secret</spanx> value by
              using a left truncated SHA-2 hash of
              the octets of the UTF-8 representation of
              the <spanx style="verb">client_secret</spanx>.
              For keys of 256 or fewer bits, SHA-256 is used;
              for keys of 257-384 bits, SHA-384 is used;
              for keys of 385-512 bits, SHA-512 is used.
              The hash value MUST be left truncated to the appropriate bit length
              for the AES key wrapping or direct encryption algorithm used,
              for instance, truncating the SHA-256 hash
              to 128 bits for <spanx style="verb">A128KW</spanx>.
              If a symmetric key with greater than 512 bits is needed, a different method
              of deriving the key from the <spanx style="verb">client_secret</spanx>
              would have to be defined by an extension.
              Symmetric encryption MUST NOT be used by public (non-confidential) Clients
              because of their inability to keep secrets.
              -->
            </t>
          </list>
        </t>
        <t>
          暗号化リクエストについての Security Considerations については <xref target="NeedForEncryptedRequests"/> を参照すること.
        </t>
        <!--
        <t>
          See <xref target="NeedForEncryptedRequests"/> for Security Considerations
          about the need for encrypted requests.
        </t>
        -->

        <section anchor="RotateEncKeys" title="Rotation of Asymmetric Encryption Keys">
          <t>
            暗号鍵のローテーションは, 署名鍵のローテーションとは異なるプロセスとなる.
            これは暗号化の場合, 暗号化を行う主体からプロセスが開始され, <spanx style="verb">kid</spanx> の変更を鍵交換のサインとして利用できないからである.
            暗号化を行う主体は, JWE ヘッダーに <spanx style="verb">kid</spanx> を指定して, どの鍵で復号すべきかを復号を行う主体に知らせることができる.
            しかしながら暗号化を行う主体は受信者の <spanx style="verb">jwks_uri</spanx> にある JWK Set から, 適切な鍵を選ばねばならない.
          </t>
          <!--
          <t>
            Rotating encryption keys necessarily uses a different process than the one for signing keys because
            the encrypting party starts the process and thus cannot rely on
            a change in <spanx style="verb">kid</spanx> as a signal
            that keys need to change. The encrypting party
            still uses the <spanx style="verb">kid</spanx> Header Parameter in the JWE
            to tell the decrypting party which private key to use to decrypt, however, the encrypting party
            needs to first select the most appropriate key from those provided in the JWK Set at
            the recipient's <spanx style="verb">jwks_uri</spanx> location.
          </t>
          -->
          <t>
            鍵ローテーションを行うには, 復号を行う主体がまず新しい鍵を <spanx style="verb">jwks_uri</spanx> で公開し, 廃止された鍵を JWK Set から削除する.
            <spanx style="verb">jwks_uri</spanx> は, <xref target="RFC2616">RFC 2616</xref> に従いレスポンス中の <spanx style="verb">Cache-Control</spanx> ヘッダーに <spanx style="verb">max-age</spanx> を含め, 暗号化を行う主体による JWK Set のキャッシュを適切にコントロールし, 暗号化を行うたびに毎回 JWK Set を取得する必要がないようにすべきである (SHOULD).
            復号を行う主体は廃止された鍵を <spanx style="verb">jwks_uri</spanx> が参照する JWK Set から削除しつつも, 適切な期間その鍵を内部的に保持しておくべきである (SHOULD).
            これにより暗号化を行う主体が新しい鍵を取得するまでにある程度の猶予を許し, スムースな移行が可能になる.
            キャッシュ期間は, <xref target="RotateSigKeys"/> にある新しい署名鍵の発行とのバランスを取り, 適切に調整すること (SHOULD).
          </t>
          <!--
          <t>
            To rotate keys, the decrypting party can publish new keys
            at its <spanx style="verb">jwks_uri</spanx> location
            and remove from the JWK Set those that are being decommissioned.
            The <spanx style="verb">jwks_uri</spanx> SHOULD include a <spanx style="verb">Cache-Control</spanx>
            header in the response that contains a <spanx style="verb">max-age</spanx> directive,
            as defined in <xref target="RFC2616">RFC 2616</xref>,
            which enables the encrypting party to safely cache the JWK Set and not have to re-retrieve
            the document for every encryption event. The decrypting party SHOULD remove decommissioned keys
            from the JWK Set referenced by <spanx style="verb">jwks_uri</spanx>
            but retain them internally for some reasonable
            period of time, coordinated with the cache duration, to facilitate a smooth transition between keys
            by allowing the encrypting party some time to obtain the new keys. The cache duration SHOULD also
            be coordinated with the issuance of new signing keys, as described in <xref target="RotateSigKeys"/>.
          </t>
          -->
        </section>

      </section>
    </section>

    <section anchor="OfflineAccess" title="Offline Access">

      <t>
        OpenID Connect では, offline access を要求するため以下の <spanx style="verb">scope</spanx> 値を定義している.
        <!--
        OpenID Connect defines the following <spanx style="verb">scope</spanx> value
        to request offline access:
        -->

        <list style="hanging">
          <t hangText="offline_access">
            <vspace/>
            OPTIONAL.
            OAuth 2.0 Refresh Token の発行を要求する.
            Request Token は End-User の関与を必要とせずに End-User の UserInfo Endpoint にアクセスするための Access Token を取得するために利用される.
            <!--
            OPTIONAL. This scope value requests
            that an OAuth 2.0 Refresh Token be issued that can be used to
            obtain an Access Token that grants access to the End-User's
            UserInfo Endpoint even when the End-User is not present (not logged in).
            -->
          </t>
        </list>
      </t>
      <t>
        offline access を要求する際には, リクエストするリソースに対する offline access の許可に必要な何らかの他の条件を満たさない限り, <spanx style="verb">prompt</spanx> パラメータに <spanx style="verb">consent</spanx> を指定しなければならない (MUST).
        OP は Refresh Token を発行する際は必ず明示的な同意を得なければならない (MUST).
        ユーザーの事前同意は offline access の許可には常に十分とはならない.
      </t>
      <!--
      <t>
        When offline access is requested, a <spanx style="verb">prompt</spanx>
        parameter value of <spanx style="verb">consent</spanx> MUST be used
        unless other conditions for processing the request permitting offline access
        to the requested resources are in place.
        The OP MUST always obtain consent to returning a Refresh Token
        that enables offline access to the requested resources.
        A previously saved user consent is not always sufficient to grant offline access.
      </t>
      -->
      <t>
        <spanx style="verb">offline_access</spanx> scope を受け取った Authorization Server は, 以下に従う.
        <!--
        Upon receipt of a scope parameter containing the
        <spanx style="verb">offline_access</spanx> value, the Authorization Server:
        -->

        <list style="symbols">
          <t>
            prompt パラメータが <spanx style="verb">consent</spanx> を含むことを確認する.
            offline access 要求処理における何らかの他の条件を満たす場合はその限りではない.
            上記の条件のどちらをも満たさない場合, <spanx style="verb">offline_access</spanx> リクエストを無視しなければならない (MUST).
          </t>
          <!--
          <t>
            MUST ensure that the prompt parameter contains
            <spanx style="verb">consent</spanx>
            unless other conditions for processing the request permitting offline access
            to the requested resources are in place;
            unless one or both of these conditions are fulfilled, then
            it MUST ignore the <spanx style="verb">offline_access</spanx> request,
          </t>
          -->
          <t>
            Client が Authorization Code を返すような <spanx style="verb">response_type</spanx> を指定しない場合, その <spanx style="verb">offline_access</spanx> を無視しなければならない (MUST).
          </t>
          <!--
          <t>
            MUST ignore the <spanx style="verb">offline_access</spanx> request
            unless the Client is using a <spanx style="verb">response_type</spanx>
            value that would result in an Authorization Code being returned,
          </t>
          -->
          <t>
            Client の登録した <spanx style="verb">application_type</spanx> が <spanx style="verb">web</spanx> の場合は, 明示的に同意を得なければならない (MUST).
          </t>
          <!--
          <t>
            MUST explicitly receive or have consent for all Clients when
            the registered <spanx style="verb">application_type</spanx>
            is <spanx style="verb">web</spanx>,
          </t>
          -->
          <t>
            Client の登録した <spanx style="verb">application_type</spanx> が <spanx style="verb">native</spanx> の場合でも, 明示的な同意を得るべきである (SHOULD).
          </t>
          <!--
          <t>
            SHOULD explicitly receive or have consent for all Clients when
            the registered <spanx style="verb">application_type</spanx>
            is <spanx style="verb">native</spanx>.
          </t>
          -->
        </list>

        Refresh Token の利用は, <spanx style="verb">offline_access</spanx> がもたらすユースケースのみに限らない.
        Authorization Server は異なるコンテキストにおいて Refresh Token を発行しても良い (MAY).
        なおそのようなコンテキストについては, 本仕様の定めるところではない.
        <!--
        The use of Refresh Tokens is not exclusive to the
        <spanx style="verb">offline_access</spanx> use case.
        The Authorization Server MAY grant Refresh Tokens
        in other contexts that are beyond the scope of this specification.
        -->
      </t>
    </section>

    <section anchor="RefreshTokens" title="Using Refresh Tokens">
      <t>
        Refresh Token を利用するには, <xref target="RFC6749">OAuth 2.0</xref> Section 6 に従い, Token Endpoint に <spanx style="verb">grant_type</spanx> を <spanx style="verb">refresh_token</spanx> としたリクエストを送る.
        ここでは OpenID Connect Authorization Server が Refresh Token を受け取った際の挙動について定義する.
      </t>
      <!--
      <t>
        A request to the Token Endpoint can also use a Refresh Token
        by using the <spanx style="verb">grant_type</spanx> value
        <spanx style="verb">refresh_token</spanx>,
        as described in Section 6 of
        <xref target="RFC6749">OAuth 2.0</xref>.
        This section defines the behaviors for OpenID Connect
        Authorization Servers when Refresh Tokens are used.
      </t>
      -->

      <section anchor="RefreshingAccessToken" title="Refresh Request">
        <t>
          Access Token 再発行のため, Client は自身の <spanx style="verb">client_id</spanx> に紐づいて登録された認証方法で, Token Endpoint に対して自身を認証しなければならない (MUST).
          詳細は <xref target="ClientAuthentication"/> 参照.
          Client は <xref target="FormSerialization"/> で述べた Form Serialization を用いて, Token Endpoint に HTTP <spanx style="verb">POST</spanx> リクエストを送る.
        </t>
        <!--
        <t>
          To refresh an Access Token, the Client MUST
          authenticate to the Token Endpoint using the authentication method registered
          for its <spanx style="verb">client_id</spanx>, as documented in
          <xref target="ClientAuthentication"/>.
          The Client sends the parameters via HTTP <spanx style="verb">POST</spanx>
          to the Token Endpoint using
          Form Serialization, per <xref target="FormSerialization"/>.
        </t>
        -->

        <figure>
          <preamble>
            以下は Refresh Request の例である.
            (改行は掲載上の都合による)
          </preamble>
          <!--
          <preamble>
            The following is a non-normative example of a
            Refresh Request
            (with line wraps within values for display purposes only):
          </preamble>
          -->

          <artwork><![CDATA[
  POST /token HTTP/1.1
  Host: server.example.com
  Content-Type: application/x-www-form-urlencoded

  client_id=s6BhdRkqt3
    &client_secret=some_secret12345
    &grant_type=refresh_token
    &refresh_token=8xLOxBtZp8
    &scope=openid%20profile
    ]]></artwork>
        </figure>

        <t>
          Authorization Server は Refresh Token を検証し, それが Client に対して発行されたものであることを確認し, Client 認証がその Client の Client Authentication 方法によって成功したことを確認しなければならない (MUST).
        </t>
        <!--
        <t>
          The Authorization Server MUST validate the Refresh Token,
          MUST verify that it was issued to the Client,
          and must verify that the Client successfully authenticated
          it has a Client Authentication method.
        </t>
        -->
      </section>

      <section anchor="RefreshTokenResponse" title="Successful Refresh Response">
        <t>
          Refresh Token の検証が成功すると, レスポンスボディに <xref target="TokenResponse"/> で述べた Token Response を含める.
          ただしこのレスポンスは <spanx style="verb">id_token</spanx> を含まない場合もある.
        </t>
        <!--
        <t>
          Upon successful validation of the Refresh Token,
          the response body is the Token Response of <xref target="TokenResponse"/>
          except that it might not contain an <spanx style="verb">id_token</spanx>.
        </t>
        -->

        <t>
          トークン再発行の際に ID Token を発行する場合は, 以下に従う.
          <!--
          If an ID Token is returned as a result of a token refresh request,
          the following requirements apply:
          -->
          <list style="symbols">
            <t>
              <spanx style="verb">iss</spanx> Claim Value は, 最初の認可発生時に発行された ID Token と同じ値にすること (MUST).
            </t>
            <!--
            <t>
              its <spanx style="verb">iss</spanx> Claim Value MUST be the same as
              in the ID Token issued when the original authentication occurred,
            </t>
            -->
            <t>
              <spanx style="verb">sub</spanx> Claim Value も同様に, 最初の認可発生時に発行された ID Token と同じ値にすること (MUST).
            </t>
            <!--
            <t>
              its <spanx style="verb">sub</spanx> Claim Value MUST be the same as
              in the ID Token issued when the original authentication occurred,
            </t>
            -->
            <t>
              <spanx style="verb">iat</spanx> Claim は新しい ID Token の発行時刻にすること (MUST).
            </t>
            <!--
            <t>
              its <spanx style="verb">iat</spanx> Claim MUST represent
              the time that the new ID Token is issued,
            </t>
            -->
            <t>
              <spanx style="verb">aud</spanx> Claim Value は, 最初の認可発生時に発行された ID Token と同じ値にすること (MUST).
            </t>
            <!--
            <t>
              its <spanx style="verb">aud</spanx> Claim Value MUST be the same as
              in the ID Token issued when the original authentication occurred,
            </t>
            -->
            <t>
              ID Token に <spanx style="verb">auth_time</spanx> Claim を含める場合は, 新しい ID Token の発行時刻ではなく, 最初の認証を行った時刻とすること (MUST).
            </t>
            <!--
            <t>
              if the ID Token contains an <spanx style="verb">auth_time</spanx> Claim,
              its value MUST represent the time of the original authentication - not
              the time that the new ID token is issued,
            </t>
            -->
            <t>
              <spanx style="verb">azp</spanx> Claim Value は, 最初の認可発生時に発行された ID Token と同じ値にすること (MUST).
              <spanx style="verb">azp</spanx> が最初に発行された ID Token に含まれない場合は, 新しい ID Token にもそれを含めてはならない (MUST NOT).
            </t>
            <!--
            <t>
              its <spanx style="verb">azp</spanx> Claim Value MUST be the same as
              in the ID Token issued when the original authentication occurred;
              if no <spanx style="verb">azp</spanx> Claim was present in the original
              ID Token, one MUST NOT be present in the new ID Token, and
            </t>
            -->
            <t>
              それ以外に関しては, 最初の認証時に発行された ID Token と同じルールを適用する.
            </t>
            <!--
            <t>
              otherwise, the same rules apply as apply when issuing an ID Token
              at the time of the original authentication.
            </t>
            -->
          </list>
        </t>

        <figure>
          <preamble>
            以下は Refresh Response の例である.
          </preamble>
          <!--
          <preamble>
            The following is a non-normative example of a
            Refresh Response:
          </preamble>
          -->

          <artwork><![CDATA[
  HTTP/1.1 200 OK
  Content-Type: application/json
  Cache-Control: no-store
  Pragma: no-cache

  {
   "access_token": "TlBN45jURg",
   "token_type": "Bearer",
   "refresh_token": "9yNOxJtZa5",
   "expires_in": 3600
  }
]]></artwork>
        </figure>
      </section>

      <section anchor="RefreshErrorResponse" title="Refresh Error Response">
        <t>
          Refresh Request が不正もしくは認証できなかった場合, Authorization Server は <xref target="RFC6749">OAuth 2.0</xref> Section 5.2 に従い Token Error Response を返す.
        </t>
        <!--
        <t>If the Refresh Request is invalid or unauthorized, the
        Authorization Server returns the
        Token Error Response as defined in Section 5.2 of <xref
        target="RFC6749">OAuth 2.0</xref>.</t>
        -->
      </section>

    </section>

    <section anchor="Serializations" title="Serializations">
      <t>
        メッセージは以下のいずれかの方法でシリアライズされる.
        <!--
        Messages are serialized using one of the following methods:
        -->
        <list style="numbers">
          <t>Query String Serialization</t>
          <t>Form Serialization</t>
          <t>JSON Serialization</t>
        </list>

        ここではこれらのシリアライゼーション方法のシンタックスについて記述する.
        それらがいつ利用可能, もしくは利用する必要があるかを記述するのは, 他セクションに委ねる.
        すべてのシリアライゼーションがすべてのメッセージに利用可能ではないことに注意すること.
        <!--
        This section describes the syntax of these serialization methods;
        other sections describe when they can and must be used.
        Note that not all methods can be used for all messages.
        -->
      </t>

      <section anchor="QuerySerialization" title="Query String Serialization">

        <t>
          Query String Serialization を使ってパラメータをシリアライズするためには, Client は <xref target="W3C.REC-html401-19991224"></xref> で定義された <spanx style="verb">application/x-www-form-urlencoded</spanx> フォーマットを使いパラメータと値を URL のクエリコンポーネントへ追加することで文字列を構成する.
          Query String Serialization は一般的に HTTP <spanx style="verb">GET</spanx> リクエストで使用される.
        </t>
        <!--
        <t>In order to serialize the parameters using the Query String
        Serialization, the Client constructs the string by adding the
        parameters and values to the query component of a URL using the <spanx
        style="verb">application/x-www-form-urlencoded</spanx> format as
        defined by <xref target="W3C.REC-html401-19991224"></xref>.
        Query String Serialization is typically used in
        HTTP <spanx style="verb">GET</spanx> requests.
        The same serialization method is also used when adding
        parameters to the fragment component of a URL.
        </t>
        -->

        <figure>
          <preamble>
            以下はシリアライズの参考例である.
            (改行は掲載上の都合による)
          </preamble>
          <!--
          <preamble>
            The following is a non-normative example of this serialization
            (with line wraps within values for display purposes only):
          </preamble>
          -->

          <artwork><![CDATA[
  GET /authorize?
    response_type=code
    &scope=openid
    &client_id=s6BhdRkqt3
    &redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb HTTP/1.1
  Host: server.example.com
]]></artwork>
        </figure>
      </section>

      <section anchor="FormSerialization" title="Form Serialization">

        <t>
          パラメータやその値は, HTTP リクエストのエンティティボディに <xref target="W3C.REC-html401-19991224"></xref> に定義されているように <spanx style="verb">application/x-www-form-urlencoded</spanx> フォーマットでパラメータ名とその値を追加することで Form Serialize される.
          Form Serialization は一般的には HTTP <spanx style="verb">POST</spanx> リクエストで利用される.
        </t>
        <!--
        <t>Parameters and their values are Form Serialized by adding the
        parameter names and values to the entity body of the HTTP request using
        the <spanx style="verb">application/x-www-form-urlencoded</spanx> format
        as defined by <xref target="W3C.REC-html401-19991224"></xref>.
        Form Serialization is typically used in HTTP <spanx style="verb">POST</spanx> requests.</t>
        -->

        <figure>
          <preamble>
            以下はシリアライズの参考例である.
            (改行は掲載上の都合による)
          </preamble>
          <!--
          <preamble>
            The following is a non-normative example of this serialization
            (with line wraps within values for display purposes only):
          </preamble>
          -->

          <artwork><![CDATA[
  POST /authorize HTTP/1.1
  Host: server.example.com
  Content-Type: application/x-www-form-urlencoded

  response_type=code
    &scope=openid
    &client_id=s6BhdRkqt3
    &redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb
]]></artwork>
        </figure>
      </section>

      <section anchor="JSONSerialization" title="JSON Serialization">
        <t>
          パラメータは各パラメータを JSON オブジェクトの最上位メンバーに追加する形で, JSON オブジェクトにシリアライズされる.
          パラメータ名と文字列値は JSON 文字列として表現される.
          数値は JSON 数値, Boolean 値は JSON 真偽値となる.
          他で特別に指示されない限り, 省略されているパラメータおよび値が指定されていないパラメータは省略し, JSON <spanx style="verb">null</spanx> としないようにすべきである (SHOULD).
          各パラメータは JSON オブジェクトおよび JSON 配列をその値とすることができる (MAY).
        </t>
        <!--
        <t>
          The parameters are serialized into a JSON object structure by adding each
          parameter at the highest structure level. Parameter names and string
          values are represented as JSON strings.
          Numerical values are represented as JSON numbers.
          Boolean values are represented as JSON booleans.
          Omitted parameters and parameters with no value SHOULD be omitted
          from the object and not represented by
          a JSON <spanx style="verb">null</spanx> value, unless otherwise specified.
          A parameter MAY have a JSON object or a JSON array as its value.
        </t>
        -->

        <figure>
          <preamble>
            以下はシリアライズの参考例である.
          </preamble>
          <!--
          <preamble>
            The following is a non-normative example of this serialization:
          </preamble>
          -->

          <artwork><![CDATA[
  {
   "access_token": "SlAV32hkKG",
   "token_type": "Bearer",
   "expires_in": 3600,
   "refresh_token": "8xLOxBtZp8"
  }
]]></artwork>
        </figure>
      </section>

    </section>

    <section anchor="StringOps" title="String Operations">

      <t>
        いくつかの OpenID Connect メッセージを処理する際にはメッセージの中の値を既知の値を比較することが求められる.
        例えば, UserInfo エンドポイントから返された Claim Name は <spanx style="verb">sub</spanx> などの特定の Claim Name と比較される.
        よって Unicode 文字列比較処理はセキュリティ上重要な意味を持つ.
      </t>
      <!--
      <t>
        Processing some OpenID Connect messages requires comparing
        values in the messages to known values. For example, the Claim
        Names returned by the UserInfo Endpoint might be compared to
        specific Claim Names such as <spanx
        style="verb">sub</spanx>.  Comparing Unicode strings,
        however, has significant security implications.
      </t>
      -->
      <t>
        したがって, JSON 文字列を他の Unicode 文字列と比較する際は下記の通り実施しなければならない (MUST).
        <!--
        Therefore, comparisons between JSON strings and other Unicode
        strings MUST be performed as specified below:
        -->

        <list style="numbers">
          <t>
            JSON に適用されたすべてのエスケープ処理を取り除き Unicode コードポイントの配列を生成する.
          </t>
          <t>
            Unicode Normalization <xref target="USA15"/> を JSON 文字列, もしくは比較対象文字列に対していかなる時点であっても適用してはならない (MUST NOT).
          </t>
          <t>
            二つの文字列の比較は, Unicode コードポイント同士の等値比較として実施されなければならない (MUST).
          </t>
        </list>
        <!--
        <list style="numbers">

          <t>
            Remove any JSON applied escaping to produce an array of
            Unicode code points.
          </t>
          <t>
            Unicode Normalization <xref target="USA15"/> MUST NOT
            be applied at any point to either the JSON string or to
            the string it is to be compared against.
          </t>
          <t>
            Comparisons between the two strings MUST be performed as a
            Unicode code point to code point equality comparison.
          </t>

        </list>
        -->
      </t>
      <t>
        いくつかの箇所において, 本仕様はスペースで区切られた文字列のリストを使用している.
        そのようないかなる場合においても, この目的では単一の ASCII のスペース文字 (0x20) を区切り文字として使用しなければならない (MUST).
      </t>
      <!--
      <t>
        In several places, this specification uses space delimited
        lists of strings.  In all such cases, a single ASCII space
        character (0x20) MUST be used as the delimiter.
      </t>
      -->

    </section>

    <section anchor="ImplementationConsiderations" title="Implementation Considerations">
      <t>
        本仕様では, Relying Party と OpenID Provider の両者により利用される機能について定義している.
        OpenID Provider によっては, RP との事前登録不要で動的に利用可能なものもあれば, 固有で out-of-band な設定を必須とするものもあるだろう.
        このため, OP 向けの実装必須の機能を以下の２グループに分類しておく.
        1つ目は全ての OP 向け, 2つ目は "Dynamic" な OpenID Providers 向けである.
      </t>
      <!--
      <t>
        This specification defines features used by both Relying Parties and
        OpenID Providers.
        It is expected that some OpenID Providers will require
        static, out-of-band configuration of RPs using them,
        whereas others will support dynamic usage by RPs without
        a pre-established relationship between them.
        For that reason, the mandatory-to-implement features for OPs
        are listed below in two groups:
        the first for all OPs and the second for "Dynamic" OpenID Providers.
      </t>
      -->

      <section anchor="ServerMTI"
               title="Mandatory to Implement Features for All OpenID Providers">
        <t>
          全ての OpenID Provider は本仕様にて定義される下記機能を実装しなければならない (MUST).
          このリストは別の場所で "REQUIRED" もしくは "MUST" として既に記載されている機能セットを拡張するものあり, それ単体で広範囲に渡る OP 向けの実装要件となるものではない.
        </t>
        <!--
        <t>
          All OpenID Providers MUST implement the following features defined in this specification.
          This list augments the set of features that are already listed elsewhere
          as being "REQUIRED" or are described with a "MUST",
          and so is not, by itself, a comprehensive set of implementation requirements for OPs.
        </t>
        -->
        <t>
          <list style="hanging">

            <t hangText="Signing ID Tokens with RSA SHA-256">
              <vspace/>
              OP は RSA SHA-256 (<spanx style="verb">alg</spanx>=<spanx style="verb">RS256</spanx>) による ID Token への署名をサポートしなければならない (MUST).
              ただし OP が ID Token を (Authorization Code フローの場合のように) Token Endpoint のみから返却し, ID Token 署名アルゴリズムとして <spanx style="verb">none</spanx> を要求した状態でのみ Client 登録を許可する場合は, その限りでは無い.
              <!--
              OPs MUST support signing ID Tokens with the RSA SHA-256 algorithm
              (an <spanx style="verb">alg</spanx> value of
              <spanx style="verb">RS256</spanx>),
              unless the OP only supports returning ID Tokens from the Token Endpoint
              (as is the case for the Authorization Code Flow)
              and only allows Clients to register specifying
              <spanx style="verb">none</spanx> as the requested ID Token signing algorithm.
              -->
            </t>
            <t hangText="Prompt Parameter">
              <vspace/>
              OP は <xref target="AuthorizationEndpoint"/> で定義されている <spanx style="verb">prompt</spanx> パラメータをサポートしなければならない (MUST).
              これには <spanx style="verb">none</spanx> や <spanx style="verb">login</spanx> などが規定するユーザインタラクションの実装を含む.
              <!--
              OPs MUST support the <spanx style="verb">prompt</spanx> parameter,
              as defined in <xref target="AuthorizationEndpoint"/>, including the specified
              user interface behaviors such as <spanx style="verb">none</spanx>
              and <spanx style="verb">login</spanx>.
               -->
            </t>
            <t hangText="Display Parameter">
              <vspace/>
              OP は <xref target="AuthorizationEndpoint"/> で定義されている <spanx style="verb">display</spanx> パラメータをサポートしなければならない (MUST).
              (このパラメータで要求される最低限度のサポートは, 単にこれを使うことでエラーにならないことであることに注意)
              <!--
              OPs MUST support the <spanx style="verb">display</spanx> parameter,
              as defined in <xref target="AuthorizationEndpoint"/>.
              (Note that the minimum level of support required for this parameter is
              simply that its use must not result in an error.)
              -->
            </t>
            <t hangText="Preferred Locales">
              <vspace/>
              OP は <xref target="AuthorizationEndpoint"/> で定義されている <spanx style="verb">ui_locales</spanx> と <spanx style="verb">claims_locales</spanx> パラメータによってユーザインターフェースと Claim 用の推奨の言語や文字種のリクエストをサポートしなければならない (MUST).
              (これらのパラメータで要求される最低限度のサポートは, 単にこれをつかうことでエラーにならないことであることに注意)
              <!--
              OPs MUST support requests for preferred languages and scripts
              for the user interface and for Claims via the
              <spanx style="verb">ui_locales</spanx> and
              <spanx style="verb">claims_locales</spanx> request parameters,
              as defined in <xref target="AuthorizationEndpoint"/>.
              (Note that the minimum level of support required for these parameters is
              simply to have their use not result in errors.)
            -->
            </t>
            <t hangText="Authentication Time">
              <vspace/>
              OP は <xref target="IDToken"/> で定義されているように, 要求があれば <spanx style="verb">auth_time</spanx> Claim によってエンドユーザが認証を行った時刻返却しなければならない(MUST).
              <!--
              OPs MUST support returning the time at which the End-User authenticated
              via the <spanx style="verb">auth_time</spanx> Claim, when requested,
              as defined in <xref target="IDToken"/>.
              -->
            </t>
            <t hangText="Maximum Authentication Age">
              <vspace/>
              OP は <xref target="AuthorizationEndpoint"/> で定義されているように, <spanx style="verb">max_age</spanx> パラメータによる最大認証期間 (maximum authentication age) の強制をサポートしなければならない (MUST).
              <!--
              OPs MUST support enforcing a maximum authentication age
              via the <spanx style="verb">max_age</spanx> parameter,
              as defined in <xref target="AuthorizationEndpoint"/>.
              -->
            </t>
            <t hangText="Authentication Context Class Reference">
              <vspace/>
              OP は <xref target="AuthorizationEndpoint"/> で定義されているように, <spanx style="verb">acr_values</spanx> パラメータを用いて特定の認証コンテキストクラスリファレンスの値のリクエストをサポートしなければならない (MUST).
              (このパラメータで要求される最低限度のサポートは, 単にこれを使うことでエラーにならないことであることに注意)
              <!--
              OPs MUST support requests for specific
              Authentication Context Class Reference values
              via the <spanx style="verb">acr_valu
              es</spanx> parameter,
              as defined in <xref target="AuthorizationEndpoint"/>.
              (Note that the minimum level of support required for this parameter is
              simply to have its use not result in an error.)
              -->
            </t>

          </list>
        </t>
      </section>

      <section anchor="DynamicMTI"
               title="Mandatory to Implement Features for Dynamic OpenID Providers">
        <t>
          上記の機能に加えて, 事前設定をしていない RP と動的に連携を行うことをサポートしている OpenID Provider は, 本仕様や関連仕様にて定義されている下記の機能も実装しなくてはならない (MUST).
          <!--
          In addition to the features listed above,
          OpenID Providers supporting dynamic establishment of relationships with RPs
          that they do not have a pre-configured relationship with
          MUST also implement the following features defined in this and related specifications.
          -->
        </t>
        <t>
          <list style="hanging">

            <t hangText="Response Types">
              <vspace/>
              OpenID Provider は Response Type <spanx style="verb">id_token</spanx>, また Self-Issued OP ではない OP は <spanx style="verb">code</spanx> と <spanx style="verb">id_token&nbsp;token</spanx> もサポートしなければならない (MUST).
              <!--
              These OpenID Providers MUST support the
              <spanx style="verb">id_token</spanx> Response Type and
              all that are not Self-Issued OPs MUST also support the
              <spanx style="verb">code</spanx> and
              <spanx style="verb">id_token&nbsp;token</spanx> Response Types.
              -->
            </t>

            <t hangText="Discovery">
              <vspace/>
              OP は <xref target="OpenID.Discovery">OpenID Connect Discovery 1.0</xref> で定義されているように Discovery 機能をサポートしなければならない (MUST).
              <!--
              These OPs MUST support Discovery,
              as defined in
              <xref target="OpenID.Discovery">OpenID Connect Discovery 1.0</xref>.
              -->
            </t>
            <t hangText="Dynamic Registration">
              <vspace/>
              OP は <xref target="OpenID.Registration">OpenID Connect Dynamic Client Registration 1.0</xref> で定義されているように, Dynamic Client Registration をサポートしなければならない (MUST).
              <!--
              These OPs MUST support Dynamic Client Registration,
              as defined in
              <xref target="OpenID.Registration">OpenID Connect Dynamic Client Registration 1.0</xref>.
              -->
            </t>
            <t hangText="UserInfo Endpoint">
              <vspace/>
              Access Token を発行する全て動的な OP は <xref target="UserInfo"/> で定義されているように, UserInfo Endpoint をサポートしなければならない (MUST).
              (Self-Issued OP は Access Token を発行しない)
              <!--
              All dynamic OPs that issue Access Tokens MUST support the UserInfo Endpoint,
              as defined in <xref target="UserInfo"/>.
              (Self-Issued OPs do not issue Access Tokens.)
              -->
            </t>
            <t hangText="Public Keys Published as Bare Keys">
              <vspace/>
              OP は自身の公開鍵を素の JWK 鍵として公開しなければならない (MUST).
              (当該鍵は JWK 形式に加えて別途 X.509 形式で公開してもよい (MAY))
              <!--
              These OPs MUST publish their public keys as bare JWK keys
              (which MAY also be accompanied by X.509 representations of those keys).
              -->
            </t>
            <t hangText="Request URI">
              <vspace/>
              OP は <xref target="AuthorizationEndpoint"/> で定義されているように, <spanx style="verb">request_uri</spanx> パラメータで提供された Request URI から取得する Request Object 値を使ってリクエストを送信できるようにしなければならない (MUST).
              <!--
              These OPs MUST support requests made using a Request Object value
              that is retrieved from a Request URI that is provided
              with the <spanx style="verb">request_uri</spanx> parameter,
              as defined in <xref target="AuthorizationEndpoint"/>.
              -->
            </t>

          </list>
        </t>
      </section>

      <section anchor="DiscoReg" title="Discovery and Registration">

        <t>
          OpenID Connect 導入にあたっては, 事前に設定された OpenID Provider および Relying Party のセットが利用可能なこともある.
          そのような場合には, Identity やサービス, Dynamic Client Registration についての情報に関する Dynamic Discovery をサポートする必要は無いかもしれない.
        </t>
        <!--
        <t>Some OpenID Connect installations can use a pre-configured set of
        OpenID Providers and/or Relying Parties. In those cases, it might not be
        necessary to support dynamic discovery of information about identities
        or services or dynamic registration of Clients.</t>
        -->

        <t>
          しかし, 事前登録のない Relying Party と OpenID Provider 間の予期しないやりとりをサポートすることを選択したならば, <xref target="OpenID.Discovery">OpenID Discovery 1.0</xref> と <xref target="OpenID.Registration">OpenID Connect Dynamic Client Registration 1.0</xref> の仕様で定義されているファシリティを実装するべきである (SHOULD).
        </t>
        <!--
        <t>However, if installations choose to support unanticipated
        interactions between Relying Parties and OpenID Providers that do not
        have pre-configured relationships, they SHOULD accomplish this by
        implementing the facilities defined in the <xref
        target="OpenID.Discovery">OpenID Connect Discovery 1.0</xref> and <xref
        target="OpenID.Registration">OpenID Connect Dynamic Client Registration 1.0</xref>
        specifications.</t>
        -->
      </section>

      <section anchor="RPMTI" title="Mandatory to Implement Features for Relying Parties">
        <t>
          一般的に, OpenID Provider と通信する際にどの機能を利用するかは, Relying Party に次第である.
          しかし, いくつかの選択肢に関しては, OAuth Client の性質によって決定づけられるものもある.
          secret を秘匿に保てる Confidential Client であれば Authoriation Code Flow が適切であるし, User Agent Based Application や静的登録された Native Application のような Public Client には, Implicit Flow が適切であろう.
        </t>
        <!--
        <t>
          In general, it is up to Relying Parties which features they use
          when interacting with OpenID Providers.
          However, some choices are dictated by the nature of their OAuth Client,
          such as whether it is a Confidential Client, capable of keeping secrets,
          in which case the Authorization Code Flow may be appropriate,
          or whether it is a Public Client, for instance, a
          User Agent Based Application or a statically registered Native Application,
          in which case the Implicit Flow may be appropriate.
        </t>
        -->
        <t>
          OpenID Connect の機能を利用する際に, それらが "REQUIRED" や "MUST" として記載されていれば RP に利用されるときに実装必須の機能となる.
          同様に "OPTIONAL" と記載されている機能は, 特定のアプリケーションコンテキストで価値をもたらさないのであれば, 利用したりサポートする必要はない.
          最後に, Discovery をサポートする OpenID Provider とやりとりをするときは, OP の Discovery ドキュメントを利用して, RP がどの OP の機能を利用できるかを動的に決定することもできる.
        </t>
        <!--
        <t>
          When using OpenID Connect features, those listed as being
          "REQUIRED" or are described with a "MUST" are
          mandatory to implement, when used by a Relying Party.
          Likewise, those features that are described as "OPTIONAL"
          need not be used or supported unless they provide value
          in the particular application context.
          Finally, when interacting with OpenID Providers that support Discovery,
          the OP's Discovery document can be used to dynamically determine
          which OP features are available for use by the RP.
        </t>
        -->
        <t>
        </t>
      </section>

      <section anchor="ImplementationNotes" title="Implementation Notes">

        <section anchor="CodeNotes" title="Authorization Code Implementation Notes">
          <t>
            Authorization Code フローあるいは Hybrid フロー を用いる場合,
            Authorization Code を用いた Token Request への応答として,
            ID Token が Token Endpoint から返却される.
            ある実装では, Authorization Code 値の中に,
            返却する ID Token の状態を符号化して持たせることを選択するかもしれない.
            別の実装では, 状態を格納しているデータベースに対するインデックスとして,
            Authorization Code 値を使用するかもしれない.
          </t>
          <!--
          <t>
            When using the Authorization Code or Hybrid flows,
            an ID Token is returned from the Token Endpoint
            in response to a Token Request using an Authorization Code.
            Some implementations may choose to encode state about
            the ID Token to be returned in the Authorization Code value.
            Others may use the Authorization Code value
            as an index into a database storing this state.
          </t>
          -->
        </section>

        <section anchor="NonceNotes" title="Nonce Implementation Notes">
          <t>
            <spanx style="verb">nonce</spanx> パラメータ値は,
            セッション毎の状態を含むとともに, 攻撃者によって推測されないようにする必要がある.
            Web Server Client がこの要件を満足する手法の一つは,
            HttpOnly 属性付きのセッションクッキーとして暗号論的乱数値を格納し,
            その値の暗号学的ハッシュを <spanx style="verb">nonce</spanx> パラメータとして使用することである.
            このケースでは, 第三者による ID Token リプレイを検出するために,
            返却される ID Token 内の <spanx style="verb">nonce</spanx> と
            セッションクッキーのハッシュを比較する.
            JavaScript Client に対して適用可能な関連手法として,
            HTML5 ローカルストレージに暗号論的乱数値を格納し,
            その値の暗号学的ハッシュを用いる方法がある.
          </t>
          <!--
          <t>
            The <spanx style="verb">nonce</spanx> parameter value needs to include
            per-session state and be unguessable to attackers.
            One method to achieve this for Web Server Clients is to store a cryptographically random value
            as an HttpOnly session cookie and use a cryptographic hash of the value
            as the <spanx style="verb">nonce</spanx> parameter.
            In that case, the <spanx style="verb">nonce</spanx> in the returned
            ID Token is compared to the hash of the session cookie
            to detect ID Token replay by third parties.
            A related method applicable to JavaScript Clients is to store the cryptographically random value
            in HTML5 local storage and use a cryptographic hash of this value.
          </t>
          -->
        </section>

        <section anchor="FragmentNotes"
                 title="Redirect URI Fragment Handling Implementation Notes">
          <t>
            レスポンスパラメータを Redirection URI のフラグメント値として返却する場合,
            Client は User Agent に対し, そのフラグメント内の符号化された値をパースさせ,
            Client の処理ロジックにその値を受け渡す必要がある.
            暗号 API に直接アクセスする User Agent は,
            例えば全ての Client コードを JavaScript で記述するなど,
            処理に必要なロジック等を全て自己の中で完結させることが出来る.
          </t>
          <!--
          <t>
            When response parameters are returned in the Redirection URI fragment value,
            the Client needs to have the User Agent parse the fragment encoded values
            and pass them to on to the Client's processing logic for consumption.
            User Agents that have direct access to cryptographic APIs may be able to be
            self-contained, for instance, with all Client code being written in JavaScript.
          </t>
          -->
          <t>
            しかし, Client を完全に User Agent 内だけで実行しない場合,
            検証のために Web Server Client にデータを送信することで目的を実現する方法もある.
          </t>
          <!--
          <t>
            However, if the Client does not run entirely in the User Agent,
            one way to achieve this
            is to post them to a Web Server Client for validation.
          </t>
          -->

          <t>
            Client が自身の <spanx style="verb">redirect_uri</spanx> 上でホストすることが考えられる
            JavaScript ファイルの例を以下に示す.
            これは Authorization Server からのリダイレクトによってロードされる.
            フラグメント部はパースされた後, 受信した情報の検証と利用を行う URL に対し,
            <spanx style="verb">POST</spanx> で送信される.
          </t>
          <!--
          <t>The following is an example of a JavaScript file that a Client might host at its
          <spanx style="verb">redirect_uri</spanx>.  This is loaded by the redirect from
          the Authorization Server.  The fragment component is parsed and then sent by <spanx style="verb">POST</spanx> to a URI
          that will validate and use the information received.</t>
          -->

          <figure>
            <preamble>
              Redirect URI 応答の一例を以下に示す:
            </preamble>
            <!--
            <preamble>Following is a non-normative example of a
            Redirect URI response:</preamble>
            -->
            <artwork><![CDATA[
  GET /cb HTTP/1.1
  Host: client.example.org

  HTTP/1.1 200 OK
  Content-Type: text/html

  <script type="text/javascript">

  // First, parse the query string
  var params = {}, postBody = location.hash.substring(1),
      regex = /([^&=]+)=([^&]*)/g, m;
  while (m = regex.exec(postBody)) {
    params[decodeURIComponent(m[1])] = decodeURIComponent(m[2]);
  }

  // And send the token over to the server
  var req = new XMLHttpRequest();
  // using POST so query isn't logged
  req.open('POST', 'https://' + window.location.host +
                   '/catch_response', true);
  req.setRequestHeader('Content-Type',
                       'application/x-www-form-urlencoded');

  req.onreadystatechange = function (e) {
    if (req.readyState == 4) {
      if (req.status == 200) {
  // If the response from the POST is 200 OK, perform a redirect
        window.location = 'https://'
          + window.location.host + '/redirect_after_login'
      }
  // if the OAuth response is invalid, generate an error message
      else if (req.status == 400) {
        alert('There was an error processing the token')
      } else {
        alert('Something other than 200 was returned')
      }
    }
  };
  req.send(postBody);
  ]]></artwork>
          </figure>

        </section>

      </section>

      <section anchor="CompatibilityNotes" title="Compatibility Notes">

        <section anchor="PreFinalIETFSpecs" title="Pre-Final IETF Specifications">

          <t>
            実装者は, この仕様がまだ最終仕様でない複数の IETF 仕様を利用していることに注意すべきである.
            それらの仕様は以下のとおり:
            <!--
            Implementers should be aware that
            this specification uses several IETF specifications that are
            not yet final specifications.  Those specifications are:
            -->
            <list style="symbols">
              <t><xref target="JWT">JSON Web Token (JWT) draft -25</xref></t>
              <t><xref target="JWS">JSON Web Signature (JWS) draft -31</xref></t>
              <t><xref target="JWE">JSON Web Encryption (JWE) draft -31</xref></t>
              <t><xref target="JWK">JSON Web Key (JWK) draft -31</xref></t>
              <t><xref target="JWA">JSON Web Algorithms draft -31</xref></t>
              <t><xref target="OAuth.Assertions">Assertion Framework for OAuth 2.0 Client Authentication and Authorization Grants draft -17</xref></t>
              <t><xref target="OAuth.JWT">JSON Web Token (JWT) Profile for OAuth 2.0 Client Authentication and Authorization Grants draft -10</xref></t>
            </list>
          </t>
          <t>
            これらの仕様に重要な変更を防ぐためにあらゆる努力を行うとしても, それらは発生するかもしれない.
            OpenID Connect の実装は上記の特別に参照された各ドラフトバージョンを Final バージョンに優先して利用しつづけるべきである.
            将来的に OpenID Connect の Profile や仕様がこれらの参照を更新した場合には, その限りではない.
          </t>
          <!--
          <t>
            While every effort will be made to prevent breaking
            changes to these specifications, should they occur,
            OpenID Connect implementations should continue to use the
            specifically referenced draft versions above in preference
            to the final versions, unless using a possible future
            OpenID Connect profile or specification that
            updates some or all of these references.
          </t>
          -->
        </section>

        <section anchor="GoogleIss" title='Google "iss" Value'>

          <t>
            この文書を執筆している時点では, Google の OpenID Connect の実装は, ID Token の <spanx style="verb">iss</spanx> (issuer) Claim 値として必須となっている <spanx style="verb">https://</spanx> スキームプレフィックスを省略していることに注意すべきである.
            Google と連携を希望する Relying Party は, この実装が更新されるまでは, これに対処するためのコードを持っている必要がある.
            このような問題を回避するためのコードは, Google が Issuer 値にプレフィックスを追加した場合でも, 壊れないような形式で書かれるべきである.
          </t>
          <!--
          <t>
            Implementers may want to be aware that,
            as of the time of this writing,
            Google's deployed OpenID Connect implementation issues ID Tokens
            that omit the required <spanx style="verb">https://</spanx>
            scheme prefix from the <spanx style="verb">iss</spanx> (issuer)
            Claim Value.
            Relying Party implementations wishing to work with Google
            will therefore need to have code to work around this,
            until such time as their implementation is updated.
            Any such workaround code should be written in a manner
            that will not break at such point Google adds the
            missing prefix to their issuer values.
          </t>
          -->
        </section>
      </section>

      <section anchor="RelatedSpecs" title="Related Specifications and Implementer's Guides">

        <t>
          関連する OPTIONAL 仕様は, 追加機能を提供するために本仕様と組み合わせて利用されるかもしれない (MAY).
          <!--
          These related OPTIONAL specifications MAY be used in
          combination with this specification to provide additional functionality:
          -->

          <list style="symbols">

            <t>
              <xref target="OpenID.Discovery">OpenID Connect Discovery 1.0</xref> -
              Relying Party が OpenID Provider についての情報を動的に発見する方法を定義する.
              <!--
              <xref target="OpenID.Discovery">OpenID Connect Discovery 1.0</xref> -
              Defines how Relying Parties dynamically discover information about OpenID Providers
              -->
            </t>
            <t>
              <xref target="OpenID.Registration">OpenID Connect Dynamic Client Registration 1.0</xref> -
              Relying Party が OpenID Provider に動的に登録する方法を定義する.
              <!--
              <xref target="OpenID.Registration">OpenID Connect Dynamic Client Registration 1.0</xref> -
              Defines how Relying Parties dynamically register with OpenID Providers
               -->
            </t>
            <t>
              <xref target="OpenID.Session">OpenID Connect Session Management 1.0</xref> -
              ログアウト機能を含む, OpenID Connect のセッション管理の方法を定義する.
              <!--
              <xref target="OpenID.Session">OpenID Connect Session Management 1.0</xref> -
              Defines how to manage OpenID Connect sessions, including logout functionality
              -->
            </t>
            <t>
              <xref target="OAuth.Post">OAuth 2.0 Form Post Response Mode</xref> -
              HTTP <spanx style="verb">POST</spanx> を使用するユーザエージェントによって, 自動送信された HTML フォーム値を使用して, OAuth2.0 の Authorization Response パラメータ (OpenID Connect Autentication Response パラメータを含む) を返却する方法を定義する.
              <!--
              <xref target="OAuth.Post">OAuth 2.0 Form Post Response Mode</xref> -
              Defines how to return OAuth 2.0 Authorization Response parameters
              (including OpenID Connect Authentication Response parameters)
              using HTML form values that are auto-submitted by the User Agent
              using HTTP <spanx style="verb">POST</spanx>
              -->
            </t>

          </list>
        </t>
        <t>
          これらの実装者ガイドは, 基本的な Web ベースの Relaying Party の実装者のための自己完結型の参考となることを意図している.
          <!--
          These implementer's guides are intended to serve as self-contained references
          for implementers of basic Web-based Relying Parties:
          -->

          <list style="symbols">
            <t>
              <xref target="OpenID.Basic">OpenID Connect Basic Client Implementer's Guide 1.0</xref> -
              この実装者ガイドは, OAuth Authorization Code Flow を使用するベーシックな Web ベースの Relying Party で利用することを目的とした, この仕様のサブセットを含んでいる.
            </t>
            <!--
            <t><xref target="OpenID.Basic">OpenID Connect Basic Client Implementer's Guide 1.0</xref> -
            Implementer's guide containing a subset of this specification
            that is intended for use by basic
            Web-based Relying Parties using the
            OAuth Authorization Code Flow</t>
            -->

            <t>
              <xref target="OpenID.Implicit">OpenID Connect Implicit Client Implementer's Guide 1.0</xref> -
              この実装者ガイドは, OAuth Implicit Flow を使用するベーシックな Web ベースの Relying Party で利用することを目的とした, この仕様のサブセットを含んでいる.
            </t>
            <!--
            <t><xref target="OpenID.Implicit">OpenID Connect Implicit Client Implementer's Guide 1.0</xref> -
            Implementer's guide containing a subset of this specification
            that is intended for use by basic
            Web-based Relying Parties using the
            OAuth Implicit Flow</t>
            -->

          </list>
        </t>
      </section>

    </section>

    <section anchor="Security" title="Security Considerations">
      <t>
        本仕様は, <xref target="RFC6749">OAuth 2.0</xref> の Section 10, <xref target="RFC6750">OAuth 2.0 Bearer Token Usage</xref> の Section 5 に定義されている security considerations を参照する.
        さらに, <xref target="RFC6819">OAuth 2.0 Threat Model and Security Considerations</xref> は, この仕様にもよくあてはまる OAuth 2.0 をベースとした脅威と制御の広範囲なリストを提供する.
        <xref target="ISO29115">ISO/IEC 29115</xref> もまた, 実装者が考慮する必要がある脅威と制御を提供する.
        実装者には, これらの引用の詳細を読み, それらに記載されている対抗策を適用することを勧める.
      </t>
      <!--
      <t>
        This specification references the security considerations defined in
        Section 10 of <xref target="RFC6749">OAuth 2.0</xref>, and
        Section 5 of <xref target="RFC6750">OAuth 2.0 Bearer Token Usage</xref>.
        Furthermore, the <xref target="RFC6819">OAuth 2.0 Threat Model and Security
        Considerations</xref> specification provides an extensive list of threats and controls
        that apply to this specification as well,
        given that it is based upon OAuth 2.0.
        <xref target="ISO29115">ISO/IEC 29115</xref>
        also provides threats and controls that
        implementers need to take into account.
        Implementers are highly advised to
        read these references in detail and apply the countermeasures described therein.
      </t>
      -->

      <t>
        加えて, 以下の攻撃ベクトルと救済策のリストもまた, 考慮される.
      </t>
      <!--
      <t>
        In addition, the following list of attack vectors and remedies are
        also considered.
      </t>
      -->

      <section anchor="RequestDisclosure" title="Request Disclosure">
        <t>
          適切な処置が講じられないとき, リクエストは攻撃者に漏洩され, セキュリティとプライバシーの脅威をもたらすかもしれない.
        </t>
        <!--
        <t>If appropriate measures are not taken, a request might be disclosed to
        an attacker, posing security and privacy threats.</t>
        -->
        <t>
          <xref target="RFC6819" /> の Section 5.1.1 にあることに加え, この仕様は <spanx style="verb">request</spanx> パラメータ (<spanx style="verb">request</spanx> の内容は適切な鍵と暗号により暗号化された JWT) もしくは <spanx style="verb">request_uri</spanx> パラメータを利用することによりエンドツーエンドでリクエストの機密性を提供する方法を提供する.
          これは, 間接的なリクエストの場合に改ざんされた User Agent からも保護する.
        </t>
        <!--
        <t>In addition to what is stated in Section 5.1.1 of <xref target="RFC6819" />,
        this standard provides a way to provide the confidentiality of the request
        end to end through the
        use of <spanx style="verb">request</spanx> or <spanx style="verb">request_uri</spanx>
        parameters, where the content of the <spanx style="verb">request</spanx>
        is an encrypted JWT with the appropriate key and cipher.
        This protects even against a compromised User Agent
        in the case of indirect request.</t>
        -->
      </section>

      <section anchor="ServerMasquerading" title="Server Masquerading">
        <t>
          悪意のある Server は, 様々な方法を用いて正規の Server に成りすますかもしれない.
          そのような攻撃を検知するため, Client は Server を認証する必要がある.
        </t>
        <!--
        <t>A malicious Server might masquerade as the legitimate server
        using various means. To detect such an attack, the Client needs to authenticate
        the server.</t>
        -->
        <t>
          <xref target="RFC6819" /> の Section 5.1.2 にあることに加え, この仕様は適切な鍵と暗号を用いた Signed JWT と Encrypted JWT の両方で Server を認証する方法を提供する.
        </t>
        <!--
        <t>In addition to what is stated in Section 5.1.2 of <xref target="RFC6819" />,
        this standard provides a way to authenticate the Server through either the
        use of Signed or Encrypted JWTs
        with an appropriate key and cipher.</t>
        -->
      </section>

      <section anchor="TokenManufacture"
               title="Token Manufacture/Modification">
        <t>
          攻撃者は偽のトークンを生成もしくは既存の解析可能なトークンの内容 (Claim や署名など) を修正し, RP に Client への不適切なアクセスを引き起こすかもしれない.
          例えば, 攻撃者は解析可能なトークンの有効期限を延長するかもしれない : Client は彼らが閲覧できない情報にアクセスするために解析可能なトークンを修正するかもしれない.
        </t>
        <!--
        <t>
          An Attacker might generate a bogus token or modify the token contents
          (such as Claims values or the signature)
          of an existing parseable token, causing the RP to grant
          inappropriate access to the Client. For example, an Attacker might modify
          the parseable token to extend the validity period; a Client might modify the
          parseable token to have access to information that they should not be able to view.
        </t>
        -->
        <t>
          この攻撃を軽減するための2つの方法がある:
        </t>
        <!--
        <t>There are two ways to mitigate this attack:</t>
        -->

        <t>
          <list style="numbers">
            <t>
              トークンはOPによりデジタル署名をつけることができる.
              Relying Party はそれが正規の OP から発行されたことを確認するためにデジタル署名を検証すべき (SHOULD).
            </t>
            <!--
            <t>The token can be digitally signed by the OP. The Relying
            Party SHOULD validate the digital signature to verify that it was
            issued by a legitimate OP.</t>
            -->

            <t>
              トークンは TLS のような, 保護されたチャンネル上で送られることができる.
              TLS の利用についての情報は <xref target="TLSRequirements"/> を参照すること.
              この仕様では, トークンは常に TLS で保護されたチャンネル上で送られる.
              しかし, この手段は第3者の攻撃に対する防御のみであり, Client が攻撃者になるケースには適用できない点に注意すること.
            </t>
            <!--
            <t>The token can be sent over a protected channel such as TLS.
            See <xref target="TLSRequirements"/> for more information on using TLS.
            In this specification, the token is always sent over a TLS protected channel.
            Note however, that this measure is only a defense against third party attackers
            and is not applicable to the case where the Client is the attacker.</t>
            -->
          </list>
        </t>
      </section>

      <section anchor="AccessTokenDisclosure" title="Access Token Disclosure">
        <t>
          <xref target="RFC6749">OAuth 2.0</xref> の Section 1.4 で定義されているように, Access Token は Protected Resources にアクセスするために用いられるクレデンシャルである.
          Access Token は End-User の認可を表すものであり, 認可されていない対象にさらされることはあってはならない (MUST NOT).
        </t>
        <!--
        <t>
          Access Tokens are credentials used to access Protected
          Resources, as defined in Section 1.4 of
          <xref target="RFC6749">OAuth 2.0</xref>. Access Tokens represent
          an End-User's authorization and MUST NOT be exposed to
          unauthorized parties.
        </t>
        -->
      </section>

      <section anchor="ResponseDisclosure" title="Server Response Disclosure">
        <t>
          サーバーのレスポンスは, 認証データとセンシティブな Client 情報を含む Claim を含む可能性がある.
          レスポンス内容の暴露は, Client を他の種類の攻撃に対して脆弱にすることができる.
        </t>
        <!--
        <t>
          The server response might contain authentication data and Claims
          that include sensitive Client information. Disclosure of the
          response contents can make the Client vulnerable to other types of
          attacks.
        </t>
        -->

        <t>
          サーバーレスポンスの公開は, 次の2つの方法により軽減されることができる:
          <!--
          The server response disclosure can be mitigated in the following two
          ways:
          -->
          <list style="numbers">
            <t>
              Response Type に <spanx style="verb">code</spanx> を利用する.
              レスポンスは TLS で保護されたチャンネル上で送られ, Client は <spanx style="verb">client_id</spanx> と <spanx style="verb">client_secret</spanx> によって認証される.
            </t>
            <!--
            <t>Using the <spanx style="verb">code</spanx> Response Type.
            The response is sent over a TLS protected
            channel, where the Client is authenticated by the
            <spanx style="verb">client_id</spanx> and
            <spanx style="verb">client_secret</spanx>.</t>
            -->

            <t>
              その他の Response Type については, 適切な鍵と暗号により暗号化された JWT として Client の公開鍵もしくは共有秘密鍵を暗号化されることができる.
            </t>
            <!--
            <t>For other Response Types,
            the signed response can be encrypted with the Client's
            public key or a shared secret as an encrypted JWT
            with an appropriate key and cipher.</t>
            -->
          </list>
        </t>
      </section>

      <section anchor="ServerResponseRepudiation" title="Server Response Repudiation">
        <t>
          適切なメカニズムが実施されていないならば, レスポンスは Serverにより拒否されるかもしれない.
          例えば, Server が デジタル署名をレスポンスに施さなかった場合, Server はそれが自身のサービスを通して生成されていないと主張することができる.
        </t>
        <!--
        <t>A response might be repudiated by the server if the proper mechanisms are not in place.
        For example, if a Server does not digitally sign a response, the Server can claim that it was not
        generated through the services of the Server.</t>
        -->

        <t>
          この脅威を軽減するため, レスポンスは否認防止のための鍵を用いて Server により署名されてもよい (MAY).
          Client はそれが正規の Server から発行されたものであり, 完全であることを確認するためにデジタル署名を検証すべき (SHOULD).
        </t>
        <!--
        <t>To mitigate this threat, the response MAY be digitally signed by
        the Server using a key that supports non-repudiation. The Client SHOULD validate
        the digital signature to verify that it was issued by a legitimate
        Server and its integrity is intact.</t>
        -->
      </section>

      <section anchor="RequestRepudation" title="Request Repudiation">
        <t>
          脆弱または悪意のある Client がリクエストを誤った対象に送ることがありえるため, bearer token のみを利用して認証された Client はいかなるトランザクションでも拒否されることができる.
        </t>
        <!--
        <t>Since it is possible for a
        compromised or malicious Client to send a request to the wrong party,
        a Client that was authenticated
        using only a bearer token can repudiate any transaction.
        </t>
        -->
        <t>
          この脅威を軽減するため, Server は Client により否認防止のための鍵を用いてデジタル署名されたリクエストを要求してもよい (MAY).
          Server はそれが正規の Client から発行されたものであり, 完全であることを確認するためにデジタル署名を検証すべき (SHOULD).
        </t>
        <!--
        <t>To mitigate this threat, the Server MAY require that the
        request be digitally signed by
        the Client using a key that supports non-repudiation.
        The Server SHOULD validate
        the digital signature to verify that it was issued by a legitimate
        Client and the integrity is intact.</t>
        -->
      </section>

      <section anchor="AccessTokenRedirect" title="Access Token Redirect">
        <t>
          攻撃者は, あるリソースのために生成された Access Token を別のリソースへのアクセスするために利用する.
        </t>
        <!--
        <t>An Attacker uses the Access Token generated for one resource to
        obtain access to a second resource.
        </t>
        -->
        <t>
          この脅威を軽減するため, Access Token は audience と scope に対して制限をかけるべき (SHOULD).
          それを実装するひとつの方法として, audience として生成されたリソースの識別子を含むことがある.
          リソースは, 受け取ったトークンが audience として自身の識別子を含むことを確認する.
        </t>
        <!--
        <t>To mitigate this threat, the Access Token SHOULD be audience
        and scope restricted. One way of implementing it is to include
        the identifier of the resource for whom it was generated as audience.
        The resource verifies that
        incoming tokens include its identifier as the audience of the
        token.</t>
        -->
      </section>

      <section anchor="TokenReuse" title="Token Reuse">
        <t>
          攻撃者は, 対象の Resource のために既に一度利用された Authorization Code のようなワンタイムなトークンの再利用を試みる.
          この脅威を軽減するため, トークンはタイムスタンプを含み, 有効期限を短くすべき (SHOULD).
          Relying Party は, トークンが現時点で有効であることを確実にするため, タイムスタンプと有効期限の値をチェックする.
        </t>
        <!--
        <t>An Attacker attempts to use a one-time use token such as
        an Authorization Code that has already
        been used once with the intended Resource.
        To mitigate this threat, the token SHOULD include a timestamp
        and a short validity lifetime.
        The Relying Party then checks the timestamp and lifetime values
        to ensure that the token is currently valid.</t>
        -->

        <t>
          あるいは, サーバーはトークンの利用状況を記録し, リクエスト毎にその状態を確認してもよい (MAY).
        </t>
        <!--
        <t>Alternatively, the server MAY record the state of the use of
        the token and check the status for each request.</t>
        -->
      </section>

      <section anchor="AuthCodeCapture"
               title=" Eavesdropping or Leaking Authorization Codes (Secondary Authenticator Capture)">
        <t>
          User Agent がマルウェアに感染している場合は, <xref target="RFC6819"/> Section 4.4.1.1 にある攻撃パターンに加え, Authorization Code が TLS セッションの終端となる User Agent 上でも盗聴される可能性がある.
          Client Authentication やレスポンス暗号化を用いると, この盗聴パターンは無効化できる.
        </t>
        <!--
        <t>In addition to the attack patterns described in
        Section 4.4.1.1 of <xref target="RFC6819"/>,
        an Authorization Code can be captured in the User Agent where the TLS
        session is terminated if the User Agent is infected by malware.
        However, capturing it is not useful as long as either
        Client Authentication or an encrypted response is used.
        </t>
        -->
      </section>

      <section anchor="TokenSubstitution" title="Token Substitution">
        <t>
          Token Substitution は, 不正なユーザがトークンを置換するタイプの攻撃である.
          交換されるトークンには Authorization Code も含まれる.
          アタッカーがあるセッション中からトークンを取り出し, 別のセッション中でそれを利用するなどすることで, この攻撃が可能となる.
          トークンがブラウザに渡される場合, これは非常に簡単な作業であり, 別名 "cut and paste" 攻撃とも呼ばれる.
        </t>
        <!--
        <t>
          Token Substitution is a class of attacks in which a malicious user
          swaps various tokens, including swapping an Authorization Code for
          a legitimate user with another token that the attacker has.
          One means of accomplishing this is for the attacker to copy
          a token out one session and use it in an HTTP message for
          a different session, which is easy to do when the token is
          available to the browser; this is known as the "cut and paste" attack.
        </t>
        -->
        <t>
          <xref target="RFC6749">OAuth 2.0</xref> Implicit Flow は, このリスクを考慮した設計になってはいない.
          <xref target="RFC6749">OAuth 2.0</xref> Section 10.16 においては, End-User 認証の為に OAuth 2.0 を利用する場合, Client が ID Token や Access Token が認証目的で利用可能かどうか判断できる追加のセキュリティメカニズムがない場合には Implicit Flow を利用しないよう Client に要求している (MUST NOT).
        </t>
        <!--
        <t>
          The Implicit Flow of <xref target="RFC6749">OAuth 2.0</xref>
          is not designed to mitigate this risk.  In Section 10.16,
          it normatively requires that any use of the authorization
          process as a form of delegated End-User authentication to the
          Client MUST NOT use the Implicit Flow without employing
          additional security mechanisms that enable the Client to
          determine whether the ID Token and Access Token were issued for its use.
        </t>
        -->
        <t>
          OpenID Connect では, ID Token を利用することでこのリスクを回避できる.
          ID Token は署名付きのセキュリティトークンであり, <spanx style="verb">iss</spanx> (issuer),
          <spanx style="verb">sub</spanx> (subject),
          <spanx style="verb">aud</spanx> (audience),
          <spanx style="verb">azp</spanx> (authorized party),
          <spanx style="verb">at_hash</spanx> (access token hash), および
          <spanx style="verb">c_hash</spanx> (code hash) を Claim として提供する.
          ID Token を利用することで, Client は Token Substitution Attack を検知可能になる.
        </t>
        <!--
        <t>
          In OpenID Connect, this is mitigated through mechanisms
          provided through the ID Token.  The ID Token is a signed
          security token that provides Claims such as
          <spanx style="verb">iss</spanx> (issuer),
          <spanx style="verb">sub</spanx> (subject),
          <spanx style="verb">aud</spanx> (audience),
          <spanx style="verb">azp</spanx> (authorized party),
          <spanx style="verb">at_hash</spanx> (access token hash), and
          <spanx style="verb">c_hash</spanx> (code hash).  Using the ID Token,
          the Client is capable of detecting the Token Substitution Attack.
        </t>
        -->
        <t>
          ID Token 内の <spanx style="verb">c_hash</spanx> は, Authorization Code 置換を防ぐために利用できる.
          同様に <spanx style="verb">at_hash</spanx> は Access Token 置換を防ぐために利用できる.
        </t>
        <!--
        <t>
          The <spanx style="verb">c_hash</spanx> in the ID Token enables
          Clients to prevent Authorization Code substitution.
          The <spanx style="verb">at_hash</spanx> in the ID Token enables
          Clients to prevent Access Token substitution.
        </t>
        -->
        <t>
          また不正なユーザが, Authorization Endpoint と Client の間, もしくは Token Endpoint と Client の間の通信に介入し, Authorization Code を置換したりメッセージの順序を入れ替えたりすることで, 特権ユーザになりすます可能性もある.
          この攻撃により, Token Endpoint が攻撃者の提示した認可グラントが, より権限の強い特権ユーザのそれとして受け入れてしまうかもしれない.
        </t>
        <!--
        <t>
          Also, a malicious user may attempt to impersonate a more
          privileged user by subverting the communication channel
          between the Authorization Endpoint and Client, or the Token Endpoint
          and Client, for example by swapping the Authorization Code
          or reordering the messages, to convince the Token Endpoint
          that the attacker's authorization grant corresponds to a grant
          sent on behalf of a more privileged user.
        </t>
        -->
        <t>
          本仕様で定義された HTTP バインディングでは, Token Request に対するレスポンスは HTTP メッセージ順に対応するリクエストと紐づけられる.
          トークンを含んだレスポンスとリクエストが TLS で保護されている限り, パケットの順序入れ替えは検知および防御可能であろう.
        </t>
        <!--
        <t>
          For the HTTP binding defined by this specification, the
          responses to Token Requests are bound to the corresponding
          requests by message order in HTTP, as both the response
          containing the token and requests are protected by TLS, which
          will detect and prevent packet reordering.
        </t>
        -->
        <t>
          Token Endpoint へのリクエストとレスポンスを強固に紐づけることができない何らかの他のプロトコルをバインディングとして本仕様を適用する場合, この問題に対する何らかの追加の対策が必要となる (MUST).
          <spanx style="verb">c_hash</spanx> Claim を含んだ ID Token をトークンリクエストおよびレスポンスに含むことなどが, 例として挙げられる.
        </t>
        <!--
        <t>
          When designing another binding of this specification to a
          protocol incapable of strongly binding Token Endpoint
          requests to responses, additional mechanisms to
          address this issue MUST be utilized. One such mechanism could
          be to include an ID Token with a <spanx style="verb">c_hash</spanx>
          Claim in the token request and response.
        </t>
        -->
      </section>

      <section anchor="TimingAttack" title="Timing Attack">
        <t>
          タイミングアタックにより, 攻撃者は復号処理や署名検証の成功/失敗にかかる処理時間の違いを通じて, 必定以上に多くの情報を得ることができる.
          この攻撃は, 暗号文の有効な鍵長を限定する為に利用できる.
        </t>
        <!--
        <t>A timing attack enables the attacker to
        obtain an unnecessary large amount of information through the elapsed time
        differences in the code paths taken by successful and unsuccessful decryption operations or
        successful and unsuccessful signature validation of a message.
        It can be used to reduce the effective key length of the
        cipher used.</t>
        -->
        <t>
          実装者はエラーを検知した際すぐに検証プロセスを終了するのではなく, 他のオクテットに対する処理を終えるまで処理を継続し, この攻撃を防ぐべきである (SHOULD).
        </t>
        <!--
        <t>Implementations SHOULD NOT terminate the validation process
        at the instant of the finding an error but SHOULD continue
        running until all the octets have been processed to avoid this attack.</t>
        -->
      </section>

      <section anchor="OtherCryptoAttacks" title="Other Crypto Related Attacks">
        <t>
          暗号, 署名, 完全性検証の手法に応じて, 暗号関連の様々な攻撃が考えられる.
          実装者は <xref target="JWT">JWT</xref> の Security Considerations, および JWT が参照する, 各脆弱性を防ぐための仕様群に従うこと.
        </t>
        <!--
        <t>There are various crypto related attacks possible depending on the
        method used for encryption and signature / integrity checking.
        Implementers need to consult the Security Considerations
        for the <xref target="JWT">JWT</xref> specification and
        specifications that it references
        to avoid the vulnerabilities
        identified in these specifications.
        </t>
        -->
      </section>

      <section anchor="SigningOrder" title="Signing and Encryption Order">
        <t>
          暗号文に対する署名は, 多くの法域 (jurisdiction: 法律用語, ある法律が適用される地域のこと) で有効と認められない.
          従って本仕様では, 完全性と非否認性を確保するため署名を利用する際には, 平文の JSON Claim に対して署名をすることを要求する.
          署名と暗号化がともに必要となる場合, 署名対象の Claim を含んだ JWS に対して暗号化を行うこと.
          これにより <xref target="JWT"/> で述べられている Nexted JWT が導出される.
          なお, 全ての JWE 暗号化アルゴリズムは完全性保護を提供しており, 暗号文に別途署名を行う必要はないことに注意すること.
        </t>
        <!--
        <t>
          Signatures over encrypted text are not considered valid
          in many jurisdictions.
          Therefore, for integrity and non-repudiation,
          this specification requires signing
          the plain text JSON Claims, when signing is performed.
          If both signing and encryption are desired, it is performed on
          the JWS containing the signed Claims,
          with the result being a Nested JWT, as specified in <xref target="JWT"/>.
          Note that since all JWE encryption algorithms provide integrity protection,
          there is no need to separately sign the encrypted content.
        </t>
        -->
      </section>

      <section anchor="IssuerIdentifier" title="Issuer Identifier">
        <t>
          OpenID Connect では, 1つの Host と Port のペアに対して複数の Issuer を配置することができる.
          従って, ディスカバリーで返される issuer は, ID Token に含まれる <spanx style="verb">iss</spanx> と完全一致しなければならない (MUST).
        </t>
        <!--
        <t>OpenID Connect supports multiple Issuers per Host and Port combination.
        The issuer returned by discovery MUST exactly match the value of
        <spanx style="verb">iss</spanx> in the ID Token.</t>
        -->

        <t>
          OpenID Connect は Issuer URI のパスコンポーネントを Issuer Identifier の一部として扱う.
          よって例えば subject が同じ "1234" であったとしても, Issuer Identifier が "https://example.com" なものと "https://example.com/sales" なものとでは, 異なる subject となる.
        </t>
        <!--
        <t>
          OpenID Connect treats the path component of any Issuer URI as
          being part of the Issuer Identifier.  For instance, the subject
          "1234" with an Issuer Identifier of "https://example.com" is not
          equivalent to the subject "1234" with an Issuer Identifier of
          "https://example.com/sales".
        </t>
        -->
        <t>
          ホストごとに単一の Issuer にとどめることを推奨する (RECOMMENDED).
          しかしながらマルチテナントなホストでは, 単一ホストに対して複数の Issuer が必要になるケースもあるであろう.
        </t>
        <!--
        <t>
          It is RECOMMENDED that only a single Issuer per host be used.
          However, if a host supports multiple tenants,
          multiple Issuers for that host may be needed.
        </t>
        -->
      </section>

      <section anchor="ImplicitFlowThreats" title="Implicit Flow Threats">
        <t>
          Implicit Flow では, Access Token は Client の <spanx style="verb">redirect_uri</spanx> のフラグメントを介して HTTPS で返される.
          従って OP と User Agent の間, User Agent と RP の間の通信は, 保護されている.
          しかしながら User Agent がマルウェアに感染していたり不正な操作者のコントロール下にある場合は, TLS セッションの終端となる User Agent 上で Access Token を読み取られることもありうる.
        </t>
        <!--
        <t>In the Implicit Flow, the Access Token is returned in the
        fragment component of the Client's <spanx style="verb">redirect_uri</spanx> through HTTPS, thus it is
        protected between the OP and the User Agent, and between the User Agent and the
        RP. The only place it can be captured is the User Agent where the
        TLS session is terminated, which is possible if the User Agent is
        infected by malware or under the control of a malicious party.</t>
        -->
      </section>

      <section anchor="TLSRequirements" title="TLS Requirements">
        <t>
          各実装は TLS をサポートしなければならない (MUST).
          どのバージョンを実装するかは, 時間の経過や広く利用されている実装, 既知のセキュリティ上の脆弱性などによって, その時々で変化しうる.
          本仕様執筆時点では, TLS version 1.2 <xref target='RFC5246' /> が最新のバージョンであるが, 実装は限定される.
          そのため実装時に使うツールキットではすぐには利用できないかもしれない.
          TLS version 1.0 <xref target='RFC2246' /> は最も広く利用されているバージョンであり, 最も広い相互運用性を提供するであろう.
        </t>
        <!--
        <t>
          Implementations MUST support TLS.
          Which version(s) ought to be implemented will vary over
          time, and depend on the widespread deployment and known
          security vulnerabilities at the time of implementation.
          At the time of this writing,
          TLS version 1.2 <xref target='RFC5246' />
          is the most recent version, but has very limited actual
          deployment, and might not be readily available in
          implementation toolkits.
          TLS version 1.0 <xref target='RFC2246' />
          is the most widely deployed version, and will give the
          broadest interoperability.
        </t>
        -->
        <t>
          情報漏洩や改竄に対しては, TLS を用いた秘匿性保護が必須である (MUST).
          TLS の秘匿性および完全性保護を提供する暗号スイートを利用すること.
        </t>
        <!--
        <t>
          To protect against information disclosure and tampering,
          confidentiality protection MUST be applied using TLS
          with a ciphersuite that provides confidentiality and
          integrity protection.
        </t>
        -->
        <t>
          TLS を利用する際は, 常に TLS サーバ証明書を検証しなければならない (MUST).
          詳細は <xref target="RFC6125">RFC 6125</xref> を参照のこと.
        </t>
        <!--
        <t>
          Whenever TLS is used, a TLS server certificate check
          MUST be performed, per <xref target="RFC6125">RFC 6125</xref>.
        </t>
        -->
      </section>
      <section anchor="TokenLifetime" title="Lifetimes of Access Tokens and Refresh Tokens">
        <t>
          Authorization Server は Access Token を無効化できないかもしれない.
          従って, Access Token の有効期間は一度の利用に十分な期間, もしくは非常に短い期間に限定するべきである (SHOULD).
        </t>
        <!--
        <t>Access Tokens might not be revocable by the Authorization Server.
        Access Token lifetimes SHOULD therefore be kept to single use or
        very short lifetimes.</t>
        -->

        <t>
          UserInfo Endpoint や他の Protected Resource に対する継続したアクセスが必要な場合は, Refresh Token を利用できる.
          Client は Token Endpoint に Refresh Token を送ることで, 新規の有効期間の短い Access Token を取得し, リソースアクセスに利用できる.
        </t>
        <!--
        <t>
          If ongoing access to the UserInfo Endpoint or other Protected Resources is required,
          a Refresh Token can be used. The Client can then exchange the Refresh Token at
          the Token Endpoint for a fresh short-lived Access Token that can be used to
          access the resource.
        </t>
        -->

        <t>
          Authorization Server は Authorization 中に User に対して長期間の認可を与えようとしていることを明示すべきである (SHOULD).
          Authorization Server は End-User に対して, 特定の Client に発行された Access Token および Refresh Token を無効化する手段を提供すべきである (SHOULD).
        </t>
        <!--
        <t>
          The Authorization Server SHOULD clearly identify long-term grants to the User
          during Authorization.
          The Authorization Server SHOULD provide a mechanism for the End-User to revoke
          Access Tokens and Refresh Tokens granted to a Client.
        </t>
        -->
      </section>

      <section anchor="SymmetricKeyEntropy" title="Symmetric Key Entropy">
        <t>
          <xref target="Signing"/> と <xref target="Encryption"/> では, 鍵は <spanx style="verb">client_secret</spanx> 値から導出される.
          従って共通鍵暗号による署名および暗号化を行うためには, <spanx style="verb">client_secret</spanx> が十分なエントロピーを持った暗号論的に強固な鍵とする必要がある (MUST).
          また <spanx style="verb">client_secret</spanx> は利用するアルゴリズムが利用する MAC 鍵に必要な最低限のオクテット長を持つ必要がある (MUST).
          例えば <spanx style="verb">HS256</spanx> を利用する際は, <spanx style="verb">client_secret</spanx> は最低でも32オクテットが必要である (MUST).
          (なお, 多くのの場合 <spanx style="verb">client_secret</spanx> はアルファベットに限定されるため, 明らかにそれ以上のオクテットが必要となるであろう (SHOULD))
        </t>
        <!--
        <t>
          In <xref target="Signing"/> and <xref target="Encryption"/>, keys are derived
          from the <spanx style="verb">client_secret</spanx> value.
          Thus, when used with symmetric signing or encryption operations,
          <spanx style="verb">client_secret</spanx> values MUST contain
          sufficient entropy to generate cryptographically strong keys.
          Also, <spanx style="verb">client_secret</spanx> values MUST also contain
          at least the minimum of number of octets required for MAC keys for the
          particular algorithm used.
          So for instance, for <spanx style="verb">HS256</spanx>, the
          <spanx style="verb">client_secret</spanx> value MUST contain
          at least 32 octets (and almost certainly SHOULD contain more,
          since <spanx style="verb">client_secret</spanx> values are
          likely to use a restricted alphabet).
        </t>
        -->
      </section>

      <section anchor="NeedForSignedRequests" title="Need for Signed Requests">
        <t>
          場合によっては, Client はリクエストパラメータの改竄を防止するため, リクエストに署名を行う必要があるかもしれない.
          例えば <spanx style="verb">max_age</spanx> と <spanx style="verb">acr_values</spanx> などは, 署名付きリクエストを用いた方がより正確に認証処理についての保証として有用になるであろう.
        </t>
        <!--
        <t>
          In some situations, Clients might need to use signed requests to ensure that
          the desired request parameters are delivered to the OP without having
          been tampered with.  For instance, the <spanx style="verb">max_age</spanx>
          and <spanx style="verb">acr_values</spanx> provide more assurance about
          the nature of the authentication performed when delivered in signed requests.
        </t>
        -->
      </section>

      <section anchor="NeedForEncryptedRequests" title="Need for Encrypted Requests">
        <t>
          場合によっては, OpenID Connect リクエストを除き見ることで, End-User に関するセンシティブな情報を漏洩させることもある.
          例えば Client が特定の Claim を要求したことや特定の認証方法を要求したことを知ることで, End-User に関するセンシティブな情報を漏洩させることもある.
          OpenID Connect は OpenID Provider へのリクエストを暗号化可能とすることで, センシティブ情報の漏洩を防止可能にする.
        </t>
        <!--
        <t>
          In some situations, knowing the contents of an OpenID Connect request can,
          in and of itself, reveal sensitive information about the End-User.
          For instance, knowing that the Client is requesting a particular Claim or
          that it is requesting that a particular authentication method be used
          can reveal sensitive information about the End-User.
          OpenID Connect enables requests to be encrypted to the OpenID Provider
          to prevent such potentially sensitive information from being revealed.
        </t>
        -->
      </section>
    </section>
    <section anchor="Privacy" title="Privacy Considerations">

      <section anchor="PII" title="Personally Identifiable Information">

        <t>The UserInfo Response typically contains Personally Identifiable
        Information (PII). As such, End-User consent for the release of the information
        for the specified purpose should be obtained at or prior to the
        authorization time in accordance with relevant regulations. The purpose
        of use is typically registered in association with the <spanx
        style="verb">redirect_uris</spanx>.</t>

        <t>Only necessary UserInfo data should be stored at the Client and the
        Client SHOULD associate the received data with the purpose of use
        statement.</t>
      </section>

      <section anchor="AccessMonitoring" title="Data Access Monitoring">
        <t>
          The Resource Server SHOULD make End-Users' UserInfo access logs
          available to them so that they can monitor who accessed their data.
        </t>
      </section>

      <section anchor="Correlation" title="Correlation">
        <t>To protect the End-User from a possible correlation among Clients, the
        use of a Pairwise Pseudonymous Identifier (PPID) as the
        <spanx style="verb">sub</spanx> (subject) SHOULD be considered.</t>
      </section>

      <section anchor="OfflineAccessPrivacy" title="Offline Access">

        <t>
          Offline access enables access to Claims when the user is not present,
          posing greater privacy risk than the Claims transfer when the user is present.
          Therefore, it is prudent to obtain explicit consent for
          offline access to resources.
          This specification mandates the use of the <spanx style="verb">prompt</spanx>
          parameter to obtain consent unless it is already known that the
          request complies with the conditions for processing the request in each jurisdiction.
        </t>
        <t>
          When an Access Token is returned via the User Agent
          using the Implicit Flow or Hybrid Flow, there is
          a greater risk of it being exposed to an attacker, who could
          later use it to access the UserInfo endpoint.
          If the Access Token does not enable offline access and the server
          can differentiate whether the Client request has been made
          offline or online, the risk will be substantially reduced.
          Therefore, this specification mandates ignoring
          the offline access request when the Access Token is
          transmitted through the User Agent.
          Note that differentiating between online and offline access
          from the server can be difficult especially for native clients.
          The server may well have to rely on heuristics.
          Also, the risk of exposure for the Access Token delivered
          through the User Agent for the Response Types of
          <spanx style="verb">code&nbsp;token</spanx> and
          <spanx style="verb">token</spanx> is the same.
          Thus, the implementations should be prepared to detect
          whether the Access Token was issued through the User Agent
          or directly from the Token Endpoint and deny offline access
          if the token was issued through the User Agent.
        </t>
        <t>
          Note that although these provisions require an explicit
          consent dialogue through the <spanx style="verb">prompt</spanx> parameter,
          the mere fact that the user pressed an "accept" button etc.,
          might not constitute a valid consent.
          Developers should be aware that for the act of consent to
          be valid, typically, the impact of the terms have to be
          understood by the End-User, the consent must be freely given
          and not forced (i.e., other options have to be available),
          and the terms must fair and equitable.
          In general, it is advisable for the service to follow the
          required privacy principles in each jurisdiction and rely on
          other conditions for processing the request than simply explicit consent,
          as online self-service "explicit consent" often does not
          form a valid consent in some jurisdictions.
        </t>
      </section>
    </section>

    <section anchor="IANA" title="IANA Considerations">

      <section anchor="ClaimsRegistry" title="JSON Web Token Claims Registration">
        <t>
          This specification registers the Claims defined in
          <xref target="StandardClaims"/> and <xref target="IDToken"/> in the IANA
          JSON Web Token Claims registry
          defined in <xref target="JWT"/>.
        </t>

        <section anchor='ClaimsContents' title='Registry Contents'>
          <t> <?rfc subcompact="yes"?>
          <list style='symbols'>
            <t>
              Claim Name: <spanx style="verb">name</spanx>
            </t>
            <t>
              Claim Description: Full name
            </t>
            <t>
              Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net
            </t>
            <t>
              Specification Document(s): <xref target="StandardClaims"/> of this document
            </t>
          </list>
          </t>
          <t>
            <list style='symbols'>
              <t>
                Claim Name: <spanx style="verb">given_name</spanx>
              </t>
              <t>
                Claim Description: Given name(s) or first name(s)
              </t>
              <t>
                Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net
              </t>
              <t>
                Specification Document(s): <xref target="StandardClaims"/> of this document
              </t>
            </list>
          </t>
          <t>
            <list style='symbols'>
              <t>
                Claim Name: <spanx style="verb">family_name</spanx>
              </t>
              <t>
                Claim Description: Surname(s) or last name(s)
              </t>
              <t>
                Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net
              </t>
              <t>
                Specification Document(s): <xref target="StandardClaims"/> of this document
              </t>
            </list>
          </t>
          <t>
            <list style='symbols'>
              <t>
                Claim Name: <spanx style="verb">middle_name</spanx>
              </t>
              <t>
                Claim Description: Middle name(s)
              </t>
              <t>
                Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net
              </t>
              <t>
                Specification Document(s): <xref target="StandardClaims"/> of this document
              </t>
            </list>
          </t>
          <t>
            <list style='symbols'>
              <t>
                Claim Name: <spanx style="verb">nickname</spanx>
              </t>
              <t>
                Claim Description: Casual name
              </t>
              <t>
                Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net
              </t>
              <t>
                Specification Document(s): <xref target="StandardClaims"/> of this document
              </t>
            </list>
          </t>
          <t>
            <list style='symbols'>
              <t>
                Claim Name: <spanx style="verb">preferred_username</spanx>
              </t>
              <t>
                Claim Description: Shorthand name by which the End-User wishes to be referred to
              </t>
              <t>
                Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net
              </t>
              <t>
                Specification Document(s): <xref target="StandardClaims"/> of this document
              </t>
            </list>
          </t>
          <t>
            <list style='symbols'>
              <t>
                Claim Name: <spanx style="verb">profile</spanx>
              </t>
              <t>
                Claim Description: Profile page URL
              </t>
              <t>
                Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net
              </t>
              <t>
                Specification Document(s): <xref target="StandardClaims"/> of this document
              </t>
            </list>
          </t>
          <t>
            <list style='symbols'>
              <t>
                Claim Name: <spanx style="verb">picture</spanx>
              </t>
              <t>
                Claim Description: Profile picture URL
              </t>
              <t>
                Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net
              </t>
              <t>
                Specification Document(s): <xref target="StandardClaims"/> of this document
              </t>
            </list>
          </t>
          <t>
            <list style='symbols'>
              <t>
                Claim Name: <spanx style="verb">website</spanx>
              </t>
              <t>
                Claim Description: Web page or blog URL
              </t>
              <t>
                Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net
              </t>
              <t>
                Specification Document(s): <xref target="StandardClaims"/> of this document
              </t>
            </list>
          </t>
          <t>
            <list style='symbols'>
              <t>
                Claim Name: <spanx style="verb">email</spanx>
              </t>
              <t>
                Claim Description: Preferred e-mail address
              </t>
              <t>
                Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net
              </t>
              <t>
                Specification Document(s): <xref target="StandardClaims"/> of this document
              </t>
            </list>
          </t>
          <t>
            <list style='symbols'>
              <t>
                Claim Name: <spanx style="verb">email_verified</spanx>
              </t>
              <t>
                Claim Description: True if the e-mail address has been verified; otherwise false
              </t>
              <t>
                Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net
              </t>
              <t>
                Specification Document(s): <xref target="StandardClaims"/> of this document
              </t>
            </list>
          </t>
          <t>
            <list style='symbols'>
              <t>
                Claim Name: <spanx style="verb">gender</spanx>
              </t>
              <t>
                Claim Description: Gender
              </t>
              <t>
                Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net
              </t>
              <t>
                Specification Document(s): <xref target="StandardClaims"/> of this document
              </t>
            </list>
          </t>
          <t>
            <list style='symbols'>
              <t>
                Claim Name: <spanx style="verb">birthdate</spanx>
              </t>
              <t>
                Claim Description: Birthday
              </t>
              <t>
                Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net
              </t>
              <t>
                Specification Document(s): <xref target="StandardClaims"/> of this document
              </t>
            </list>
          </t>
          <t>
            <list style='symbols'>
              <t>
                Claim Name: <spanx style="verb">zoneinfo</spanx>
              </t>
              <t>
                Claim Description: Time zone
              </t>
              <t>
                Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net
              </t>
              <t>
                Specification Document(s): <xref target="StandardClaims"/> of this document
              </t>
            </list>
          </t>
          <t>
            <list style='symbols'>
              <t>
                Claim Name: <spanx style="verb">locale</spanx>
              </t>
              <t>
                Claim Description: Locale
              </t>
              <t>
                Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net
              </t>
              <t>
                Specification Document(s): <xref target="StandardClaims"/> of this document
              </t>
            </list>
          </t>
          <t>
            <list style='symbols'>
              <t>
                Claim Name: <spanx style="verb">phone_number</spanx>
              </t>
              <t>
                Claim Description: Preferred telephone number
              </t>
              <t>
                Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net
              </t>
              <t>
                Specification Document(s): <xref target="StandardClaims"/> of this document
              </t>
            </list>
          </t>
          <t>
            <list style='symbols'>
              <t>
                Claim Name: <spanx style="verb">phone_number_verified</spanx>
              </t>
              <t>
                Claim Description: True if the phone number has been verified; otherwise false
              </t>
              <t>
                Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net
              </t>
              <t>
                Specification Document(s): <xref target="StandardClaims"/> of this document
              </t>
            </list>
          </t>
          <t>
            <list style='symbols'>
              <t>
                Claim Name: <spanx style="verb">address</spanx>
              </t>
              <t>
                Claim Description: Preferred postal address
              </t>
              <t>
                Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net
              </t>
              <t>
                Specification Document(s): <xref target="StandardClaims"/> of this document
              </t>
            </list>
          </t>
          <t>
            <list style='symbols'>
              <t>
                Claim Name: <spanx style="verb">updated_at</spanx>
              </t>
              <t>
                Claim Description: Time the information was last updated
              </t>
              <t>
                Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net
              </t>
              <t>
                Specification Document(s): <xref target="StandardClaims"/> of this document
              </t>
            </list>
          </t>
          <t>
            <list style='symbols'>
              <t>
                Claim Name: <spanx style="verb">azp</spanx>
              </t>
              <t>
                Claim Description: Authorized party - the party to which the ID Token was issued
              </t>
              <t>
                Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net
              </t>
              <t>
                Specification Document(s): <xref target="IDToken"/> of this document
              </t>
            </list>
          </t>
          <t>
            <list style='symbols'>
              <t>
                Claim Name: <spanx style="verb">nonce</spanx>
              </t>
              <t>
                Claim Description: Value used to associate a Client session with an ID Token
              </t>
              <t>
                Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net
              </t>
              <t>
                Specification Document(s): <xref target="IDToken"/> of this document
              </t>
            </list>
          </t>
          <t>
            <list style='symbols'>
              <t>
                Claim Name: <spanx style="verb">auth_time</spanx>
              </t>
              <t>
                Claim Description: Time when the authentication occurred
              </t>
              <t>
                Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net
              </t>
              <t>
                Specification Document(s): <xref target="IDToken"/> of this document
              </t>
            </list>
          </t>
          <t>
            <list style='symbols'>
              <t>
                Claim Name: <spanx style="verb">at_hash</spanx>
              </t>
              <t>
                Claim Description: Access Token hash value
              </t>
              <t>
                Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net
              </t>
              <t>
                Specification Document(s): <xref target="IDToken"/> of this document
              </t>
            </list>
          </t>
          <t>
            <list style='symbols'>
              <t>
                Claim Name: <spanx style="verb">c_hash</spanx>
              </t>
              <t>
                Claim Description: Code hash value
              </t>
              <t>
                Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net
              </t>
              <t>
                Specification Document(s): <xref target="HybridIDToken"/> of this document
              </t>
            </list>
          </t>
          <t>
            <list style='symbols'>
              <t>
                Claim Name: <spanx style="verb">acr</spanx>
              </t>
              <t>
                Claim Description: Authentication Context Class Reference
              </t>
              <t>
                Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net
              </t>
              <t>
                Specification Document(s): <xref target="IDToken"/> of this document
              </t>
            </list>
          </t>
          <t>
            <list style='symbols'>
              <t>
                Claim Name: <spanx style="verb">amr</spanx>
              </t>
              <t>
                Claim Description: Authentication Methods References
              </t>
              <t>
                Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net
              </t>
              <t>
                Specification Document(s): <xref target="IDToken"/> of this document
              </t>
            </list>
          </t>
          <t>
            <list style='symbols'>
              <t>
                Claim Name: <spanx style="verb">sub_jwk</spanx>
              </t>
              <t>
                Claim Description: Public key used to check the signature of an ID Token
              </t>
              <t>
                Change Controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net
              </t>
              <t>
                Specification Document(s): <xref target="SelfIssuedResponse"/> of this document
              </t>
            </list>
          </t>
        </section>
        <?rfc subcompact="no"?>
      </section>

      <section anchor="OAuthParametersRegistry" title="OAuth Parameters Registration">

        <t>
          This specification registers the following parameters
          in the IANA
          OAuth Parameters registry
          defined in <xref target="RFC6749">RFC 6749</xref>.
        </t>

        <section anchor='ParametersContents' title='Registry Contents'>
          <t> <?rfc subcompact="yes"?>
          <list style="symbols">
            <t>Parameter name: <spanx style="verb">nonce</spanx></t>

            <t>Parameter usage location: Authorization Request</t>

            <t>Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net</t>

            <t>Specification document(s): <xref target="AuthorizationEndpoint"/> of this document</t>

            <t>Related information: None</t>
          </list>
          </t>

          <t>
            <list style="symbols">
              <t>Parameter name: <spanx style="verb">display</spanx></t>

              <t>Parameter usage location: Authorization Request</t>

              <t>Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net</t>

              <t>Specification document(s): <xref target="AuthorizationEndpoint"/> of this document</t>

              <t>Related information: None</t>
            </list>
          </t>

          <t>
            <list style="symbols">
              <t>Parameter name: <spanx style="verb">prompt</spanx></t>

              <t>Parameter usage location: Authorization Request</t>

              <t>Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net</t>

              <t>Specification document(s): <xref target="AuthorizationEndpoint"/> of this document</t>

              <t>Related information: None</t>
            </list>
          </t>

          <t>
            <list style="symbols">
              <t>Parameter name: <spanx style="verb">max_age</spanx></t>

              <t>Parameter usage location: Authorization Request</t>

              <t>Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net</t>

              <t>Specification document(s): <xref target="AuthorizationEndpoint"/> of this document</t>

              <t>Related information: None</t>
            </list>
          </t>

          <t>
            <list style="symbols">
              <t>Parameter name: <spanx style="verb">ui_locales</spanx></t>

              <t>Parameter usage location: Authorization Request</t>

              <t>Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net</t>

              <t>Specification document(s): <xref target="AuthorizationEndpoint"/> of this document</t>

              <t>Related information: None</t>
            </list>
          </t>

          <t>
            <list style="symbols">
              <t>Parameter name: <spanx style="verb">claims_locales</spanx></t>

              <t>Parameter usage location: Authorization Request</t>

              <t>Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net</t>

              <t>Specification document(s): <xref target="ClaimsLanguagesAndScripts"/> of this document</t>

              <t>Related information: None</t>
            </list>
          </t>

          <t>
            <list style="symbols">
              <t>Parameter name: <spanx style="verb">id_token_hint</spanx></t>

              <t>Parameter usage location: Authorization Request</t>

              <t>Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net</t>

              <t>Specification document(s): <xref target="AuthorizationEndpoint"/> of this document</t>

              <t>Related information: None</t>
            </list>
          </t>

          <t>
            <list style="symbols">
              <t>Parameter name: <spanx style="verb">login_hint</spanx></t>

              <t>Parameter usage location: Authorization Request</t>

              <t>Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net</t>

              <t>Specification document(s): <xref target="AuthorizationEndpoint"/> of this document</t>

              <t>Related information: None</t>
            </list>
          </t>

          <t>
            <list style="symbols">
              <t>Parameter name: <spanx style="verb">acr_values</spanx></t>

              <t>Parameter usage location: Authorization Request</t>

              <t>Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net</t>

              <t>Specification document(s): <xref target="AuthorizationEndpoint"/> of this document</t>

              <t>Related information: None</t>
            </list>
          </t>

          <t>
            <list style="symbols">
              <t>Parameter name: <spanx style="verb">claims</spanx></t>

              <t>Parameter usage location: Authorization Request</t>

              <t>Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net</t>

              <t>Specification document(s): <xref target="ClaimsParameter"/> of this document</t>

              <t>Related information: None</t>
            </list>
          </t>

          <t>
            <list style="symbols">
              <t>Parameter name: <spanx style="verb">registration</spanx></t>

              <t>Parameter usage location: Authorization Request</t>

              <t>Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net</t>

              <t>Specification document(s): <xref target="RegistrationParameter"/> of this document</t>

              <t>Related information: None</t>
            </list>
          </t>

          <t>
            <list style="symbols">
              <t>Parameter name: <spanx style="verb">request</spanx></t>

              <t>Parameter usage location: Authorization Request</t>

              <t>Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net</t>

              <t>Specification document(s): <xref target="JWTRequests"/> of this document</t>

              <t>Related information: None</t>
            </list>
          </t>

          <t>
            <list style="symbols">
              <t>Parameter name: <spanx style="verb">request_uri</spanx></t>

              <t>Parameter usage location: Authorization Request</t>

              <t>Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net</t>

              <t>Specification document(s): <xref target="JWTRequests"/> of this document</t>

              <t>Related information: None</t>
            </list>
          </t>

          <t>
            <list style="symbols">
              <t>Parameter name: <spanx style="verb">id_token</spanx></t>

              <t>Parameter usage location: Authorization Response,
              Access Token Response</t>

              <t>Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net</t>

              <t>Specification document(s): <xref target="TokenResponse"/> of this document</t>

              <t>Related information: None</t>
            </list>
          </t>
        </section>
        <?rfc subcompact="no"?>

      </section>

      <section anchor="OAuthErrorRegistry" title="OAuth Extensions Error Registration">

        <t>
          This specification registers the following errors
          in the IANA
          OAuth Extensions Error registry
          defined in <xref target="RFC6749">RFC 6749</xref>.
        </t>

        <section anchor='ErrorContents' title='Registry Contents'>
          <t> <?rfc subcompact="yes"?>
            <list style="symbols">
              <t>Error name: <spanx style="verb">interaction_required</spanx></t>

              <t>Error usage location: Authorization Endpoint</t>

              <t>Related protocol extension: OpenID Connect</t>

              <t>Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net</t>

              <t>Specification document(s): <xref target="AuthError"/> of this document</t>
            </list>
          </t>

          <t>
            <list style="symbols">
              <t>Error name: <spanx style="verb">login_required</spanx></t>

              <t>Error usage location: Authorization Endpoint</t>

              <t>Related protocol extension: OpenID Connect</t>

              <t>Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net</t>

              <t>Specification document(s): <xref target="AuthError"/> of this document</t>
            </list>
          </t>

          <t>
            <list style="symbols">
              <t>Error name: <spanx style="verb">account_selection_required</spanx></t>

              <t>Error usage location: Authorization Endpoint</t>

              <t>Related protocol extension: OpenID Connect</t>

              <t>Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net</t>

              <t>Specification document(s): <xref target="AuthError"/> of this document</t>
            </list>
          </t>

          <t>
            <list style="symbols">
              <t>Error name: <spanx style="verb">consent_required</spanx></t>

              <t>Error usage location: Authorization Endpoint</t>

              <t>Related protocol extension: OpenID Connect</t>

              <t>Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net</t>

              <t>Specification document(s): <xref target="AuthError"/> of this document</t>
            </list>
          </t>

          <t>
            <list style="symbols">
              <t>Error name: <spanx style="verb">invalid_request_uri</spanx></t>

              <t>Error usage location: Authorization Endpoint</t>

              <t>Related protocol extension: OpenID Connect</t>

              <t>Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net</t>

              <t>Specification document(s): <xref target="AuthError"/> of this document</t>
            </list>
          </t>

          <t>
            <list style="symbols">
              <t>Error name: <spanx style="verb">invalid_request_object</spanx></t>

              <t>Error usage location: Authorization Endpoint</t>

              <t>Related protocol extension: OpenID Connect</t>

              <t>Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net</t>

              <t>Specification document(s): <xref target="AuthError"/> of this document</t>
            </list>
          </t>

          <t>
            <list style="symbols">
              <t>Error name: <spanx style="verb">request_not_supported</spanx></t>

              <t>Error usage location: Authorization Endpoint</t>

              <t>Related protocol extension: OpenID Connect</t>

              <t>Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net</t>

              <t>Specification document(s): <xref target="AuthError"/> of this document</t>
            </list>
          </t>

          <t>
            <list style="symbols">
              <t>Error name: <spanx style="verb">request_uri_not_supported</spanx></t>

              <t>Error usage location: Authorization Endpoint</t>

              <t>Related protocol extension: OpenID Connect</t>

              <t>Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net</t>

              <t>Specification document(s): <xref target="AuthError"/> of this document</t>
            </list>
          </t>

          <t>
            <list style="symbols">
              <t>Error name: <spanx style="verb">registration_not_supported</spanx></t>

              <t>Error usage location: Authorization Endpoint</t>

              <t>Related protocol extension: OpenID Connect</t>

              <t>Change controller: OpenID Foundation Artifact Binding Working Group - openid-specs-ab@lists.openid.net</t>

              <t>Specification document(s): <xref target="AuthError"/> of this document</t>
            </list>
          </t>

        </section>
        <?rfc subcompact="no"?>

      </section>
    </section>

  </middle>

  <back>
    <references title="Normative References">
      <?rfc include="http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119"?>
      <?rfc include="http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2246"?>
      <?rfc include="http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2616"?>
      <?rfc include="http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4627"?>
      <?rfc include="http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3339"?>
      <?rfc include="http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3966"?>
      <?rfc include="http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3986"?>
      <?rfc include="http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5246"?>
      <?rfc include="http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5322"?>
      <?rfc include="http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5646"?>
      <?rfc include="http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6125"?>
      <?rfc include="http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6711"?>
      <?rfc include="http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6749"?>
      <?rfc include="http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6750"?>
      <?rfc include="http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6819"?>

      <?rfc include='http://xml2rfc.tools.ietf.org/public/rfc/bibxml4/reference.W3C.REC-html401-19991224.xml' ?>

      <reference anchor="USA15">
        <front>
          <title>Unicode Normalization Forms</title>

          <author fullname="Mark Davis" initials="M." surname="Davis">
            <address>
              <email>markdavis@google.com</email>
            </address>
          </author>

          <author fullname="Ken Whistler" initials="K." surname="Whistler">
            <address>
              <email>ken@unicode.org</email>
            </address>
          </author>

          <author fullname="Martin D&uuml;rst" initials="M." surname="D&uuml;rst">
          </author>

          <date day="03" month="09" year="2009" />
        </front>

        <seriesInfo name="Unicode Standard Annex" value="15" />
      </reference>

      <reference anchor="OpenID.Discovery">
        <front>
          <title>OpenID Connect Discovery 1.0</title>

          <author fullname="Nat Sakimura" initials="N." surname="Sakimura">
            <organization abbrev="NRI">Nomura Research Institute, Ltd.</organization>
          </author>

          <author fullname="John Bradley" initials="J." surname="Bradley">
            <organization abbrev="Ping Identity">Ping Identity</organization>
          </author>

          <author fullname="Michael B. Jones" initials="M.B." surname="Jones">
            <organization abbrev="Microsoft">Microsoft</organization>
          </author>

          <author fullname="Edmund Jay" initials="E." surname="Jay">
            <organization abbrev="Illumila">Illumila</organization>
          </author>

          <date day="8" month="November" year="2014"/>
        </front>

        <format target="http://openid.net/specs/openid-connect-discovery-1_0.html"
                type="HTML" />
      </reference>

      <reference anchor="OpenID.Registration">
        <front>
          <title>OpenID Connect Dynamic Client Registration 1.0</title>

          <author fullname="Nat Sakimura" initials="N." surname="Sakimura">
            <organization abbrev="NRI">Nomura Research Institute, Ltd.</organization>
          </author>

          <author fullname="John Bradley" initials="J." surname="Bradley">
            <organization abbrev="Ping Identity">Ping Identity</organization>
          </author>

          <author fullname="Michael B. Jones" initials="M.B." surname="Jones">
            <organization abbrev="Microsoft">Microsoft</organization>
          </author>

          <date day="8" month="November" year="2014"/>
        </front>

        <format target="http://openid.net/specs/openid-connect-registration-1_0.html"
                type="HTML" />
      </reference>

      <reference anchor="JWT">
        <front>
          <title>JSON Web Token (JWT)</title>

          <author fullname="Michael B. Jones" initials="M.B." surname="Jones">
            <organization abbrev="Microsoft">Microsoft</organization>
          </author>

          <author fullname="John Bradley" initials="J." surname="Bradley">
            <organization abbrev="Ping Identity">Ping Identity</organization>
          </author>

          <author fullname="Nat Sakimura" initials="N." surname="Sakimura">
            <organization abbrev="NRI">Nomura Research Institute, Ltd.</organization>
          </author>

          <date day="4" month="July" year="2014" />
        </front>

        <seriesInfo value="draft-ietf-oauth-json-web-token" name="Internet-Draft"/>
        <format target="http://tools.ietf.org/html/draft-ietf-oauth-json-web-token-25"
                type="HTML" />
      </reference>

      <reference anchor="JWS">
        <front>
          <title>JSON Web Signature (JWS)</title>

          <author fullname="Michael B. Jones" initials="M.B." surname="Jones">
            <organization abbrev="Microsoft">Microsoft</organization>
          </author>

          <author fullname="John Bradley" initials="J." surname="Bradley">
            <organization abbrev="Ping Identity">Ping Identity</organization>
          </author>

          <author fullname="Nat Sakimura" initials="N." surname="Sakimura">
            <organization abbrev="NRI">Nomura Research Institute, Ltd.</organization>
          </author>

          <date day="4" month="July" year="2014" />
        </front>

        <seriesInfo value="draft-ietf-jose-json-web-signature" name="Internet-Draft"/>
        <format target="http://tools.ietf.org/html/draft-ietf-jose-json-web-signature-31"
                type="HTML" />
      </reference>

      <reference anchor="JWE">
        <front>
          <title>JSON Web Encryption (JWE)</title>

          <author fullname="Michael B. Jones" initials="M.B." surname="Jones">
            <organization>Microsoft</organization>
          </author>

          <author fullname="Eric Rescorla" initials="E." surname="Rescorla">
            <organization>RTFM, Inc.</organization>
          </author>

          <author fullname="Joe Hildebrand" initials="J." surname="Hildebrand">
            <organization>Cisco Systems, Inc.</organization>
          </author>

          <date day="4" month="July" year="2014" />
        </front>

        <seriesInfo value="draft-ietf-jose-json-web-encryption" name="Internet-Draft"/>
        <format target="http://tools.ietf.org/html/draft-ietf-jose-json-web-encryption-31" type="HTML" />
      </reference>

      <reference anchor="JWK">
        <front>
          <title>JSON Web Key (JWK)</title>

          <author fullname="Michael B. Jones" initials="M.B." surname="Jones">
            <organization>Microsoft</organization>
          </author>

          <date day="4" month="July" year="2014" />
        </front>

        <seriesInfo value="draft-ietf-jose-json-web-key" name="Internet-Draft"/>
        <format target="http://tools.ietf.org/html/draft-ietf-jose-json-web-key-31" type="HTML" />
      </reference>

      <reference anchor="JWA">
        <front>
          <title>JSON Web Algorithms (JWA)</title>

          <author fullname="Michael B. Jones" initials="M.B." surname="Jones">
            <organization>Microsoft</organization>
          </author>

          <date day="4" month="July" year="2014" />
        </front>

        <seriesInfo value="draft-ietf-jose-json-web-algorithms" name="Internet-Draft"/>
        <format target="http://tools.ietf.org/html/draft-ietf-jose-json-web-algorithms-31" type="HTML" />
      </reference>

      <reference anchor="OAuth.JWT">
        <front>
          <title abbrev="OAuth JWT Assertion Profiles">JSON Web Token (JWT) Profile for OAuth 2.0 Client Authentication and Authorization Grants</title>

          <author fullname="Michael B. Jones" surname="Jones" initials="M.B."> <!-- role="editor" -->
            <organization>Microsoft</organization>
          </author>

          <author fullname="Brian Campbell" initials="B." surname="Campbell">
            <organization abbrev="Ping Identity">Ping Identity</organization>
          </author>

          <author fullname="Chuck Mortimore" initials="C." surname="Mortimore">
            <organization>Salesforce</organization>
          </author>

          <date day="23" month="July" year="2014"/>
        </front>

        <seriesInfo value="draft-ietf-oauth-jwt-bearer" name="Internet-Draft"/>
        <format target="http://tools.ietf.org/html/draft-ietf-oauth-jwt-bearer-10"
                type="HTML" />
      </reference>

      <reference anchor="OAuth.Assertions">
        <front>
          <title abbrev="OAuth Assertion Framework">Assertion Framework for OAuth 2.0 Client Authentication and Authorization Grants</title>

          <author fullname="Brian Campbell" initials="B." surname="Campbell">
            <organization abbrev="Ping Identity">Ping Identity</organization>
          </author>

          <author fullname="Chuck Mortimore" initials="C." surname="Mortimore">
            <organization abbrev="Salesforce">Salesforce.com</organization>
          </author>

          <author fullname="Michael B. Jones" initials="M.B." surname="Jones">
            <organization abbrev="Microsoft">Microsoft</organization>
          </author>

          <author fullname="Yaron Y. Goland" initials="Y.Y." surname="Goland">
            <organization abbrev="Microsoft">Microsoft</organization>
          </author>

          <date day="23" month="July" year="2014"/>
        </front>

        <seriesInfo value="draft-ietf-oauth-assertions" name="Internet-Draft"/>
        <format target="http://tools.ietf.org/html/draft-ietf-oauth-assertions-17"
                type="HTML" />
      </reference>

      <reference anchor="ISO29115">
        <front>
          <title>ISO/IEC 29115:2013 --
          Information technology - Security techniques - Entity authentication
          assurance framework</title>

          <author fullname="International Organization for Standardization">
            <organization abbrev="ISO">International Organization for Standardization</organization>
          </author>

          <date month="March" year="2013" />
        </front>

        <seriesInfo name="ISO/IEC" value="29115" />
        <format target="http://www.iso.org/iso/iso_catalogue/catalogue_tc/catalogue_detail.htm?csnumber=45138"
                type="HTML" />
      </reference>

      <reference anchor="ISO639-1">
        <front>
          <title>ISO 639-1:2002. Codes for the representation of names of
          languages -- Part 1: Alpha-2 code</title>

          <author fullname="International Organization for Standardization">
            <organization abbrev="ISO">International Organization for
            Standardization</organization>
          </author>

          <date year="2002" />
        </front>
      </reference>

      <reference anchor="ISO3166-1">
        <front>
          <title>ISO 3166-1:1997. Codes for the representation of names of
          countries and their subdivisions -- Part 1: Country codes</title>

          <author fullname="International Organization for Standardization">
            <organization abbrev="ISO">International Organization for
            Standardization</organization>
          </author>

          <date year="1997" />
        </front>

        <format target="http://www.w3.org/WAI/ER/IG/ert/iso639.htm"
                type="HTML" />
      </reference>

      <reference anchor="ISO8601-2004">
        <front>
          <title>ISO 8601:2004. Data elements and interchange formats - Information interchange -
          Representation of dates and times</title>

          <author fullname="International Organization for Standardization">
            <organization abbrev="ISO">International Organization for
            Standardization</organization>
          </author>

          <date year="2004" />
        </front>
      </reference>

      <reference anchor="E.164">
        <front>
          <title>E.164: The international public telecommunication numbering plan</title>

          <author fullname="International Telecommunication Union">
            <organization abbrev="ITU">International Telecommunication Union</organization>
          </author>

          <date year="2010" />
        </front>

        <format target="http://www.itu.int/rec/T-REC-E.164-201011-I/en"
                type="HTML" />
      </reference>

      <reference anchor="zoneinfo">
        <front>
          <title>The tz database</title>

          <author fullname="Public Domain">
            <organization abbrev="Public">Public Domain</organization>
          </author>

          <date month="June" year="2011" />
        </front>

        <format target="http://www.twinsun.com/tz/tz-link.htm" type="HTML" />
      </reference>

      <reference anchor="OAuth.Responses">
        <front>
          <title>OAuth 2.0 Multiple Response Type Encoding Practices</title>

          <author fullname="Breno de Medeiros" initials="B." role="editor" surname="de Medeiros">
            <organization abbrev="Google">Google</organization>
          </author>

          <author fullname="Marius Scurtescu" initials="M." surname="Scurtescu">
            <organization abbrev="Google">Google</organization>
          </author>

          <author fullname="Paul Tarjan" initials="P." surname="Tarjan">
            <organization abbrev="Facebook"> Facebook</organization>
          </author>

          <author fullname="Michael B. Jones" initials="M.B." surname="Jones">
            <organization abbrev="Microsoft">Microsoft</organization>
          </author>

          <date day="25" month="February" year="2014" />
        </front>

        <format target="http://openid.net/specs/oauth-v2-multiple-response-types-1_0.html"
                type="HTML" />
      </reference>

      <reference anchor="IANA.Language">
        <front>
          <title>Language Subtag Registry</title>
          <author>
            <organization>Internet Assigned Numbers Authority (IANA)</organization>
          </author>
          <date year="2005"/>
        </front>

        <format target="http://www.iana.org/assignments/language-subtag-registry"
                type="TXT" />
      </reference>

      <reference anchor="CORS">
        <front>
          <title>Cross-Origin Resource Sharing</title>
          <author fullname="Anne van Kesteren">
            <organization abbrev="Opera">Opera Software ASA</organization>
          </author>
          <date day="27" month="July" year="2010"></date>
        </front>

        <format target="http://www.w3.org/TR/access-control/"
                type="HTML" />
      </reference>

    </references>
    <references title="Informative References">

      <?rfc include="http://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4949"?>

      <reference anchor="OpenID.Basic">
        <front>
          <title>OpenID Connect Basic Client Implementer's Guide 1.0</title>

          <author fullname="Nat Sakimura" initials="N." surname="Sakimura">
            <organization abbrev="NRI">Nomura Research Institute, Ltd.</organization>
          </author>

          <author fullname="John Bradley" initials="J." surname="Bradley">
            <organization abbrev="Ping Identity">Ping Identity</organization>
          </author>

          <author fullname="Michael B. Jones" initials="M.B." surname="Jones">
            <organization abbrev="Microsoft">Microsoft</organization>
          </author>

          <author fullname="Breno de Medeiros" initials="B." surname="de Medeiros">
            <organization abbrev="Google">Google</organization>
          </author>

          <author fullname="Chuck Mortimore" initials="C." surname="Mortimore">
            <organization abbrev="Salesforce">Salesforce</organization>
          </author>

          <date day="8" month="November" year="2014"/>
        </front>

        <format target="http://openid.net/specs/openid-connect-basic-1_0.html"
                type="HTML" />
      </reference>

      <reference anchor="OpenID.Implicit">
        <front>
          <title>OpenID Connect Implicit Client Implementer's Guide 1.0</title>

          <author fullname="Nat Sakimura" initials="N." surname="Sakimura">
            <organization abbrev="NRI">Nomura Research Institute, Ltd.</organization>
          </author>

          <author fullname="John Bradley" initials="J." surname="Bradley">
            <organization abbrev="Ping Identity">Ping Identity</organization>
          </author>

          <author fullname="Michael B. Jones" initials="M.B." surname="Jones">
            <organization abbrev="Microsoft">Microsoft</organization>
          </author>

          <author fullname="Breno de Medeiros" initials="B." surname="de Medeiros">
            <organization abbrev="Google">Google</organization>
          </author>

          <author fullname="Chuck Mortimore" initials="C." surname="Mortimore">
            <organization abbrev="Salesforce">Salesforce</organization>
          </author>

          <date day="8" month="November" year="2014"/>
        </front>

        <format target="http://openid.net/specs/openid-connect-implicit-1_0.html"
                type="HTML" />
      </reference>

      <reference anchor="OpenID.Session">
        <front>
          <title>OpenID Connect Session Management 1.0</title>

          <author fullname="Nat Sakimura" initials="N." surname="Sakimura">
            <organization abbrev="NRI">Nomura Research Institute, Ltd.</organization>
          </author>

          <author fullname="John Bradley" initials="J." surname="Bradley">
            <organization abbrev="Ping Identity">Ping Identity</organization>
          </author>

          <author fullname="Michael B. Jones" initials="M.B." surname="Jones">
            <organization abbrev="Microsoft">Microsoft</organization>
          </author>

          <author fullname="Breno de Medeiros" initials="B." surname="de Medeiros">
            <organization abbrev="Google">Google</organization>
          </author>

          <author fullname="Chuck Mortimore" initials="C." surname="Mortimore">
            <organization abbrev="Salesforce">Salesforce</organization>
          </author>

          <author fullname="Edmund Jay" initials="E." surname="Jay">
            <organization abbrev="Illumila">Illumila</organization>
          </author>

          <date day="8" month="November" year="2014"/>
        </front>

        <format target="http://openid.net/specs/openid-connect-session-1_0.html"
                type="HTML" />
      </reference>

      <reference anchor="OAuth.Post">
        <front>
          <title>OAuth 2.0 Form Post Response Mode</title>

          <author fullname="Michael B. Jones" initials="M.B." surname="Jones">
            <organization abbrev="Microsoft">Microsoft</organization>
          </author>

          <author fullname="Brian Campbell" initials="B." surname="Campbell">
            <organization abbrev="Ping Identity">Ping Identity</organization>
          </author>

          <date day="25" month="February" year="2014" />
        </front>

        <format target="http://openid.net/specs/oauth-v2-form-post-response-mode-1_0.html"
                type="HTML" />
      </reference>

      <reference anchor="OpenID.2.0">
        <front>
          <title>OpenID Authentication 2.0</title>

          <author fullname="OpenID Foundation">
            <organization abbrev="OIDF">OpenID Foundation</organization>
          </author>

          <date day="5" month="December" year="2007" />
        </front>

        <format target="http://openid.net/specs/openid-authentication-2_0.txt"
                type="TXT" />

        <format target="http://openid.net/specs/openid-authentication-2_0.html"
                type="HTML" />
      </reference>

      <reference anchor="OpenID.PAPE">
        <front>
          <title abbrev="OpenID Provider Auth Policy Extension">OpenID Provider
          Authentication Policy Extension 1.0</title>
          <author fullname="David Recordon" initials="D.R" surname="Recordon">
            <organization abbrev="Six Apart">Six Apart, Ltd.</organization>
            <address>
              <postal>
                <street>548 4th Street</street>
                <city>San Francisco</city>
                <region>CA</region>
                <code>94107</code>
                <country>USA</country>
              </postal>
              <email>david@sixapart.com</email>
              <uri>http://www.sixapart.com/</uri>
            </address>
          </author>
          <author fullname="Michael B. Jones" initials="M.J" surname="Jones">
            <organization abbrev="Microsoft">Microsoft Corporation</organization>
            <address>
              <postal>
                <street>One Microsoft Way, Building 40/5138</street>
                <city>Redmond</city>
                <region>WA</region>
                <code>98052</code>
                <country>USA</country>
              </postal>
              <email>mbj@microsoft.com</email>
              <uri>http://www.microsoft.com/</uri>
            </address>
          </author>
          <author fullname="Johnny Bufu" initials="J.B" role="editor" surname="Bufu">
            <organization>Independent</organization>
            <address>
              <email>johnny.bufu@gmail.com</email>
              <uri></uri>
            </address>
          </author>
          <author fullname="Jonathan Daugherty" initials="J.D" role="editor"
                  surname="Daugherty">
            <organization>JanRain</organization>
            <address>
              <postal>
                <street>5331 SW Macadam Ave. #375</street>
                <city>Portland</city>
                <region>OR</region>
                <code>97239</code>
                <country>USA</country>
              </postal>
              <email>cygnus@janrain.com</email>
              <uri>http://janrain.com/</uri>
            </address>
          </author>
          <author fullname="Nat Sakimura" initials="N.S" surname="Sakimura">
            <organization abbrev="NRI">Nomura Research Institute, Ltd.</organization>
            <address>
              <postal>
                <street>Marunouchi Kitaguchi Building, 1-6-5 Marunouchi</street>
                <city>Chiyoda-ku</city>
                <region>Tokyo</region>
                <code>100-0005</code>
                <country>Japan</country>
              </postal>
              <email>n-sakimura@nri.co.jp</email>
              <uri>http://www.nri.co.jp/</uri>
            </address>
          </author>
          <date day="30" month="December" year="2008" />
        </front>

        <format target="http://openid.net/specs/openid-provider-authentication-policy-extension-1_0.txt"
                type="TXT" />

        <format target="http://openid.net/specs/openid-provider-authentication-policy-extension-1_0.html"
                type="HTML" />
      </reference>

      <reference anchor="X.1252">
        <front>
          <title>ITU-T Recommendation X.1252 -- Cyberspace security -- Identity management
          -- Baseline identity management terms and definitions</title>

          <author fullname="International Telecommunication Union">
            <organization abbrev="ITU-T">International Telecommunication Union</organization>
          </author>

          <date month="November" year="2010" />
        </front>
        <seriesInfo name="ITU-T" value="X.1252" />
        <format target="http://www.itu.int/rec/dologin_pub.asp?lang=e&amp;id=T-REC-X.1252-201004-I!!PDF-E&amp;type=items"
                type="PDF" />
      </reference>

      <reference anchor="JWK.Thumbprint">
        <front>
          <title>JSON Web Key (JWK) Thumbprint</title>

          <author fullname="Michael B. Jones" initials="M.B." surname="Jones">
            <organization>Microsoft</organization>
            <address>
              <email>mbj@microsoft.com</email>
              <uri>http://self-issued.info/</uri>
            </address>
          </author>

          <date day="23" month="July" year="2014" />
        </front>

        <seriesInfo value="draft-jones-jose-jwk-thumbprint" name="Internet-Draft"/>
        <format target="http://tools.ietf.org/html/draft-jones-jose-jwk-thumbprint-01"
                type="HTML" />
      </reference>

    </references>

    <section anchor="AuthorizationExamples" title="Authorization Examples">

      <t>
        The following are non-normative examples of Authorization Requests with
        different <spanx style="verb">response_type</spanx> values and their responses
        (with line wraps within values for display purposes only):
      </t>

      <section anchor="codeExample" title="Example using response_type=code">

        <figure>
          <artwork><![CDATA[
  GET /authorize?
    response_type=code
    &client_id=s6BhdRkqt3
    &redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb
    &scope=openid%20profile%20email
    &nonce=n-0S6_WzA2Mj
    &state=af0ifjsldkj HTTP/1.1
  Host: server.example.com

  HTTP/1.1 302 Found
  Location: https://client.example.org/cb?
    code=Qcb0Orv1zh30vL1MPRsbm-diHiMwcLyZvn1arpZv-Jxf_11jnpEX3Tgfvk
    &state=af0ifjsldkj
    ]]></artwork>
        </figure>
      </section>

      <section anchor="id_tokenExample" title="Example using response_type=id_token">

        <figure>
          <artwork><![CDATA[
  GET /authorize?
    response_type=id_token
    &client_id=s6BhdRkqt3
    &redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb
    &scope=openid%20profile%20email
    &nonce=n-0S6_WzA2Mj
    &state=af0ifjsldkj HTTP/1.1
  Host: server.example.com

  HTTP/1.1 302 Found
  Location: https://client.example.org/cb#
    id_token=eyJraWQiOiIxZTlnZGs3IiwiYWxnIjoiUlMyNTYifQ.ewogImlz
    cyI6ICJodHRwOi8vc2VydmVyLmV4YW1wbGUuY29tIiwKICJzdWIiOiAiMjQ4
    Mjg5NzYxMDAxIiwKICJhdWQiOiAiczZCaGRSa3F0MyIsCiAibm9uY2UiOiAi
    bi0wUzZfV3pBMk1qIiwKICJleHAiOiAxMzExMjgxOTcwLAogImlhdCI6IDEz
    MTEyODA5NzAsCiAibmFtZSI6ICJKYW5lIERvZSIsCiAiZ2l2ZW5fbmFtZSI6
    ICJKYW5lIiwKICJmYW1pbHlfbmFtZSI6ICJEb2UiLAogImdlbmRlciI6ICJm
    ZW1hbGUiLAogImJpcnRoZGF0ZSI6ICIwMDAwLTEwLTMxIiwKICJlbWFpbCI6
    ICJqYW5lZG9lQGV4YW1wbGUuY29tIiwKICJwaWN0dXJlIjogImh0dHA6Ly9l
    eGFtcGxlLmNvbS9qYW5lZG9lL21lLmpwZyIKfQ.rHQjEmBqn9Jre0OLykYNn
    spA10Qql2rvx4FsD00jwlB0Sym4NzpgvPKsDjn_wMkHxcp6CilPcoKrWHcip
    R2iAjzLvDNAReF97zoJqq880ZD1bwY82JDauCXELVR9O6_B0w3K-E7yM2mac
    AAgNCUwtik6SjoSUZRcf-O5lygIyLENx882p6MtmwaL1hd6qn5RZOQ0TLrOY
    u0532g9Exxcm-ChymrB4xLykpDj3lUivJt63eEGGN6DH5K6o33TcxkIjNrCD
    4XB1CKKumZvCedgHHF3IAK4dVEDSUoGlH9z4pP_eWYNXvqQOjGs-rDaQzUHl
    6cQQWNiDpWOl_lxXjQEvQ
    &state=af0ifjsldkj
]]></artwork>
        </figure>

        <t>
          The value of the <spanx style="verb">id_token</spanx> parameter is the ID Token,
          which is a signed JWT,
          containing three base64url encoded segments separated by period ('.') characters.
          The first segment represents the JOSE Header.
          Base64url decoding it will result in the following set of Header Parameters:
        </t>
        <figure>
          <artwork><![CDATA[
  {"kid":"1e9gdk7","alg":"RS256"}
]]></artwork>
        </figure>
        <t>
          The <spanx style="verb">alg</spanx> value represents the algorithm
          that was used to sign the JWT, in this case
          <spanx style="verb">RS256</spanx>, representing RSASSA-PKCS-v1_5 using SHA-256.
          The <spanx style="verb">kid</spanx> value is a key identifier used
          in identifying the key to be used to verify the signature.
          If the <spanx style="verb">kid</spanx> value is unknown to the RP,
          it needs to retrieve the contents of the OP's JWK Set again
          to obtain the OP's current set of keys.
        </t>
        <figure>
          <preamble>
            The second segment represents the Claims in the ID Token.
            Verifying and decoding the ID Token will yield the following Claims:
          </preamble>
          <artwork><![CDATA[
  {
   "iss": "http://server.example.com",
   "sub": "248289761001",
   "aud": "s6BhdRkqt3",
   "nonce": "n-0S6_WzA2Mj",
   "exp": 1311281970,
   "iat": 1311280970,
   "name": "Jane Doe",
   "given_name": "Jane",
   "family_name": "Doe",
   "gender": "female",
   "birthdate": "0000-10-31",
   "email": "janedoe@example.com",
   "picture": "http://example.com/janedoe/me.jpg"
  }
]]></artwork>
        </figure>
        <t>
          The third segment represents the ID Token signature,
          which is verified as described in <xref target="JWS"/>.
        </t>
      </section>

      <section anchor="id_token-tokenExample" title="Example using response_type=id_token&nbsp;token">

        <figure>
          <artwork><![CDATA[
  GET /authorize?
    response_type=id_token%20token
    &client_id=s6BhdRkqt3
    &redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb
    &scope=openid%20profile%20email
    &nonce=n-0S6_WzA2Mj
    &state=af0ifjsldkj HTTP/1.1
  Host: server.example.com

  HTTP/1.1 302 Found
  Location: https://client.example.org/cb#
    access_token=jHkWEdUXMU1BwAsC4vtUsZwnNvTIxEl0z9K3vx5KF0Y
    &token_type=Bearer
    &id_token=eyJraWQiOiIxZTlnZGs3IiwiYWxnIjoiUlMyNTYifQ.ewogIml
    zcyI6ICJodHRwOi8vc2VydmVyLmV4YW1wbGUuY29tIiwKICJzdWIiOiAiMjQ
    4Mjg5NzYxMDAxIiwKICJhdWQiOiAiczZCaGRSa3F0MyIsCiAibm9uY2UiOiA
    ibi0wUzZfV3pBMk1qIiwKICJleHAiOiAxMzExMjgxOTcwLAogImlhdCI6IDE
    zMTEyODA5NzAsCiAiYXRfaGFzaCI6ICI3N1FtVVB0alBmeld0RjJBbnBLOVJ
    RIgp9.F9gRev0Dt2tKcrBkHy72cmRqnLdzw9FLCCSebV7mWs7o_sv2O5s6zM
    ky2kmhHTVx9HmdvNnx9GaZ8XMYRFeYk8L5NZ7aYlA5W56nsG1iWOou_-gji0
    ibWIuuf4Owaho3YSoi7EvsTuLFz6tq-dLyz0dKABMDsiCmJ5wqkPUDTE3QTX
    jzbUmOzUDli-gCh5QPuZAq0cNW3pf_2n4zpvTYtbmj12cVcxGIMZby7TMWES
    RjQ9_o3jvhVNcCGcE0KAQXejhA1ocJhNEvQNqMFGlBb6_0RxxKjDZ-Oa329e
    GDidOvvp0h5hoES4a8IuGKS7NOcpp-aFwp0qVMDLI-Xnm-Pg
    &state=af0ifjsldkj
]]></artwork>
        </figure>

        <figure>
          <preamble>
            Verifying and decoding the ID Token will yield the following Claims:
          </preamble>
          <artwork><![CDATA[
  {
   "iss": "http://server.example.com",
   "sub": "248289761001",
   "aud": "s6BhdRkqt3",
   "nonce": "n-0S6_WzA2Mj",
   "exp": 1311281970,
   "iat": 1311280970,
   "at_hash": "77QmUPtjPfzWtF2AnpK9RQ"
  }
]]></artwork>
        </figure>
      </section>

      <section anchor="code-id_tokenExample" title="Example using response_type=code&nbsp;id_token">

        <figure>
          <artwork><![CDATA[
  GET /authorize?
    response_type=code%20id_token
    &client_id=s6BhdRkqt3
    &redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb
    &scope=openid%20profile%20email
    &nonce=n-0S6_WzA2Mj
    &state=af0ifjsldkj HTTP/1.1
  Host: server.example.com

  HTTP/1.1 302 Found
  Location: https://client.example.org/cb#
    code=Qcb0Orv1zh30vL1MPRsbm-diHiMwcLyZvn1arpZv-Jxf_11jnpEX3Tgfvk
    &id_token=eyJraWQiOiIxZTlnZGs3IiwiYWxnIjoiUlMyNTYifQ.ewogIml
    zcyI6ICJodHRwOi8vc2VydmVyLmV4YW1wbGUuY29tIiwKICJzdWIiOiAiMjQ
    4Mjg5NzYxMDAxIiwKICJhdWQiOiAiczZCaGRSa3F0MyIsCiAibm9uY2UiOiA
    ibi0wUzZfV3pBMk1qIiwKICJleHAiOiAxMzExMjgxOTcwLAogImlhdCI6IDE
    zMTEyODA5NzAsCiAiY19oYXNoIjogIkxEa3RLZG9RYWszUGswY25YeENsdEE
    iCn0.XW6uhdrkBgcGx6zVIrCiROpWURs-4goO1sKA4m9jhJIImiGg5muPUcN
    egx6sSv43c5DSn37sxCRrDZZm4ZPBKKgtYASMcE20SDgvYJdJS0cyuFw7Ijp
    _7WnIjcrl6B5cmoM6ylCvsLMwkoQAxVublMwH10oAxjzD6NEFsu9nipkszWh
    sPePf_rM4eMpkmCbTzume-fzZIi5VjdWGGEmzTg32h3jiex-r5WTHbj-u5HL
    7u_KP3rmbdYNzlzd1xWRYTUs4E8nOTgzAUwvwXkIQhOh5TPcSMBYy6X3E7-_
    gr9Ue6n4ND7hTFhtjYs3cjNKIA08qm5cpVYFMFMG6PkhzLQ
    &state=af0ifjsldkj
]]></artwork>
        </figure>

        <figure>
          <preamble>
            Verifying and decoding the ID Token will yield the following Claims:
          </preamble>
          <artwork><![CDATA[
  {
   "iss": "http://server.example.com",
   "sub": "248289761001",
   "aud": "s6BhdRkqt3",
   "nonce": "n-0S6_WzA2Mj",
   "exp": 1311281970,
   "iat": 1311280970,
   "c_hash": "LDktKdoQak3Pk0cnXxCltA"
  }
]]></artwork>
        </figure>
      </section>

      <section anchor="code-tokenExample" title="Example using response_type=code&nbsp;token">

        <figure>
          <artwork><![CDATA[
  GET /authorize?
    response_type=code%20token
    &client_id=s6BhdRkqt3
    &redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb
    &scope=openid%20profile%20email
    &nonce=n-0S6_WzA2Mj
    &state=af0ifjsldkj HTTP/1.1
  Host: server.example.com

  HTTP/1.1 302 Found
  Location: https://client.example.org/cb#
    code=Qcb0Orv1zh30vL1MPRsbm-diHiMwcLyZvn1arpZv-Jxf_11jnpEX3Tgfvk
    &access_token=jHkWEdUXMU1BwAsC4vtUsZwnNvTIxEl0z9K3vx5KF0Y
    &token_type=Bearer
    &state=af0ifjsldkj
]]></artwork>
        </figure>
      </section>

      <section anchor="code-id_token-tokenExample" title="Example using response_type=code&nbsp;id_token&nbsp;token">

        <figure>
          <artwork><![CDATA[
  GET /authorize?
    response_type=code%20id_token%20token
    &client_id=s6BhdRkqt3
    &redirect_uri=https%3A%2F%2Fclient.example.org%2Fcb
    &scope=openid%20profile%20email
    &nonce=n-0S6_WzA2Mj
    &state=af0ifjsldkj HTTP/1.1
  Host: server.example.com

  HTTP/1.1 302 Found
  Location: https://client.example.org/cb#
    code=Qcb0Orv1zh30vL1MPRsbm-diHiMwcLyZvn1arpZv-Jxf_11jnpEX3Tgfvk
    &access_token=jHkWEdUXMU1BwAsC4vtUsZwnNvTIxEl0z9K3vx5KF0Y
    &token_type=Bearer
    &id_token=eyJraWQiOiIxZTlnZGs3IiwiYWxnIjoiUlMyNTYifQ.ewogIml
    zcyI6ICJodHRwOi8vc2VydmVyLmV4YW1wbGUuY29tIiwKICJzdWIiOiAiMjQ
    4Mjg5NzYxMDAxIiwKICJhdWQiOiAiczZCaGRSa3F0MyIsCiAibm9uY2UiOiA
    ibi0wUzZfV3pBMk1qIiwKICJleHAiOiAxMzExMjgxOTcwLAogImlhdCI6IDE
    zMTEyODA5NzAsCiAiY19oYXNoIjogIkxEa3RLZG9RYWszUGswY25YeENsdEE
    iCn0.XW6uhdrkBgcGx6zVIrCiROpWURs-4goO1sKA4m9jhJIImiGg5muPUcN
    egx6sSv43c5DSn37sxCRrDZZm4ZPBKKgtYASMcE20SDgvYJdJS0cyuFw7Ijp
    _7WnIjcrl6B5cmoM6ylCvsLMwkoQAxVublMwH10oAxjzD6NEFsu9nipkszWh
    sPePf_rM4eMpkmCbTzume-fzZIi5VjdWGGEmzTg32h3jiex-r5WTHbj-u5HL
    7u_KP3rmbdYNzlzd1xWRYTUs4E8nOTgzAUwvwXkIQhOh5TPcSMBYy6X3E7-_
    gr9Ue6n4ND7hTFhtjYs3cjNKIA08qm5cpVYFMFMG6PkhzLQ
    &state=af0ifjsldkj
]]></artwork>
        </figure>

        <figure>
          <preamble>
            Verifying and decoding the ID Token will yield the following Claims:
          </preamble>
          <artwork><![CDATA[
  {
   "iss": "http://server.example.com",
   "sub": "248289761001",
   "aud": "s6BhdRkqt3",
   "nonce": "n-0S6_WzA2Mj",
   "exp": 1311281970,
   "iat": 1311280970,
   "at_hash": "77QmUPtjPfzWtF2AnpK9RQ",
   "c_hash": "LDktKdoQak3Pk0cnXxCltA"
  }
]]></artwork>
        </figure>
      </section>

      <section anchor="ExampleRSAKey" title="RSA Key Used in Examples">

        <figure>
          <preamble>
            The following RSA public key, represented in JWK format, can be used to
            validate the ID Token signatures in the above examples
            (with line wraps within values for display purposes only):
          </preamble>

          <artwork><![CDATA[
  {
   "kty":"RSA",
   "kid":"1e9gdk7",
   "n":"w7Zdfmece8iaB0kiTY8pCtiBtzbptJmP28nSWwtdjRu0f2GFpajvWE4VhfJA
        jEsOcwYzay7XGN0b-X84BfC8hmCTOj2b2eHT7NsZegFPKRUQzJ9wW8ipn_aD
        JWMGDuB1XyqT1E7DYqjUCEOD1b4FLpy_xPn6oV_TYOfQ9fZdbE5HGxJUzeku
        GcOKqOQ8M7wfYHhHHLxGpQVgL0apWuP2gDDOdTtpuld4D2LK1MZK99s9gaSj
        RHE8JDb1Z4IGhEcEyzkxswVdPndUWzfvWBBWXWxtSUvQGBRkuy1BHOa4sP6F
        KjWEeeF7gm7UMs2Nm2QUgNZw6xvEDGaLk4KASdIxRQ",
   "e":"AQAB"
  }
]]></artwork>
        </figure>

<!-- The private key is archived here, but is not included in the specification output.
        <figure>
          <preamble>
            The following RSA private key, represented in JWK format, was used to
            sign the ID Tokens in the above examples
            (with line wraps within values for display purposes only):
          </preamble>

          <artwork><![CDATA[
  {"kty":"RSA",
   "kid":"1e9gdk7",
   "n":"w7Zdfmece8iaB0kiTY8pCtiBtzbptJmP28nSWwtdjRu0f2GFpajvWE4VhfJA
        jEsOcwYzay7XGN0b-X84BfC8hmCTOj2b2eHT7NsZegFPKRUQzJ9wW8ipn_aD
        JWMGDuB1XyqT1E7DYqjUCEOD1b4FLpy_xPn6oV_TYOfQ9fZdbE5HGxJUzeku
        GcOKqOQ8M7wfYHhHHLxGpQVgL0apWuP2gDDOdTtpuld4D2LK1MZK99s9gaSj
        RHE8JDb1Z4IGhEcEyzkxswVdPndUWzfvWBBWXWxtSUvQGBRkuy1BHOa4sP6F
        KjWEeeF7gm7UMs2Nm2QUgNZw6xvEDGaLk4KASdIxRQ",
   "e":"AQAB",
   "d":"N49U-WaWoPlw6LKVX2lN4HtYT9fx_sg9c8rWwev3EfEUi7j2xPGxiOMZ7x23
        v1wrbPIMtNfmTnOu1mSMVftiuc8-3KDS1sbqb-o_UEiA3YvSahS1RAkyRmwo
        DPwQozaLe4nNz87QXvjIwNPR4GMCe5oaQuQoh5l5m6ATzU-0c-NBevJY9HnH
        KF8C8lcQhdb0iaNahwNGR8XTVqZmnX0JydxSj2q5co5riguC1nMZbQs1mdQ_
        PRMCnmum3doFoqdvLd3VM58fBiLRmcfBn5CUcYfQxrF0kQqiTH99JIDGDr2h
        efDNIBDcPru1c8OEFZKLWHumwSxruwLvOgygGpYToQ",
   "p":"80AByCAy81oPRqrzFAjPZVBmu_jWrgoft4VRSvpwfZfjB2_JioXm9EEIR9hu
        foX9e7bYdF-SkYA_JOES9OJ4Tr0DMT8T13hoEarjNJsZGYY8pEgh0-pA-q_z
        5MmB5fwVtKJ5F3eDO-cvnVHVqFpvZDRwzZaU4-NzWGGTJvhs4Fk",
   "q":"zfh8P5XNE2FS4i7RBBrOM9eSkPuqhYGCSNIc7JzccQnLIvswnH5mYun0dQ-3
        sSS78MDvFzkMaH3Sggha2V94hb2szWzvb5pqdrTFPL_hSm8Fl_U0H1eR9FdY
        i5Ak7crjVdAfSeVufpOcZI372L6yi_Vk61LU_bI4x5ucn4t1ms0",
   "dp":"b3uiVWoMb-OSpLyscz4mbzSOIRBGs7UIHEAJpedpruXxsvLU15vO4Zr8hJD
        48xvNtOl0AsHalrzEM87DtWAl61BNKkDSgyo36AD96Jo8wqn3GQPGHS17Yml
        Jyk1gL1t9RzA_dzXa-5VVCTD8TxBDhRVTraWZz2fq8VKm8nFg1OE",
   "dq":"Qipp149K0sf39Tru4C-wQA0nQzXlYH_rF3OP4R6-3f00aWdiBVPBllLrudM
        zwk83pK6F3-Lurn6E6kq-zIeT0vrMkS1GeYaUXs_RcKN_PwcNN_SIKu1ZsLG
        Ce0rx4gXEI-P4uSdf6H-IxPCrj8Qq3TUWl1YDn__pp43Asav-Op0",
   "qi":"yTgfxGsqdbULf6uKfzoBE0zmFFwnEFeigvkI1w6sy5FeZ65JEb4aNBx0D8z
        PvD8-rPuY_oEjYUuAr5tbtZRRqlkClcxdAwM3TjamXU1FKcLjmDdvt_dl1aM
        w9DXBYKadmrgxnLgI3vkFNHzQxClXwAGRPvWWbGBqL1V5uj8O82o"
  }
]]></artwork>
        </figure>
-->
      </section>

    </section>

    <section anchor="Acknowledgements" title="Acknowledgements">
      <t>As a successor version of OpenID, this specification heavily relies
      on ideas explored in <xref target="OpenID.2.0">OpenID Authentication 2.0</xref>. Please
      refer to Appendix C of OpenID Authentication 2.0 for the full list of
      the contributors for that specification.</t>

      <t>
        In addition, the OpenID Community would like to thank the following people for
        their contributions to this specification:
      </t>
      <t>
        <list style="empty">
          <t>Naveen Agarwal (naa@google.com), Google</t>
          <t>Amanda Anganes (aanganes@mitre.org), MITRE</t>
          <t>Casper Biering (cb@peercraft.com), Peercraft</t>
          <t>John Bradley (ve7jtb@ve7jtb.com), Ping Identity</t>
          <t>Tim Bray (tbray@textuality.com), Google</t>
          <t>Johnny Bufu (jbufu@janrain.com), Janrain</t>
          <t>Brian Campbell (bcampbell@pingidentity.com), Ping Identity</t>
          <t>Blaine Cook (romeda@gmail.com), Independent</t>
          <t>Breno de Medeiros (breno@google.com), Google</t>
          <t>Pamela Dingle (pdingle@pingidentity.com), Ping Identity</t>
          <t>Vladimir Dzhuvinov (vladimir@nimbusds.com), Nimbus Directory Services</t>
          <t>George Fletcher (george.fletcher@corp.aol.com), AOL</t>
          <t>Roland Hedberg (roland.hedberg@adm.umu.se), University of Umea</t>
          <t>Ryo Ito (ryo.ito@mixi.co.jp), mixi, Inc.</t>
          <t>Edmund Jay (ejay@mgi1.com), Illumila</t>
          <t>Michael B. Jones (mbj@microsoft.com), Microsoft</t>
          <t>Torsten Lodderstedt (t.lodderstedt@telekom.de), Deutsche Telekom</t>
          <t>Nov Matake (nov@matake.jp), Independent</t>
          <t>Chuck Mortimore (cmortimore@salesforce.com), Salesforce</t>
          <t>Anthony Nadalin (tonynad@microsoft.com), Microsoft</t>
          <t>Hideki Nara (hdknr@ic-tact.co.jp), Tact Communications</t>
          <t>Axel Nennker (axel.nennker@telekom.de), Deutsche Telekom</t>
          <t>David Recordon (dr@fb.com), Facebook</t>
          <t>Justin Richer (jricher@mitre.org), MITRE</t>
          <t>Nat Sakimura (n-sakimura@nri.co.jp), Nomura Research Institute, Ltd.</t>
          <t>Luke Shepard (lshepard@fb.com), Facebook</t>
          <t>Andreas &Aring;kre Solberg (andreas.solberg@uninett.no), UNINET</t>
          <t>Paul Tarjan (pt@fb.com), Facebook</t>
        </list>
      </t>
    </section>

    <section anchor="Notices" title="Notices">
      <t>Copyright (c) 2014 The OpenID Foundation.</t>
      <t>
        The OpenID Foundation (OIDF) grants to any Contributor, developer,
        implementer, or other interested party a non-exclusive, royalty free,
        worldwide copyright license to reproduce, prepare derivative works from,
        distribute, perform and display, this Implementers Draft or
        Final Specification solely for the purposes of (i) developing
        specifications, and (ii) implementing Implementers Drafts and
        Final Specifications based on such documents, provided that attribution
        be made to the OIDF as the source of the material, but that such attribution
        does not indicate an endorsement by the OIDF.
      </t>
      <t>
        The technology described in this specification was
        made available from contributions from various sources,
        including members of the OpenID Foundation and others.
        Although the OpenID Foundation has taken steps to help ensure
        that the technology is available for distribution, it takes
        no position regarding the validity or scope of any intellectual
        property or other rights that might be claimed to pertain to
        the implementation or use of the technology described in
        this specification or the extent to which any license under
        such rights might or might not be available; neither does it
        represent that it has made any independent effort to identify
        any such rights.  The OpenID Foundation and the contributors
        to this specification make no (and hereby expressly disclaim any)
        warranties (express, implied, or otherwise), including implied
        warranties of merchantability, non-infringement, fitness for
        a particular purpose, or title, related to this specification,
        and the entire risk as to implementing this specification is
        assumed by the implementer.  The OpenID Intellectual
        Property Rights policy requires contributors to offer
        a patent promise not to assert certain patent claims against
        other contributors and against implementers.  The OpenID Foundation invites
        any interested party to bring to its attention any copyrights,
        patents, patent applications, or other proprietary rights
        that may cover technology that may be required to practice
        this specification.
      </t>
    </section>

  </back>
</rfc>
